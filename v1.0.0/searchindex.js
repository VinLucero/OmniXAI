Search.setIndex({"docnames": ["index", "omnixai", "omnixai.data", "omnixai.explainers", "omnixai.explainers.data", "omnixai.explainers.nlp", "omnixai.explainers.nlp.agnostic", "omnixai.explainers.nlp.counterfactual", "omnixai.explainers.nlp.specific", "omnixai.explainers.tabular", "omnixai.explainers.tabular.agnostic", "omnixai.explainers.tabular.counterfactual", "omnixai.explainers.tabular.specific", "omnixai.explainers.timeseries", "omnixai.explainers.timeseries.agnostic", "omnixai.explainers.timeseries.counterfactual", "omnixai.explainers.vision", "omnixai.explainers.vision.agnostic", "omnixai.explainers.vision.counterfactual", "omnixai.explainers.vision.specific", "omnixai.explanations", "omnixai.explanations.image", "omnixai.explanations.tabular", "omnixai.explanations.text", "omnixai.explanations.timeseries", "omnixai.preprocessing", "omnixai.visualization", "tutorials", "tutorials/data_analysis", "tutorials/misc/data_objects", "tutorials/misc/preprocessing", "tutorials/nlp", "tutorials/nlp/ce_classification", "tutorials/nlp/ce_qa", "tutorials/nlp/ig_tf", "tutorials/nlp/ig_torch", "tutorials/nlp/l2x", "tutorials/nlp/lime", "tutorials/nlp/shap", "tutorials/nlp_imdb", "tutorials/omnixai_in_ml_workflow", "tutorials/tabular/ale", "tutorials/tabular/ce", "tutorials/tabular/gpt", "tutorials/tabular/l2x", "tutorials/tabular/lime", "tutorials/tabular/linear", "tutorials/tabular/mace", "tutorials/tabular/pdp", "tutorials/tabular/ranking", "tutorials/tabular/sensitivity", "tutorials/tabular/shap", "tutorials/tabular/tree", "tutorials/tabular_classification", "tutorials/tabular_regression", "tutorials/timeseries", "tutorials/timeseries/mace", "tutorials/timeseries/shap", "tutorials/vision", "tutorials/vision/ce_imagenet", "tutorials/vision/ce_tf", "tutorials/vision/ce_torch", "tutorials/vision/cem_tf", "tutorials/vision/cem_torch", "tutorials/vision/feature_map_tf", "tutorials/vision/feature_map_torch", "tutorials/vision/feature_visualization_tf", "tutorials/vision/feature_visualization_torch", "tutorials/vision/gradcam_tf", "tutorials/vision/gradcam_torch", "tutorials/vision/gradcam_vlm", "tutorials/vision/ig_tf", "tutorials/vision/ig_torch", "tutorials/vision/ig_vlm", "tutorials/vision/l2x", "tutorials/vision/lime", "tutorials/vision/shap"], "filenames": ["index.rst", "omnixai.rst", "omnixai.data.rst", "omnixai.explainers.rst", "omnixai.explainers.data.rst", "omnixai.explainers.nlp.rst", "omnixai.explainers.nlp.agnostic.rst", "omnixai.explainers.nlp.counterfactual.rst", "omnixai.explainers.nlp.specific.rst", "omnixai.explainers.tabular.rst", "omnixai.explainers.tabular.agnostic.rst", "omnixai.explainers.tabular.counterfactual.rst", "omnixai.explainers.tabular.specific.rst", "omnixai.explainers.timeseries.rst", "omnixai.explainers.timeseries.agnostic.rst", "omnixai.explainers.timeseries.counterfactual.rst", "omnixai.explainers.vision.rst", "omnixai.explainers.vision.agnostic.rst", "omnixai.explainers.vision.counterfactual.rst", "omnixai.explainers.vision.specific.rst", "omnixai.explanations.rst", "omnixai.explanations.image.rst", "omnixai.explanations.tabular.rst", "omnixai.explanations.text.rst", "omnixai.explanations.timeseries.rst", "omnixai.preprocessing.rst", "omnixai.visualization.rst", "tutorials.rst", "tutorials/data_analysis.ipynb", "tutorials/misc/data_objects.ipynb", "tutorials/misc/preprocessing.ipynb", "tutorials/nlp.ipynb", "tutorials/nlp/ce_classification.ipynb", "tutorials/nlp/ce_qa.ipynb", "tutorials/nlp/ig_tf.ipynb", "tutorials/nlp/ig_torch.ipynb", "tutorials/nlp/l2x.ipynb", "tutorials/nlp/lime.ipynb", "tutorials/nlp/shap.ipynb", "tutorials/nlp_imdb.ipynb", "tutorials/omnixai_in_ml_workflow.ipynb", "tutorials/tabular/ale.ipynb", "tutorials/tabular/ce.ipynb", "tutorials/tabular/gpt.ipynb", "tutorials/tabular/l2x.ipynb", "tutorials/tabular/lime.ipynb", "tutorials/tabular/linear.ipynb", "tutorials/tabular/mace.ipynb", "tutorials/tabular/pdp.ipynb", "tutorials/tabular/ranking.ipynb", "tutorials/tabular/sensitivity.ipynb", "tutorials/tabular/shap.ipynb", "tutorials/tabular/tree.ipynb", "tutorials/tabular_classification.ipynb", "tutorials/tabular_regression.ipynb", "tutorials/timeseries.ipynb", "tutorials/timeseries/mace.ipynb", "tutorials/timeseries/shap.ipynb", "tutorials/vision.ipynb", "tutorials/vision/ce_imagenet.ipynb", "tutorials/vision/ce_tf.ipynb", "tutorials/vision/ce_torch.ipynb", "tutorials/vision/cem_tf.ipynb", "tutorials/vision/cem_torch.ipynb", "tutorials/vision/feature_map_tf.ipynb", "tutorials/vision/feature_map_torch.ipynb", "tutorials/vision/feature_visualization_tf.ipynb", "tutorials/vision/feature_visualization_torch.ipynb", "tutorials/vision/gradcam_tf.ipynb", "tutorials/vision/gradcam_torch.ipynb", "tutorials/vision/gradcam_vlm.ipynb", "tutorials/vision/ig_tf.ipynb", "tutorials/vision/ig_torch.ipynb", "tutorials/vision/ig_vlm.ipynb", "tutorials/vision/l2x.ipynb", "tutorials/vision/lime.ipynb", "tutorials/vision/shap.ipynb"], "titles": ["Welcome to OmniXAI\u2019s documentation!", "OmniXAI: An Explanation Toolbox", "omnixai.data package", "omnixai.explainers package", "omnixai.explainers.data package", "omnixai.explainers.nlp package", "omnixai.explainers.nlp.agnostic package", "omnixai.explainers.nlp.counterfactual package", "omnixai.explainers.nlp.specific package", "omnixai.explainers.tabular package", "omnixai.explainers.tabular.agnostic package", "omnixai.explainers.tabular.counterfactual package", "omnixai.explainers.tabular.specific package", "omnixai.explainers.timeseries package", "omnixai.explainers.timeseries.agnostic package", "omnixai.explainers.timeseries.counterfactual package", "omnixai.explainers.vision package", "omnixai.explainers.vision.agnostic package", "omnixai.explainers.vision.counterfactual package", "omnixai.explainers.vision.specific package", "omnixai.explanations package", "omnixai.explanations.image package", "omnixai.explanations.tabular package", "omnixai.explanations.text package", "omnixai.explanations.timeseries package", "omnixai.preprocessing package", "omnixai.visualization package", "Tutorials &amp; Example Code", "DataAnalyzer for feature analysis", "Examples of data objects", "Examples of data preprocessing", "NLPExplainer for sentiment analysis", "Counterfactual explanation for text classification", "Counterfactual explanation for question answering", "Integrated-gradient on IMDB dataset (Tensorflow)", "Integrated-gradient on IMDB dataset (PyTorch)", "L2X (learning to explain) for text classification", "LIME for text classification", "SHAP for sentiment analysis", "NLPExplainer on IMDB dataset", "OmniXAI in a ML workflow", "Accumulated local effects (ALE)", "Counterfactual explanation on Diabetes dataset", "GPT explainer for income prediction", "L2X (learning to explain) for income prediction", "LIME for income prediction", "Logistic regression for income prediction", "MACE counterfactual explanation for income prediction", "Paritial dependence plots", "Learning to Rank Expanations Demo", "Morris sensitivity analysis", "SHAP for income prediction", "Decision tree for income prediction", "TabularExplainer for income prediction (classification)", "TabularExplainer for house-price prediction (regression)", "TimeseriesExplainer for time series anomaly detection", "Counterfactual explanation on time series anomaly detection", "SHAP for time series anomaly detection", "VisionExplainer for image classification", "Counterfactual explanation on ImageNet", "Counterfactual explanation on MNIST (Tensorflow)", "Counterfactual explanation on MNIST (PyTorch)", "Contrastive explanation on MNIST (Tensorflow)", "Contrastive explanation on MNIST (PyTorch)", "Feature map visualization (Tensorflow)", "Feature map visualization (PyTorch)", "Feature visualization (Tensorflow)", "Feature visualization (PyTorch)", "Grad-CAM for image classification (Tensorflow)", "Grad-CAM for image classification (PyTorch)", "Grad-CAM for visual language tasks", "Integrated-gradient for image classification (Tensorflow)", "Integrated-gradient for image classification (PyTorch)", "Integrated-gradient for visual language tasks", "L2X (learning to explain) on MNIST", "LIME for image classification", "SHAP on MNIST"], "terms": {"short": [0, 1], "omni": [0, 1], "explain": [0, 1, 2, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76], "ai": [0, 1, 2], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 17, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "python": [0, 1, 49, 70, 73, 76], "librari": [0, 2, 6, 28, 29, 30, 32, 33, 38, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 64, 70, 73], "xai": [0, 1], "offer": [0, 1, 36], "wai": [0, 1, 3, 25, 36, 49], "interpret": [0, 1, 6, 10, 17, 36, 44, 74], "machin": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 16, 17, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 74, 75], "learn": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 27, 31, 37, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 75], "address": [0, 1], "mani": [0, 1, 36], "pain": [0, 1], "point": [0, 1, 36, 55, 56, 57], "decis": [0, 1, 11, 12, 18, 22, 27, 42, 59, 60, 61], "made": [0, 1, 36], "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "practic": [0, 1, 3, 53, 54, 55, 58], "aim": [0, 1], "one": [0, 1, 2, 3, 6, 14, 15, 20, 21, 22, 23, 24, 25, 29, 30, 31, 36, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 68, 69, 71, 72, 74, 75, 76], "stop": [0, 1], "comprehens": [0, 1], "make": [0, 1, 25, 36, 40, 55], "easi": [0, 1, 31, 39, 53, 54, 55, 58], "data": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76], "scientist": [0, 1], "ml": [0, 1, 3, 4, 12, 27, 28, 31, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 76], "research": [0, 1, 70, 73], "practition": [0, 1], "who": [0, 1, 36], "need": [0, 1, 2, 3, 29, 31, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76], "explan": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "variou": [0, 1], "type": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 34, 35, 36, 39, 41, 42, 43, 44, 45, 48, 49, 51, 53, 54, 55, 57, 58, 66, 67, 68, 69, 71, 72, 74], "method": [0, 7, 17, 19, 21, 22, 25, 29, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 59, 60, 61, 62, 63, 66, 67, 71, 72, 74, 76], "differ": [0, 4, 5, 9, 11, 13, 16, 28, 36, 40, 41, 43, 44, 45, 47, 48, 51, 53, 54, 66, 67, 74], "stage": [0, 1, 40, 43], "process": [0, 1, 3, 8, 12, 18, 19, 25, 31, 34, 35, 39, 49, 53, 54, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 76], "includ": [0, 1, 2, 18, 19, 25, 58], "rich": [0, 1], "famili": [0, 1, 40, 43, 45, 47, 51, 53], "integr": [0, 1, 8, 12, 19, 21, 27, 31, 39, 58], "unifi": [0, 1, 3, 31, 39, 53, 54, 55, 58], "interfac": [0, 1, 3, 31, 36, 39, 44, 53, 54, 55, 58, 74], "which": [0, 1, 2, 3, 5, 8, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 73, 74, 76], "support": [0, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 17, 19, 29, 30, 31, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 75, 76], "multipl": [0, 1, 2, 3, 4, 5, 9, 13, 16, 25, 28, 36, 40, 44, 66, 67, 74], "tabular": [0, 1, 3, 4, 20, 28, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "imag": [0, 1, 3, 11, 12, 16, 17, 18, 19, 20, 27, 36, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 73, 74, 76], "text": [0, 1, 3, 5, 6, 7, 8, 20, 22, 27, 31, 33, 34, 35, 38, 39, 43, 49, 70, 73], "time": [0, 1, 2, 3, 4, 5, 9, 13, 14, 15, 16, 24, 27, 28, 36, 40, 43], "seri": [0, 1, 2, 3, 13, 14, 15, 24, 27], "tradit": [0, 1], "scikit": [0, 1, 3, 5, 9, 10, 12, 13, 16, 31, 39, 48, 53, 54, 58], "deep": [0, 1, 19, 64, 68, 69], "pytorch": [0, 1, 3, 6, 10, 17, 27, 31, 36, 39, 44, 53, 54, 58, 70, 73, 74, 76], "tensorflow": [0, 1, 3, 5, 9, 13, 16, 27, 31, 39, 42, 49, 53, 54, 58, 67, 76], "rang": [0, 1, 18, 19, 25, 34, 35, 39, 58, 59, 61, 63, 64, 66, 67, 68, 69, 71, 72, 74, 75], "divers": [0, 1, 47], "specif": [0, 1, 3, 5, 9, 13, 16, 20, 21, 22, 23, 24, 31, 34, 35, 39, 40, 43, 52, 53, 54, 55, 58, 64, 65, 66, 67, 68, 69, 70, 73], "agnost": [0, 1, 3, 5, 9, 11, 13, 15, 16, 35, 36, 39, 44, 45, 47, 49, 51, 74, 76], "attribut": [0, 1, 70, 73], "counterfactu": [0, 1, 5, 9, 13, 16, 20, 27, 31, 39, 40, 43, 55, 58], "gradient": [0, 1, 8, 11, 12, 15, 18, 19, 21, 27, 31, 36, 39, 58, 68, 69, 70, 74], "base": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 31, 32, 33, 36, 38, 43, 49, 50, 52, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 73, 74], "etc": [0, 1], "For": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 17, 19, 20, 22, 23, 25, 28, 29, 30, 34, 35, 36, 37, 40, 44, 46, 48, 52, 53, 54, 58, 66, 67, 70, 73, 74, 75], "provid": [0, 1, 2, 3, 20, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 43, 46, 52, 53, 54, 55, 58, 64, 65], "an": [0, 2, 3, 4, 6, 10, 11, 14, 15, 17, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "us": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "gener": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 31, 36, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 74, 76], "applic": [0, 1, 49, 64, 66, 68, 71], "onli": [0, 1, 2, 3, 6, 10, 11, 12, 17, 18, 19, 25, 28, 29, 31, 32, 33, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "write": [0, 1, 36, 37], "few": [0, 1], "line": [0, 1, 36, 37, 55], "code": [0, 1, 58, 60, 61, 62, 63, 68, 69, 71, 72, 74, 75, 76], "also": [0, 1, 2, 29, 36, 43, 49, 58, 65, 66, 67], "gui": [0, 1], "dashboard": [0, 3, 28, 31, 39, 40, 53, 54, 55, 58], "visual": [0, 3, 19, 20, 27, 28, 31, 39, 40, 42, 49, 53, 54, 55, 58, 68, 69], "obtain": [0, 1, 36], "more": [0, 3, 10, 11, 14, 15, 25, 28, 36, 37, 40, 44, 48, 55, 56, 57, 59, 60, 61, 62, 63, 66, 67, 74], "insight": [0, 1], "about": [0, 1, 3, 36], "compar": [0, 12, 17, 19], "other": [0, 1, 28, 30, 36, 40, 41, 42, 43, 44, 45, 47, 48, 51, 53, 54, 64, 65, 66, 67, 74], "exist": [0, 1, 25, 36, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54], "ibm": 0, "aix360": 0, "microsoft": 0, "interpretml": 0, "alibi": 0, "explainx": 0, "our": [0, 36, 47, 49, 56], "ha": [0, 1, 2, 3, 7, 21, 22, 23, 24, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 70, 73, 76], "list": [0, 1, 2, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 29, 49, 50, 54, 55, 56, 57, 66, 67], "uniqu": 0, "follow": [0, 1, 2, 3, 21, 22, 23, 24, 25, 29, 31, 34, 35, 36, 37, 39, 41, 43, 44, 45, 47, 48, 51, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76], "analysi": [0, 1, 4, 10, 22, 27, 32, 40, 54, 58], "explor": [0, 1, 28, 49], "analyz": [0, 1, 4, 28, 36, 40, 49, 50, 64, 65, 66, 67], "correl": [0, 1, 3, 20, 28, 40, 49], "check": [0, 4, 40, 49, 68, 71, 75], "imbal": [0, 1, 3, 20, 25, 28, 40], "issu": [0, 36, 40], "most": [0, 1, 11, 40, 43, 55, 65], "popular": 0, "aspect": 0, "inform": [0, 1, 3, 4, 6, 10, 11, 17, 22, 24, 28, 36, 40, 42, 44, 48, 66, 67, 74], "chang": [0, 17, 43, 47, 74], "current": [0, 25, 31, 39, 58, 65], "predict": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 48, 49, 50, 56, 57, 58, 61, 63, 68, 71, 74, 75], "grad": [0, 1, 3, 16, 19, 21, 27, 34, 40, 43, 45, 47, 51, 53, 58], "cam": [0, 1, 3, 16, 19, 21, 27, 58], "its": [0, 1, 3, 9, 10, 11, 12, 17, 29, 31, 34, 35, 39, 41, 43, 44, 45, 47, 48, 49, 51, 53, 54, 58, 59, 60, 61, 62, 63, 68, 69, 71, 72, 74, 76], "variant": 0, "timeseri": [0, 1, 3, 20, 29, 55, 56, 57], "A": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 36, 37, 38, 39, 40, 44, 49, 55, 56, 57, 58, 59, 69, 70, 73, 74], "much": [0, 33, 36], "simpler": [0, 36], "user": [0, 1, 3, 4, 5, 9, 13, 16, 31, 33, 39, 49, 53, 54, 55, 58], "examin": [0, 40], "extend": [0, 36], "ad": 0, "new": [0, 1, 2, 17, 25, 36, 67, 70, 73], "algorithm": [0, 49], "easili": [0, 29, 33], "implement": [0, 1, 7, 11, 19, 26, 32, 33, 36, 44, 74], "singl": [0, 2, 3, 25, 29, 30], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 58, 59, 61, 63, 68, 69, 70, 71, 72, 73, 74, 75], "deriv": [0, 3, 4, 5, 9, 13, 16, 25, 28], "from": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 16, 17, 19, 21, 22, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "show": [0, 1, 3, 20, 21, 22, 23, 26, 28, 29, 31, 32, 34, 35, 38, 39, 40, 48, 50, 53, 54, 55, 58], "we": [0, 1, 2, 3, 28, 29, 30, 31, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "continu": [0, 1, 2, 4, 9, 10, 11, 12, 25, 29, 30, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54], "improv": [0, 19], "thi": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "futur": [0, 67], "e": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76], "g": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76], "vision": [0, 1, 3, 21, 29, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "nlp": [0, 1, 3, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39], "task": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 27, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 68, 69, 71, 72, 74, 75, 76], "eda": 0, "na": [0, 36], "global": [0, 1, 3, 4, 10, 12, 22, 26, 28, 31, 39, 40, 46, 48, 50, 52, 53, 54, 58], "select": [0, 1, 2, 6, 10, 17, 28, 40, 53, 54, 58], "partial": [0, 1, 10, 17, 22, 42, 48, 53, 54], "depend": [0, 1, 10, 17, 22, 27, 36, 44, 53, 54, 74], "black": [0, 1, 3, 5, 9, 11, 13, 16, 18, 31, 40, 42, 43, 45, 47, 51, 53, 54, 55, 58, 59, 60, 61], "box": [0, 1, 3, 5, 9, 11, 13, 16, 18, 31, 42, 47, 53, 54, 55, 58, 59, 60, 61], "sensit": [0, 1, 9, 20, 27, 54], "lime": [0, 1, 3, 5, 9, 16, 21, 27, 31, 39, 40, 44, 53, 54, 58], "local": [0, 1, 3, 6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 22, 26, 27, 31, 39, 40, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 58, 68, 69], "shap": [0, 1, 3, 5, 9, 12, 13, 16, 21, 27, 31, 40, 43, 44, 53, 54, 55], "torch": [0, 3, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 34, 35, 39, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "tf": [0, 1, 8, 11, 12, 17, 18, 19, 25, 30, 34, 35, 36, 37, 42, 49, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 76], "contrast": [0, 1, 19, 20, 27], "linear": [0, 1, 6, 9, 10, 20, 35, 39, 46, 52, 61, 63, 74], "tree": [0, 1, 12, 20, 27], "accept": 0, "transform": [0, 1, 3, 5, 6, 9, 13, 16, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 58, 59, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75], "between": [0, 4, 33, 36, 40], "toolkit": 0, "literatur": 0, "eli5": 0, "captum": 0, "l2x": [0, 5, 9, 16, 27, 35, 39], "you": [0, 1, 29, 32, 34, 35, 36, 38, 43, 49, 64, 65, 66, 67], "can": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 25, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "pypi": [0, 1], "call": [0, 1, 2, 28, 30, 31, 34, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 67, 74, 76], "pip": [0, 1, 49], "mai": [0, 1, 2, 25, 29, 36, 40, 41, 43, 44, 45, 46, 47, 48, 51, 53, 64, 65, 66, 67, 74], "sourc": [0, 1], "clone": [0, 1], "repo": [0, 1], "navig": [0, 1], "root": [0, 1, 29, 61, 63, 74], "directori": [0, 1, 25], "edit": [0, 1], "mode": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 28, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 48, 51, 53, 54, 55, 56, 57, 58, 68, 69, 71, 72, 74], "addit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 26, 28, 53, 54, 55], "plot": [0, 1, 10, 17, 20, 21, 22, 23, 24, 26, 27, 40, 44, 45, 47, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 74, 76], "To": [0, 1, 3, 28, 29, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76], "recommend": [0, 1, 3, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 71, 72, 74, 75, 76], "link": [0, 1], "tutori": [0, 1, 3, 40], "exampl": [0, 2, 3, 4, 7, 11, 15, 21, 22, 24, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "In": [0, 1, 3, 28, 29, 31, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 58, 59, 60, 61, 62, 63, 68, 69, 71, 72, 74, 76], "tabularexplain": [0, 1, 3, 4, 9, 10, 11, 12, 27, 31, 39, 40, 58], "visionexplain": [0, 1, 3, 16, 27], "nlpexplain": [0, 1, 3, 5, 27], "timeseriesexplain": [0, 1, 3, 13, 27], "respect": [0, 1, 2, 3, 4, 29, 55], "specifi": [0, 1, 2, 3, 25, 26, 28, 29, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 64, 65, 66, 67, 74], "function": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "pre": [0, 1, 3, 8, 12, 19, 25, 34, 35], "convert": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 25, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 75, 76], "raw": [0, 1, 2, 3, 5, 8, 9, 12, 13, 16, 17, 18, 19, 21, 22, 28, 29, 31, 34, 35, 39, 53, 54, 55, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 76], "input": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 29, 31, 33, 34, 35, 39, 41, 42, 43, 44, 45, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76], "post": [0, 1, 3, 36, 37], "option": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 21, 22, 23, 24, 33, 53, 54, 55, 58], "output": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 25, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "probabl": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 16, 17, 20, 31, 32, 36, 37, 39, 41, 43, 44, 45, 47, 48, 51, 53, 54, 58, 74, 75], "appli": [0, 1, 2, 3, 9, 10, 11, 12, 25, 28, 30, 31, 34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 68, 71, 75], "mace": [0, 1, 3, 9, 13, 27, 40, 43, 44, 53, 54, 55], "let": [0, 1, 30, 33, 36, 40, 49, 64, 65, 67, 68, 71, 75], "take": [0, 1, 29, 31, 36, 39, 41, 43, 44, 45, 47, 48, 51, 53, 54, 58, 59, 60, 61, 62, 63, 68, 69, 71, 72, 74, 76], "incom": [0, 1, 27, 28, 40, 41, 48], "dataset": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 17, 25, 27, 28, 29, 30, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 74, 76], "http": [0, 1, 6, 7, 8, 10, 11, 12, 14, 17, 18, 19, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "archiv": [0, 1, 28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53], "ic": [0, 1, 28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53], "uci": [0, 1, 28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53], "edu": [0, 1, 28, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53], "adult": [0, 1, 3, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "repres": [0, 1, 2, 14, 15, 29, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76], "creat": [0, 1, 2, 3, 28, 29, 33, 36, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 64, 65], "instanc": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76], "given": [0, 1, 2, 3, 4, 9, 12, 25, 28, 29, 30, 31, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58], "panda": [0, 1, 2, 22, 24, 25, 28, 29, 30, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "datafram": [0, 1, 2, 10, 11, 12, 22, 24, 25, 28, 29, 30, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "categor": [0, 1, 2, 4, 9, 10, 11, 12, 25, 28, 29, 30, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "name": [0, 1, 2, 3, 4, 5, 9, 13, 16, 20, 21, 22, 23, 25, 26, 28, 31, 34, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 63, 68, 69, 71, 72, 74, 75], "target": [0, 1, 2, 4, 9, 11, 12, 19, 25, 28, 29, 30, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74], "label": [0, 1, 2, 3, 6, 8, 9, 10, 11, 12, 17, 19, 21, 22, 23, 25, 26, 28, 29, 30, 32, 34, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 68, 69, 71, 72, 74, 75], "column": [0, 1, 2, 3, 22, 25, 28, 29, 30, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "import": [0, 1, 2, 4, 6, 8, 10, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "load": [0, 1, 3, 25, 28, 31, 33, 34, 35, 36, 37, 39, 40, 42, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76], "feature_nam": [0, 1, 3, 22, 28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54], "ag": [0, 1, 3, 4, 26, 28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53], "workclass": [0, 1, 3, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "fnlwgt": [0, 1, 3, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "educ": [0, 1, 3, 26, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "num": [0, 1, 3, 26, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "marit": [0, 1, 3, 26, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "statu": [0, 1, 3, 26, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "occup": [0, 1, 3, 26, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "relationship": [0, 1, 3, 9, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "race": [0, 1, 3, 9, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "sex": [0, 1, 3, 9, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "capit": [0, 1, 3, 9, 26, 28, 36, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "gain": [0, 1, 3, 4, 26, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "loss": [0, 1, 3, 6, 9, 10, 11, 15, 17, 18, 19, 26, 28, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 60, 61, 62, 63, 70, 73, 74, 76], "hour": [0, 1, 3, 26, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "per": [0, 1, 3, 11, 26, 28, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53], "week": [0, 1, 3, 26, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "countri": [0, 1, 3, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "df": [0, 1, 2, 29, 30, 40, 50, 53, 54, 55, 56, 57], "pd": [0, 1, 2, 10, 11, 12, 25, 29, 30, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "np": [0, 1, 2, 3, 9, 10, 11, 12, 15, 19, 25, 28, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 68, 70, 71, 73, 76], "genfromtxt": [0, 1, 3, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "delimit": [0, 1, 3, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "dtype": [0, 1, 3, 28, 34, 35, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53], "str": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 28, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 58, 59, 68, 69, 71, 72, 75], "tabular_data": [0, 1, 3, 25, 28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54], "categorical_column": [0, 1, 2, 3, 25, 28, 29, 30, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "1": [0, 1, 2, 3, 11, 15, 16, 18, 19, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "3": [0, 1, 2, 3, 9, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "5": [0, 1, 3, 6, 7, 10, 11, 15, 17, 18, 19, 21, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "6": [0, 1, 3, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 73, 74, 76], "7": [0, 1, 3, 28, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 70, 71, 73, 74, 75, 76], "8": [0, 1, 3, 9, 10, 12, 28, 29, 30, 34, 35, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 68, 74, 76], "9": [0, 1, 3, 22, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 60, 61, 62, 63, 70, 73, 74, 75, 76], "13": [0, 1, 3, 28, 29, 30, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 65], "target_column": [0, 1, 2, 3, 28, 29, 30, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "packag": [0, 1, 30, 31, 34, 35, 36, 37, 39, 49, 50, 53, 54, 55, 58, 70, 73, 76], "preprocess": [0, 3, 5, 9, 12, 13, 16, 17, 18, 19, 27, 31, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76], "sever": [0, 1, 29, 30, 36, 40, 46, 52, 53, 54], "tabulartransform": [0, 1, 3, 25, 30, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54], "special": [0, 1, 15, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54], "design": [0, 15, 17, 31, 39, 41, 43, 44, 45, 47, 48, 51, 53, 54, 55, 58], "By": [0, 1, 41, 43, 44, 45, 47, 48, 51, 53, 54, 58], "default": [0, 1, 2, 6, 10, 11, 17, 28, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "hot": [0, 1, 25, 30, 41, 43, 44, 45, 47, 48, 51, 53, 54], "encod": [0, 1, 9, 12, 19, 30, 41, 43, 44, 45, 47, 48, 49, 51, 53, 54, 70], "keep": [0, 1, 25, 41, 43, 44, 45, 47, 48, 51, 53, 54], "valu": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 25, 29, 30, 31, 32, 34, 35, 36, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 62, 70, 73, 74, 76], "numpi": [0, 1, 2, 25, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76], "arrai": [0, 1, 2, 25, 28, 29, 30, 31, 32, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76], "If": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 21, 22, 23, 25, 26, 28, 29, 30, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 57, 59, 60, 61, 62, 63, 68, 69, 71, 72, 74, 75, 76], "last": [0, 1, 2, 3, 25, 28, 29, 30, 41, 43, 44, 45, 47, 48, 51, 53, 54, 58], "after": [0, 1, 36, 40, 41, 43, 44, 45, 47, 48, 49, 51, 53, 54, 74, 76], "train": [0, 1, 3, 4, 5, 6, 9, 10, 11, 12, 13, 16, 17, 22, 25, 29, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 74, 76], "xgboost": [0, 1, 3, 12, 40, 41, 43, 44, 45, 47, 48, 51, 53], "classifi": [0, 1, 11, 12, 36, 37, 40, 41, 43, 44, 45, 47, 48, 51, 53], "fit": [0, 1, 3, 9, 12, 25, 30, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 60, 62, 76], "class_nam": [0, 1, 9, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 51, 53, 58, 59, 61, 63, 68, 69, 71, 72, 74, 75], "x": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 70, 73, 74, 76], "xgbclassifi": [0, 1, 3, 40, 41, 43, 44, 45, 47, 48, 51, 53], "n_estim": [0, 1, 3, 36, 37, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54], "300": [0, 1, 3, 40, 41, 43, 44, 45, 47, 48, 51, 53, 66, 67], "max_depth": [0, 1, 3, 40, 41, 43, 44, 45, 47, 48, 51, 52, 53], "initi": [0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76], "set": [0, 1, 2, 10, 11, 15, 23, 28, 29, 31, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76], "pdp": [0, 1, 3, 9, 16, 20, 26, 40, 48, 53, 54], "too": [0, 1, 36, 41, 43, 45, 47, 48, 50, 51, 53, 54, 70, 73], "larg": [0, 1, 9, 10, 11, 12, 40, 41, 42, 43, 45, 47, 48, 50, 51, 53, 54], "subset": [0, 1, 2, 9, 10, 11, 12, 25, 29, 36, 37, 41, 42, 43, 45, 47, 48, 50, 51, 53, 54], "sampler": [0, 1, 9, 10, 11, 12, 41, 42, 43, 45, 47, 48, 50, 51, 53, 54], "subsampl": [0, 1, 9, 10, 11, 12, 25, 41, 42, 43, 45, 47, 48, 50, 51, 53, 54], "postprocess": [0, 1, 3, 5, 9, 13, 16, 17, 31, 39, 53, 54, 55, 58], "form": [0, 1, 3, 5, 9, 13, 16, 31, 39, 53, 54, 55, 58], "each": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 31, 39, 40, 43, 53, 54, 55, 56, 57, 58, 66, 67, 68, 71], "classif": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 21, 22, 23, 25, 27, 29, 31, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 59, 60, 61, 62, 63, 74, 76], "regress": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 25, 27, 31, 34, 35, 36, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 58, 68, 69, 71, 72, 74], "consum": [0, 1, 31, 39, 53, 54, 58, 59, 60, 61, 62, 63, 68, 69, 71, 72, 76], "simpli": [0, 1, 31, 39, 41, 43, 44, 45, 47, 48, 51, 53, 54, 58, 59, 60, 61, 62, 63, 76], "lambda": [0, 1, 3, 31, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 58, 59, 60, 61, 62, 63, 65, 69, 70, 72, 73, 74, 76], "z": [0, 1, 3, 25, 30, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 70, 73], "param": [0, 1, 3, 4, 5, 9, 13, 16, 26, 28, 39, 40, 53, 54, 55, 58], "ignored_featur": [0, 1, 3, 9, 11, 40, 47, 49, 53], "while": [0, 1, 40, 43, 53, 54], "return": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 32, 33, 34, 35, 39, 42, 49, 52, 53, 54, 55, 56, 57, 61, 63, 64, 68, 70, 71, 73, 74, 75], "three": [0, 1, 6, 10, 25, 29, 40, 53, 58], "test": [0, 1, 9, 12, 31, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76], "explain_glob": [0, 1, 3, 9, 28, 40, 53, 54], "hide": [0, 1, 53, 54], "all": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 36, 39, 40, 42, 49, 53, 54, 55, 58], "detail": [0, 1, 3, 36, 44, 53, 54, 59, 60, 61, 62, 63, 74], "behind": [0, 1, 53, 54], "so": [0, 1, 36, 40, 42, 53, 54], "two": [0, 1, 2, 3, 28, 29, 30, 34, 35, 36, 39, 40, 42, 53, 54, 60, 61, 62, 63, 74, 76], "test_inst": [0, 1, 40, 43, 45, 47, 51, 53, 54, 55], "local_explan": [0, 1, 3, 5, 9, 13, 16, 26, 31, 39, 40, 53, 54, 55, 58], "global_explan": [0, 1, 3, 9, 26, 28, 40, 53, 54], "launch": [0, 1, 28, 31, 39, 40, 53, 54, 55, 58], "dash": [0, 1, 20, 21, 22, 23, 24, 26, 28, 31, 39, 40, 53, 54, 55, 58], "app": [0, 1, 28, 31, 39, 40, 53, 54, 55, 58], "open": [0, 1, 2, 11, 18, 25, 29, 30, 36, 42, 49, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 75], "browser": [0, 1], "see": [0, 1, 36, 40, 49, 74], "thank": [0, 1, 36], "your": [0, 1, 36, 70, 73, 76], "interest": [0, 1, 36], "befor": [0, 1, 36], "run": [0, 1, 28, 31, 36, 39, 40, 43, 53, 54, 55, 58], "commit": [0, 1], "ensur": [0, 1], "file": [0, 1, 25, 49], "ar": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 17, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 60, 62, 65, 74, 75, 76], "format": [0, 1, 2, 3, 7, 21, 22, 23, 24, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 58, 61, 63, 74], "correctli": [0, 1], "contain": [0, 1, 2, 3, 4, 5, 9, 11, 13, 16, 20, 22, 26, 29, 30, 36, 46, 55, 56, 57, 60, 61, 62, 63, 74, 76], "appropri": [0, 1, 64], "licens": [0, 1], "header": [0, 1], "whenev": [0, 1], "add": [0, 1, 21, 22, 23, 24, 25, 36, 42, 60, 62, 76], "step": [0, 1, 8, 12, 15, 19, 25, 34, 40, 42, 43, 58, 59, 60, 61, 62, 63, 66, 67, 74, 76], "below": [0, 1, 36], "choos": [0, 1, 3, 4, 5, 9, 13, 16, 28, 40, 64, 65, 66, 67], "script": [0, 1, 49], "folder": [0, 1], "put": [0, 1], "under": [0, 1, 25], "inherit": [0, 1, 3, 25], "explainerbas": [0, 1, 3, 4, 6, 7, 8, 9, 11, 14, 15, 17, 18, 19], "constructor": [0, 1, 3], "__init__": [0, 1, 3, 34, 35, 39, 61, 63, 70, 73, 74], "self": [0, 1, 2, 3, 25, 34, 35, 39, 40, 43, 45, 47, 51, 53, 61, 63, 70, 74], "predict_funct": [0, 1, 3, 6, 7, 9, 10, 11, 14, 15, 17, 32, 33, 36, 37, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 56, 57, 74, 75], "kwarg": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 39, 43], "preprocess_funct": [0, 1, 3, 5, 8, 9, 12, 13, 16, 17, 18, 19, 34, 35, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76], "postprocess_funct": [0, 1, 3, 5, 16], "requir": [0, 1, 3, 5, 16, 55], "some": [0, 1, 3, 25, 29, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 51, 53, 54], "whether": [0, 1, 2, 3, 15, 22, 36, 40, 55, 56, 57], "differenti": [0, 1, 3], "resiz": [0, 1, 3, 25, 30, 58, 59, 64, 65, 68, 69, 70, 71, 72, 73, 75], "224": [0, 1, 3, 29, 30, 58, 59, 64, 65, 66, 67, 68, 69, 71, 72, 75], "normal": [0, 1, 3, 9, 12, 30, 36, 41, 43, 44, 45, 47, 48, 51, 53, 54, 58, 59, 60, 62, 65, 69, 72, 75, 76], "pixel": [0, 1, 3, 17, 19, 21, 25, 30, 60, 62, 76], "logit": [0, 1, 3, 12, 34, 39, 44, 47, 58, 74, 75], "explanation_typ": [0, 1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19], "string": [0, 1, 2, 3, 29, 31], "both": [0, 1, 2, 3, 12, 22, 24, 29, 46, 52], "alia": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "where": [0, 1, 20, 22, 23, 24, 36, 47, 66, 67], "py": [0, 1, 49, 70, 73, 76], "regist": [0, 1, 3], "automat": [0, 1, 2, 3, 10, 11, 12], "via": [0, 1, 2, 4, 6, 10, 17, 19, 58, 59, 61, 63, 68, 69, 71, 72], "defin": [0, 1, 29, 30, 42, 49, 58, 59, 61, 63, 69, 70, 72, 73, 74], "toolbox": 0, "modul": [0, 29, 34, 35, 39, 48, 54, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76], "fill": [0, 1, 30], "pipelin": [0, 1, 6, 31, 32, 33, 38, 43, 49], "result": [0, 3, 18, 19, 21, 22, 23, 24, 26, 31, 33, 39, 40, 49, 53, 54, 55, 58], "categori": [0, 1, 25, 36, 37], "basic": [0, 11, 15, 42], "object": [0, 2, 3, 9, 11, 12, 15, 19, 20, 25, 26, 27, 30, 31, 34, 35, 36, 37, 39, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 74, 76], "dataanalyz": [0, 1, 3, 4, 27, 40], "hous": [0, 27], "price": [0, 27], "sentiment": [0, 1, 27, 32, 34, 35, 39], "imdb": [0, 1, 27], "anomali": [0, 1, 14, 15, 27], "detect": [0, 1, 14, 15, 27], "workflow": [0, 27], "accumul": [0, 27], "effect": [0, 27], "al": [0, 7, 11, 15, 19, 27, 32, 33, 47, 68, 69], "diabet": [0, 27], "gpt": [0, 27], "logist": [0, 12, 27], "pariti": [0, 27, 49], "rank": [0, 27], "expan": [0, 27], "demo": [0, 27], "morri": [0, 10, 22, 27], "imagenet": [0, 1, 27, 58, 68, 69, 71, 72, 75], "mnist": [0, 17, 27, 29], "map": [0, 8, 10, 27, 34, 35], "languag": [0, 27, 36], "question": [0, 7, 27, 36], "answer": [0, 7, 27, 36], "index": [0, 1, 2, 12, 20, 21, 22, 23, 24, 26, 29, 33, 37, 40, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76], "search": [0, 17], "page": 0, "capabl": 1, "featur": [1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 68, 69, 71, 72, 76], "five": [1, 6], "kei": [1, 22, 43, 49], "subpackag": [1, 3], "simpl": [1, 10, 34, 35, 39, 49, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 74, 76], "pillow": [1, 2, 29, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76], "One": [1, 25, 30, 31, 36, 39, 44, 46, 58, 74], "ordin": [1, 9, 12, 25, 30], "kbin": [1, 25], "standard": [1, 9, 12, 22, 25, 30, 40, 41, 43, 44, 45, 47, 48, 49, 51, 53, 54], "min": [1, 11, 25, 30, 34, 35, 39], "max": [1, 11, 25, 30, 34, 35, 39, 61, 63, 74], "rescal": [1, 18, 19, 25], "nan": [1, 25, 30], "recal": 1, "idf": [1, 25, 30, 36, 37], "token": [1, 2, 6, 8, 23, 29, 30, 33, 34, 35, 39, 70, 73], "id": [1, 6, 8, 20, 25, 30, 34, 35, 39], "combin": [1, 66, 67], "togeth": [1, 25, 36], "conveni": [1, 25], "particular": [1, 17, 36, 58], "main": [1, 25], "four": [1, 28], "group": [1, 36, 49], "It": [1, 2, 3, 4, 5, 6, 10, 11, 12, 16, 18, 19, 21, 22, 23, 24, 25, 42, 58, 76], "further": [1, 40], "handl": [1, 12], "without": [1, 2, 11, 18, 36, 42, 59, 60, 61], "know": [1, 36], "either": [1, 2, 11, 12, 31, 39, 47], "feature_import": [1, 20], "store": [1, 2, 3, 21, 22, 23, 24, 25, 29, 58], "matplotlib": [1, 20, 21, 22, 23, 24, 60, 61, 62, 63, 76], "plotly_plot": [1, 20, 21, 22, 23, 24], "ipython_plot": [1, 20, 21, 22, 23, 24, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "ipython": [1, 20, 21, 22, 23, 24, 28, 31, 32, 33, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "word": [1, 6, 8, 23, 25, 31, 34, 35, 36, 39], "plotli": [1, 20, 21, 22, 23, 24, 26, 28, 31, 32, 33, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "figur": [1, 20, 21, 22, 23, 24, 26], "demonstr": [1, 64, 65, 66, 67], "architectur": 1, "autoexplainerbas": [1, 3, 4, 5, 9, 13, 16, 28], "act": [1, 3, 31, 39, 53, 54, 55, 58], "factori": [1, 3, 31, 39, 53, 54, 55, 58], "": [1, 2, 6, 10, 17, 30, 31, 36, 40, 43, 44, 49, 55, 56, 57, 64, 65, 67, 68, 71, 74, 75], "next": [1, 36, 40], "resnet": [1, 3, 58, 59, 64, 66, 67, 69, 72], "arxiv": [1, 6, 10, 11, 17, 18, 19, 36, 42, 44, 49, 59, 60, 61, 62, 63, 68, 69, 74], "org": [1, 6, 10, 11, 17, 18, 19, 36, 42, 44, 48, 49, 54, 59, 60, 61, 62, 63, 68, 69, 70, 73, 74], "ab": [1, 6, 10, 11, 17, 18, 19, 36, 42, 44, 49, 59, 60, 61, 62, 63, 68, 69, 74], "1512": 1, "03385": 1, "pretrain": [1, 3, 33, 58, 59, 65, 67, 69, 70, 72, 73, 75], "www": [1, 70, 73], "net": [1, 36], "here": [1, 7, 10, 29, 31, 36, 42, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 69, 72, 75], "sampl": [1, 6, 9, 10, 12, 15, 17, 19, 25, 34, 35, 39, 43, 49], "ig": [1, 3, 5, 9, 16, 34, 35, 39, 58, 73], "gradcam": [1, 3, 16, 58, 68, 69, 70], "0": [1, 2, 3, 6, 9, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], "2": [1, 22, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "resnet50": [1, 3, 58, 59, 65, 69], "layer": [1, 6, 8, 10, 19, 34, 35, 39, 42, 49, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76], "target_lay": [1, 3, 16, 19, 58, 64, 65, 66, 67, 68, 69, 70, 73], "layer4": [1, 3, 16, 58, 69], "test_img": [1, 60, 62, 74, 76], "y": [1, 6, 8, 10, 11, 12, 17, 19, 25, 30, 33, 35, 39, 42, 43, 61, 63, 68, 71, 74], "281": [1, 68, 71], "correspond": [1, 2, 6, 7, 9, 10, 11, 14, 15, 17, 19, 21, 22, 23, 24, 26, 36, 37, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 56, 57, 58, 59, 74, 75], "tiger_cat": [1, 68, 71], "top": [1, 6, 8, 10, 12, 17, 19, 68, 69, 71, 72, 75], "bull_mastiff": [1, 68, 71], "These": [1, 29, 46, 49, 52], "highlight": 1, "region": 1, "note": [1, 18, 19, 25, 34, 35, 36, 39, 40], "besid": [1, 29], "same": [1, 3, 4, 5, 9, 13, 16, 28, 34, 36, 40, 44, 74], "gradcam0": 1, "gradcam3": 1, "first": [1, 2, 8, 21, 22, 23, 24, 28, 29, 34, 35, 36, 39, 40, 44, 45, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 66, 67, 74, 76], "second": [1, 2, 29, 47, 66, 67], "consid": [1, 4, 31, 40, 42, 43, 49, 58, 59, 66, 67, 69, 72], "goal": [1, 49], "review": [1, 34, 35, 39], "posit": [1, 19, 21, 25, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 62, 63], "neg": [1, 4, 12, 19, 21, 31, 32, 34, 35, 38, 39, 40, 42, 43, 62, 63], "cnn": [1, 34, 35, 36, 39, 61, 63, 64, 65, 66, 67, 74], "suppos": [1, 29, 30, 36], "want": [1, 28, 29, 36, 41, 43, 44, 45, 47, 48, 51, 53, 54], "do": [1, 28, 30, 31, 33, 36, 39, 40, 41, 43, 44, 45, 47, 48, 51, 53, 54, 55, 58], "polyjuic": [1, 5, 31, 32, 33, 39], "embed": [1, 8, 10, 34, 35, 39, 49, 73], "embedding_lay": [1, 8, 34, 35, 39, 73], "id2token": [1, 8, 34, 35, 39], "id_to_token": 1, "wa": [1, 29, 31, 32, 34, 35, 36, 38, 39], "fantast": [1, 29, 32, 34, 35, 38, 39], "perform": [1, 29, 32, 34, 35, 38, 39, 61, 63, 64, 74], "clearli": [1, 40], "largest": 1, "score": [1, 8, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 31, 32, 40, 43, 46, 49, 55, 56, 57, 60, 62, 76], "impli": [1, 14, 15, 40, 56, 57], "sentenc": [1, 2, 25, 29, 30, 34, 35, 36, 37, 39, 70, 73], "becaus": [1, 2, 25, 28, 31, 36, 39, 40], "horribl": [1, 29, 32, 34, 35, 38, 39], "help": 1, "u": [1, 36, 53, 54], "understand": [1, 36], "behavior": [1, 40, 43, 65, 74], "univari": [1, 2, 55, 56, 57], "statist": 1, "detector": [1, 55, 56, 57], "window": [1, 55, 56, 57], "accord": [1, 30, 36, 43], "threshold": [1, 15, 55, 56, 57], "estim": [1, 3, 4, 6, 9, 10, 11, 12, 17, 19, 25, 36, 41, 43, 44, 45, 47, 48, 51, 74], "have": [1, 2, 18, 19, 25, 29, 30, 32, 34, 35, 36, 38, 40, 43, 52], "train_df": [1, 55, 56, 57], "test_df": [1, 55, 56, 57], "anomaly_detect": [1, 13, 14, 15, 24, 55, 56, 57], "from_pd": [1, 2, 29, 55, 56, 57], "none": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 36, 42, 44, 55, 65, 74], "001": [1, 6, 10, 15, 17, 55, 56], "timestamp": [1, 2, 29, 55, 56, 57], "metric": [1, 2, 29, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51, 53, 55, 60, 62, 76], "20": [1, 6, 17, 22, 29, 36, 40, 43, 45, 47, 49, 51, 53, 55, 56, 57, 61, 63, 67, 74], "00": [1, 31, 38, 55, 56, 57], "around": [1, 36, 55], "reason": 1, "why": [1, 36], "indic": [1, 2, 3, 22, 28, 29, 44, 45, 47, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 76], "explanationbas": [1, 20, 21, 22, 23, 24], "avail": 1, "cannot": [1, 20, 21, 22, 24], "fulfil": 1, "should": [1, 2, 6, 10, 11, 12, 14, 15, 17, 28, 34, 35, 36, 43, 44, 56, 57, 74], "data_typ": [1, 2], "iloc": [1, 2, 55, 56, 57], "shape": [1, 2, 29, 30, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 76], "continuous_column": [1, 2, 29], "feature_column": [1, 2, 3, 28, 29, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52], "to_pd": [1, 2, 29, 41, 43, 44, 45, 47, 48, 49, 51, 53, 54], "to_numpi": [1, 2, 29, 42, 58, 60, 62, 76], "copi": [1, 2, 49], "remove_target_column": [1, 2, 47], "get_continuous_median": [1, 2], "get_continuous_bound": [1, 2], "image_shap": [1, 2, 29, 66, 67], "to_pil": [1, 2, 3, 29, 30, 58, 59, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75], "to_token": [1, 2, 29], "to_str": [1, 2], "split": [1, 2, 9, 12, 33, 55, 56, 57], "ts_len": [1, 2, 15, 29], "batch_siz": [1, 2, 6, 10, 15, 17, 29, 34, 35, 39, 42, 58, 60, 61, 62, 63, 74, 76], "transformbas": [1, 9, 12, 25], "invert": [1, 25, 30, 40, 43, 45, 51, 53, 54], "ident": [1, 9, 12, 25, 50, 54], "onehot": [1, 9, 12, 25, 30], "get_feature_nam": [1, 25, 30], "labelencod": [1, 9, 12, 25, 30], "minmax": [1, 9, 12, 25, 30, 41, 43, 44, 45, 47, 48, 51, 53, 54], "scale": [1, 9, 12, 25, 30, 43], "fillnan": [1, 25], "fillnantabular": [1, 25, 30], "dump": [1, 25, 28], "decompos": [1, 25], "round2int": [1, 25], "tfidf": [1, 25, 30, 34, 35, 36, 37, 39], "word2id": [1, 25, 30, 34, 35, 39], "pad": [1, 25, 34, 35, 39], "unk": [1, 25, 30], "vocab_s": [1, 25, 34, 35, 39], "undersampl": [1, 25], "oversampl": [1, 25], "explainerabcmeta": [1, 3], "explainer_nam": [1, 3], "list_explain": [1, 3, 4, 5, 9, 13, 16], "imbalanceanalyz": [1, 3, 4], "correlationanalyz": [1, 3, 4], "mutualinform": [1, 3, 4], "chisquar": [1, 3, 4], "auto": [1, 3, 19], "mutual_info": [1, 3], "chi_squar": [1, 3], "pixel_import": [1, 20], "mask": [1, 6, 20, 34, 35, 39], "word_import": [1, 20], "get_explan": [1, 20, 21, 22, 23, 24, 43, 49], "dashfigur": [1, 20], "to_html_div": [1, 20], "to_html": [1, 20], "predictedresult": [1, 20], "batch": [2, 6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 22, 29, 30, 31, 34, 35, 36, 37, 39, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76], "height": [2, 29, 58], "width": [2, 29, 49, 58], "channel": [2, 25, 29, 58, 66, 67], "true": [2, 3, 4, 11, 15, 19, 21, 22, 23, 25, 29, 31, 32, 34, 35, 36, 38, 39, 42, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 72, 74, 75, 76], "channel_last": 2, "dimens": [2, 15], "fals": [2, 4, 21, 22, 23, 29, 34, 35, 39, 43, 49, 61, 63, 74, 76], "instead": [2, 28, 31, 36, 39, 40, 49, 53, 54, 55, 56, 57, 58, 65, 67, 76], "number": [2, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 20, 22, 23, 24, 25, 29, 40, 49], "4": [2, 20, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "pil": [2, 25, 29, 30, 58, 59, 64, 65, 68, 69, 70, 71, 72, 73, 75], "pilimag": [2, 25, 29, 30, 58, 59, 64, 65, 68, 69, 70, 71, 72, 73, 75], "im": [2, 3, 29, 58, 59, 61, 63, 64, 65, 68, 69, 71, 72, 74], "an_imag": 2, "jpg": [2, 25, 29, 30, 58, 59, 69, 70, 73], "hello": [2, 25, 30, 36], "m": [2, 25, 30, 49], "And": [2, 25, 30, 49], "anoth": [2, 22, 25, 30, 36, 67, 68, 71], "veri": [2, 25, 30, 36], "allow": [2, 3, 4, 5, 9, 13, 16, 36, 53, 54, 58, 66, 67], "nltk": 2, "word_token": 2, "variabl": [2, 24, 29, 55, 56, 57], "num_vari": [2, 29], "construct": [2, 3, 12, 17, 28, 29, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76], "2017": [2, 29, 66, 67], "12": [2, 29, 30, 31, 36, 40, 43, 45, 47, 49, 51, 53, 70, 73], "27": [2, 29, 36, 40, 43, 45, 47, 49, 51, 53], "1263": [2, 29], "94091": [2, 29], "394": [2, 29], "507": [2, 29], "16": [2, 29, 42, 54, 55, 56, 57], "530": [2, 29], "28": [2, 29, 40, 43, 45, 47, 51, 53, 60, 62, 76], "1299": [2, 29], "86398": [2, 29], "506": [2, 29], "424": [2, 29], "14": [2, 29, 30, 64], "162": [2, 29], "date": [2, 29, 65], "consumpt": [2, 29], "wind": [2, 29], "solar": [2, 29], "set_index": [2, 29, 49, 55, 56, 57], "to_datetim": [2, 29, 55, 56, 57], "t": [2, 5, 15, 16, 34, 35, 36, 39, 40, 47, 55, 56, 57, 70, 73], "abstract": [2, 3, 20, 25], "differet": 2, "properti": [2, 3, 25], "union": [2, 11, 22, 23, 24, 25], "ndarrai": [2, 9, 10, 11, 12, 15, 19, 25], "num_sampl": [2, 75], "num_featur": [2, 10, 22], "when": [2, 6, 7, 8, 9, 10, 11, 12, 17, 19, 20, 21, 22, 23, 24, 29, 36, 40, 54, 74], "int": [2, 4, 6, 7, 10, 11, 17, 25, 34, 35, 39, 55, 56, 57], "row": [2, 29, 40, 43, 45, 47, 49, 51, 53, 54, 55, 56, 57], "slice": [2, 49], "integ": [2, 25, 28], "tupl": [2, 25, 39, 68, 71, 75], "get": [2, 3, 20, 21, 22, 23, 24, 25, 29, 34, 35, 39, 49, 65], "except": 2, "sequenc": [2, 4, 25, 49], "otherwis": 2, "remov": [2, 30, 40, 49, 50, 65, 67, 76], "absolut": [2, 36], "median": [2, 11, 25, 30, 42], "dict": [2, 3, 4, 5, 8, 9, 13, 16, 20, 21, 22, 23, 24, 26, 33], "upper": [2, 11, 15], "lower": [2, 11, 15], "bound": [2, 11, 15], "grayscal": 2, "rgb": [2, 29, 30, 58, 59, 64, 65, 68, 69, 70, 71, 72, 73, 75], "h": [2, 25, 40, 43, 45, 47, 51, 53], "w": [2, 25, 70, 73], "ignor": [2, 3, 8, 10, 11, 12, 17, 19, 21, 22, 23, 40, 47], "bool": [2, 6, 10, 17], "size": [2, 6, 10, 17, 22, 25, 29, 30, 70, 73], "color": [2, 29], "argument": [2, 36, 65, 76], "hwc": [2, 29], "keepdim": [2, 29], "kept": [2, 36], "squeez": [2, 35, 39, 49], "callabl": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 42], "sep": [2, 7, 33, 34, 35, 39, 73], "maxsplit": 2, "variable_nam": 2, "multivari": [2, 55, 56, 57], "whose": [2, 8, 11, 12, 17, 19, 22, 30, 34, 35], "length": [2, 15, 29, 31, 32, 33, 39], "datetimeindex": 2, "classmethod": 2, "rtype": 2, "kernel_width": [3, 9, 10, 40, 53, 54], "nsampl": [3, 9, 10, 17, 40, 51, 53, 54], "100": [3, 9, 10, 34, 35, 36, 39, 40, 44, 51, 53, 54, 58, 59, 61, 63, 66, 67, 74], "similar": [3, 25, 31, 39, 42, 52, 58], "img": [3, 16, 25, 29, 30, 58, 59, 64, 65, 68, 69, 71, 72, 75], "mainli": 3, "gbtree": [3, 40, 41, 43, 44, 45, 47, 48, 51, 53], "predict_proba": [3, 9, 36, 37, 41, 43, 44, 45, 47, 48, 51], "shaptabular": [3, 10, 51, 76], "training_data": [3, 4, 6, 9, 10, 11, 12, 14, 15, 17, 36, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 56, 57, 74], "compos": [3, 58, 59, 61, 63, 65, 69, 72, 74, 75], "256": [3, 6, 10, 17, 34, 35, 39, 42, 49, 58, 59, 65, 69, 72, 75], "centercrop": [3, 58, 59, 65, 69, 72, 75], "totensor": [3, 58, 59, 61, 63, 65, 69, 72, 74, 75], "mean": [3, 12, 21, 22, 23, 25, 26, 29, 30, 35, 36, 39, 43, 44, 45, 47, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 69, 72, 74, 75, 76], "485": [3, 58, 59, 65, 69, 72, 75], "456": [3, 58, 59, 65, 69, 72, 75], "406": [3, 58, 59, 65, 69, 72, 75], "std": [3, 22, 25, 35, 39, 58, 59, 65, 69, 72, 75], "229": [3, 58, 59, 65, 69, 72, 75], "225": [3, 58, 59, 65, 69, 72, 75], "stack": [3, 58, 59, 61, 63, 65, 69, 70, 72, 73, 74, 75], "found": [3, 15, 70, 73], "classnam": 3, "cls_dict": 3, "autodocabcmeta": 3, "meta": 3, "_explain": 3, "collect": [3, 4, 5, 9, 13, 16], "empti": [3, 5, 16, 19], "ani": [3, 5, 9, 12, 13, 16, 36], "param_1": [3, 4, 5, 9, 13, 16], "lime_explan": 3, "shap_explan": 3, "ordereddict": 3, "pdp_explan": 3, "static": [3, 4, 5, 9, 12, 13, 16, 25], "mutual": [4, 28, 36, 40], "n_bin": [4, 25], "10": [4, 6, 10, 11, 15, 17, 18, 19, 21, 22, 29, 30, 34, 35, 39, 40, 49, 50, 55, 56, 57, 60, 61, 62, 63, 64, 71, 74, 76], "count": [4, 22], "appear": [4, 22], "gender": [4, 42], "comput": [4, 12, 15, 19, 30, 36, 70, 73], "male": [4, 29, 30, 40, 42, 43, 45, 47, 51, 53], "femal": [4, 29, 30, 40, 42, 43, 45, 47, 51, 53], "separ": [4, 36, 44, 74], "cross": [4, 22, 28], "bin": [4, 15, 25], "discret": [4, 10, 25], "imbalanceexplan": [4, 22], "matrix": [4, 22], "scipi": 4, "stat": [4, 40], "spearmanr": 4, "correlationexplan": [4, 22], "globalfeatureimport": [4, 22], "chi": [4, 28, 40], "squar": [4, 28, 40], "non": 4, "chi2": [4, 28, 40], "qa": [5, 7, 31, 33], "those": [5, 16, 30, 47], "don": [5, 16, 40, 47], "limetext": [6, 37], "pleas": [6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "cite": [6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 32, 33, 34, 35, 36, 37, 38, 42, 44, 45, 47, 50, 51, 57, 59, 60, 61, 62, 63, 68, 69, 71, 72, 74, 75, 76], "origin": [6, 8, 10, 12, 14, 17, 18, 19, 22, 24, 25, 34, 35, 36, 37, 38, 44, 45, 51, 57, 62, 63, 71, 72, 74, 75, 76], "work": [6, 7, 8, 10, 12, 14, 17, 19, 32, 33, 34, 35, 36, 37, 38, 40, 44, 45, 51, 57, 62, 63, 71, 72, 74, 75, 76], "github": [6, 7, 8, 10, 12, 14, 17, 19, 32, 33, 34, 35, 37, 38, 45, 50, 51, 57, 71, 72, 75, 76], "com": [6, 7, 8, 10, 12, 14, 17, 19, 32, 33, 34, 35, 37, 38, 45, 50, 51, 57, 70, 71, 72, 73, 75, 76], "marcotcr": [6, 10, 17, 37, 45, 75], "lime_text": 6, "limetextexplain": 6, "refer": [6, 10, 11, 17, 36, 44, 48, 49, 59, 60, 61, 62, 63, 74], "doc": [6, 10, 17, 28, 31, 32, 33, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "explain_inst": [6, 10, 17], "wordimport": [6, 8, 23], "shaptext": [6, 38], "slundberg": [6, 10, 12, 14, 17, 38, 51, 57, 76], "textclassificationpipelin": [6, 38], "text_classif": 6, "defaultselectionmodel": [6, 10, 17, 36, 44, 74], "_defaultmodelbas": [6, 10, 17], "consist": [6, 40], "1d": 6, "convolut": [6, 19, 58, 60, 61, 62, 63, 68, 69, 74, 76], "l2xtext": [6, 36], "hidden_s": [6, 10, 34, 35, 39], "hidden": [6, 10, 42, 60, 61, 62, 63, 74, 76], "kernel_s": [6, 34, 35, 39, 60, 61, 62, 63, 74, 76], "kernel": 6, "forward": [6, 10, 17, 35, 39, 61, 63, 74], "defaultpredictionmodel": [6, 10, 17, 36, 44, 74], "weight": [6, 10, 11, 15, 17, 18, 19, 35, 36, 39, 42, 65, 66, 67, 68, 71], "gumbel": [6, 10, 17], "softmax": [6, 10, 17, 39, 58, 75], "tau": [6, 10, 17, 49], "k": [6, 10, 17, 34, 35, 39, 43, 49, 58, 59, 68, 69, 71, 72, 75], "selection_model": [6, 10, 17, 36, 44, 74], "prediction_model": [6, 10, 17, 36, 44, 74], "loss_funct": [6, 10, 17, 70, 73], "optim": [6, 10, 11, 15, 17, 18, 19, 34, 35, 39, 42, 49, 56, 59, 60, 61, 62, 63, 64, 66, 67, 74, 76], "learning_r": [6, 10, 11, 15, 17, 18, 19, 34, 35, 39, 42, 61, 63, 74], "num_epoch": [6, 10, 17, 34, 35, 39, 49, 61, 63, 74], "theoret": [6, 10, 17, 36, 44, 74], "perspect": [6, 10, 17, 36, 44, 74], "jianbo": [6, 10, 17, 36, 44, 74], "chen": [6, 10, 17, 36, 44, 74], "le": [6, 10, 17, 36, 44, 74], "song": [6, 10, 17, 36, 44, 74], "martin": [6, 10, 17, 36, 44, 74], "j": [6, 10, 17, 36, 44, 49, 74], "wainwright": [6, 10, 17, 36, 44, 74], "michael": [6, 10, 17, 36, 44, 74], "jordan": [6, 10, 17, 36, 44, 74], "1802": [6, 10, 17, 19, 36, 44, 62, 63, 74], "07814": [6, 10, 17, 36, 44, 74], "float": [6, 9, 10, 12, 15, 17, 25, 34, 49, 61, 63, 74], "maximum": [6, 7, 10, 11, 15, 17, 18, 19, 20, 22, 23, 24, 31, 32, 33, 39, 49], "p": [6, 10, 17, 36, 44, 74, 75], "q": [6, 10, 17, 36, 44, 49, 74], "x_": [6, 10, 17, 36, 44, 74], "nn": [6, 8, 10, 11, 12, 17, 18, 19, 34, 35, 39, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76], "crossentropyloss": [6, 10, 17, 35, 39, 61, 63, 74], "adamw": [6, 35, 39], "rate": [6, 10, 11, 15, 17, 18, 19, 49], "pick": [6, 10, 17], "32": [6, 10, 17, 35, 39, 54, 60, 62, 74, 76], "64": [6, 10, 17, 42, 49, 60, 62, 76], "128": [6, 10, 17, 34, 35, 39, 42, 60, 61, 62, 63, 76], "epoch": [6, 10, 17, 34, 42, 60, 61, 62, 63, 74, 76], "develop": [7, 11, 15, 28, 31, 32, 33, 39, 40, 47, 53, 54, 55, 58], "wu": [7, 32, 33], "et": [7, 11, 15, 19, 32, 33, 47, 68, 69], "tongshuangwu": [7, 32, 33], "pr": 7, "model_path": 7, "cuda": [7, 35, 39, 58, 61, 63, 67, 70, 72, 73, 74, 75], "max_number_exampl": [7, 11], "context": [7, 33, 49], "concaten": [7, 25, 35, 39, 50, 54, 58, 64, 68, 71], "seper": [7, 33], "ce_typ": 7, "perturb": 7, "blank": 7, "cfexplan": [7, 11, 15, 18, 21, 22, 24], "integratedgradienttext": [8, 34, 35], "ankurtali": [8, 12, 19, 34, 35, 71, 72], "kera": [8, 11, 12, 17, 18, 19, 34, 35, 42, 49, 59, 60, 61, 62, 63, 64, 66, 68, 69, 71, 72, 76], "must": [8, 34, 35, 39, 40], "integrated_gradi": [8, 12, 19], "integratedgradi": [8, 12, 16, 19, 73], "compute_integrated_gradi": [8, 12, 19], "sklearnbas": [9, 12], "cate_encod": [9, 12], "cont_encod": [9, 12], "target_encod": [9, 12], "baseestim": 9, "train_siz": [9, 12, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54], "proport": [9, 12], "ce": [9, 13, 16, 58], "decision_tre": [9, 52], "shap_tre": 9, "limetabular": [10, 45], "lime_tabular": 10, "limetabularexplain": 10, "featureimport": [10, 12, 14, 22, 24], "kernelexplain": [10, 14], "shap_valu": [10, 14], "partialdependencetabular": [10, 48], "stabl": [10, 48, 49, 54], "partial_depend": [10, 17, 48], "html": [10, 48, 49, 54], "grid_resolut": [10, 17], "candid": 10, "dure": [10, 11, 15, 18, 19], "pdpexplan": [10, 22], "sensitivityanalysistabular": [10, 50], "salib": [10, 50], "sa": 10, "sensitivityexplan": [10, 22], "feedforward": [10, 42], "neural": [10, 60, 61, 62, 63, 64, 74, 76], "network": [10, 19, 36, 42, 44, 60, 61, 62, 63, 64, 68, 69, 74, 76], "l2xtabular": [10, 44], "adam": [10, 17, 34, 60, 61, 62, 63, 74, 76], "Not": [10, 12, 18, 40, 43, 45, 47, 51, 53], "maceexplain": [11, 15, 47, 56], "yang": [11, 15, 47], "paper": [11, 15, 18, 19, 42, 47, 59, 60, 61], "effici": [11, 15, 47], "framework": [11, 15, 33, 47], "cfretriev": 11, "gld": 11, "retriev": 11, "desir": [11, 25, 74], "counterfactualoptim": [11, 15], "x0": [11, 15, 19], "c": [11, 15, 18, 19, 25, 28, 29, 30, 31, 36, 39, 40, 53, 54, 55, 58, 75], "kappa": [11, 15, 18, 19], "binary_search_step": [11, 15, 18, 19, 58, 59, 60, 61, 62, 63], "01": [11, 15, 18, 19, 35, 39, 55, 56, 57], "num_iter": [11, 15, 18, 19, 58, 59, 60, 61, 62, 63, 66, 67], "1000": [11, 15, 18, 19, 50, 68, 71, 75], "grad_clip": [11, 15, 18, 19], "gamma": [11, 15, 19], "autom": [11, 18, 42, 59, 60, 61], "gdpr": [11, 18, 42, 59, 60, 61], "sandra": [11, 18, 42, 59, 60, 61], "wachter": [11, 18, 42, 59, 60, 61], "brent": [11, 18, 42, 59, 60, 61], "mittelstadt": [11, 18, 42, 59, 60, 61], "chri": [11, 18, 42, 59, 60, 61], "russel": [11, 18, 42, 59, 60, 61], "1711": [11, 18, 42, 59, 60, 61], "00399": [11, 18, 42, 59, 60, 61], "hing": [11, 15, 18, 19], "term": [11, 15, 18, 19], "iter": [11, 15, 18, 19], "adjust": [11, 15, 18, 19], "clip": [11, 15, 18, 19], "denomin": [11, 15], "regular": [11, 15, 19], "verbos": [11, 15, 19, 35, 39, 42, 60, 62, 76], "counterfactualexplain": [11, 15, 18, 42, 59, 60, 61, 63], "extract": [11, 21, 22, 25, 42], "inp": 12, "baselin": [12, 19], "output_index": 12, "50": [12, 34, 35, 39, 40, 43, 45, 47, 51, 53, 61, 63, 74], "integratedgradienttabular": 12, "num_random_tri": [12, 19], "trial": [12, 19], "_sample_baselin": 12, "linearbas": 12, "coeffici": [12, 22, 46], "linearexplan": [12, 22], "linearregress": [12, 46], "lasso": 12, "linear_regress": 12, "logisticregress": [12, 46], "logistic_regress": 12, "treebas": 12, "random": [12, 25, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54], "forest": [12, 36, 37, 50, 54], "structur": [12, 22, 31, 36, 44, 52, 60, 62, 74], "path": [12, 22, 28, 36, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "treeexplan": [12, 22], "treeregressor": [12, 52], "regressor": [12, 54], "sklearn": [12, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54], "decisiontreeregressor": 12, "tree_regressor": 12, "treeclassifi": [12, 52], "decisiontreeclassifi": 12, "tree_classifi": 12, "shaptreetabular": 12, "forecast": [13, 14, 15, 24, 55, 57], "shaptimeseri": [14, 57], "higher": [14, 15, 40, 55, 56, 57], "anomal": [14, 15, 55, 56, 57], "smooth_weight": 15, "grid_siz": 15, "reshap": [15, 50, 54, 60, 62, 76], "determin": [15, 36, 49, 55, 56, 57], "smooth": 15, "numer": [15, 49], "revis": 15, "version": [15, 31, 36, 39, 43, 70, 73], "rl": 15, "cem": 16, "limeimag": [17, 75], "top_label": 17, "limeimageexplain": 17, "maskexplan": [17, 21], "shapimag": [17, 76], "background_data": [17, 19], "background": [17, 19, 43], "pixelimport": [17, 19, 21], "partialdependenceimag": 17, "segment": 17, "quickshift": 17, "measur": 17, "averag": [17, 22, 34, 35, 36, 37, 39, 66, 67], "replac": [17, 42], "grid": [17, 22], "resolut": 17, "n_segment": 17, "l2ximag": [17, 74], "upsampl": [17, 74], "been": [18, 19, 36, 70, 73], "255": [18, 19, 30, 60, 62, 76], "integratedgradientimag": [19, 71, 72], "randomli": 19, "selvaraju": [19, 68, 69], "1610": [19, 68, 69], "02391": [19, 68, 69], "gradcamplu": 19, "chattopadhyai": 19, "pdf": 19, "1710": 19, "11063": 19, "cemoptim": 19, "beta": 19, "ae_model": 19, "07623": [19, 62, 63], "l1": 19, "ae": 19, "pn_optim": 19, "pertin": [19, 21, 62, 63], "pp_optim": 19, "contrastiveexplain": [19, 62, 63], "contrastiveexplan": [19, 21], "compon": [20, 36], "classfic": 20, "max_num_subplot": [20, 22, 23], "subplot": [20, 22, 23], "use_heatmap": 21, "item": [21, 22, 23, 24, 61, 63, 74], "entri": [21, 22, 23], "target_label": [21, 22, 23], "heatmap": 21, "importance_scor": [21, 22, 23, 24], "dog": [21, 22, 23, 26, 58, 70, 73], "cat": [21, 22, 23, 26, 35, 36, 39], "boundari": 21, "pn": 21, "pn_label": 21, "pp": 21, "pp_label": 21, "cf": [21, 22, 24], "cf_label": 21, "counterfactualexplan": 21, "feature_valu": 22, "sort": [22, 23, 30], "queri": [22, 24, 49], "font_siz": 22, "font": 22, "tabl": 22, "deviat": [22, 25], "pdp_mean": 22, "pdp_std": 22, "plot_std": 22, "shown": [22, 23], "mu": 22, "mu_star": 22, "sigma": 22, "mu_star_conf": 22, "plot_coeffici": 22, "tick": 22, "binari": [22, 34, 35, 36, 37, 39, 42, 58, 59, 60, 61, 62, 63, 64], "add_glob": 22, "whole": [22, 36], "add_loc": 22, "decision_path": 22, "node_ind": 22, "node": 22, "figsiz": 22, "15": [22, 29, 36, 40, 43, 45, 47, 51, 53, 55, 56, 57, 65, 66], "fontsiz": 22, "num_tokens_per_class": 23, "max_length": [23, 31, 32, 33, 34, 35, 39], "512": [23, 67], "figure_typ": 24, "max_num_variables_to_plot": 24, "25": [24, 49, 54], "bar": 24, "invers": [25, 30, 40, 43, 45, 51, 53, 54], "b": [25, 29, 30], "d": [25, 29, 30, 32], "cate_transform": [25, 30], "cont_transform": [25, 30, 41, 43, 44, 45, 47, 48, 51, 53, 54], "pseudo": 25, "recov": 25, "some_imag": 25, "360": 25, "240": [25, 30, 75], "vector": [25, 30, 36, 37], "drop": [25, 40, 42, 50, 55, 56, 57], "input_featur": 25, "zero": [25, 34, 35, 39], "unit": [25, 40, 42, 43, 45, 47, 49, 51, 53, 55, 56, 57], "varianc": 25, "ratio": 25, "miss": 25, "chosen": 25, "itself": 25, "save": [25, 49], "target_transform": [25, 30, 50, 54], "hold": [25, 36], "expect": 25, "ith": 25, "00392156862745098": 25, "round": 25, "resampl": 25, "smaller": 25, "edg": 25, "match": 25, "strategi": 25, "remove_punctu": 25, "start": [25, 36, 49], "re": [25, 36, 37], "sub": 25, "over": 25, "fraction": 25, "random_st": [25, 42], "guarante": 25, "seed": [25, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53], "balanc": 25, "minor": 25, "decreas": [25, 40, 43], "major": 25, "increas": [25, 36, 40, 43], "host": [26, 37], "127": [26, 28, 31, 39, 40, 53, 54, 55, 58], "port": 26, "8050": [26, 28, 31, 39, 40, 53, 54, 55, 58], "omnixai": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "render": [28, 31, 32, 33, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "sphinx": [28, 31, 32, 33, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "delet": [28, 31, 32, 33, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "cell": [28, 31, 32, 33, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "io": [28, 31, 32, 33, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "pio": [28, 31, 32, 33, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "png": [28, 31, 32, 33, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "o": [28, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 64, 65, 70, 73], "join": [28, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "now": [28, 34, 35, 36, 39, 40, 43, 49, 53, 54, 58, 61, 63, 74], "than": [28, 33, 36, 65], "onc": [28, 36], "n": [28, 29, 34, 35, 39, 49], "append": [28, 32, 35, 39, 55, 56, 57, 64, 68, 71], "print": [28, 29, 30, 31, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 71, 74, 75, 76], "serv": [28, 31, 39, 40, 53, 54, 55, 58], "flask": [28, 31, 39, 40, 53, 54, 55, 58], "34": [28, 29, 30, 31, 39, 40, 43, 53, 54, 55, 58], "lazi": [28, 31, 39, 40, 53, 54, 55, 58], "environ": [28, 31, 33, 39, 40, 49, 53, 54, 55, 58], "product": [28, 31, 39, 40, 53, 54, 55, 58], "warn": [28, 31, 36, 39, 40, 53, 54, 55, 58, 76], "server": [28, 31, 39, 40, 53, 54, 55, 58], "deploy": [28, 31, 39, 40, 53, 54, 55, 58], "wsgi": [28, 31, 39, 40, 53, 54, 55, 58], "debug": [28, 31, 39, 40, 53, 54, 55, 58], "off": [28, 31, 36, 39, 40, 53, 54, 55, 58], "press": [28, 31, 39, 40, 53, 54, 55, 58], "ctrl": [28, 31, 39, 40, 53, 54, 55, 58], "quit": [28, 31, 39, 40, 53, 54, 55, 58], "notebook": [29, 49], "how": [29, 36, 40, 49], "f": [29, 30, 34, 49], "39": [29, 30, 40, 43, 45, 47, 49, 51, 53, 54, 65, 68, 71, 75], "ye": [29, 30, 36, 42], "swap": 29, "digit": [29, 60, 61, 62, 63, 74, 76], "torchvis": [29, 58, 59, 61, 63, 65, 67, 69, 72, 74, 75], "test_data": [29, 61, 63, 74], "download": [29, 61, 63, 70, 73, 74], "10000": [29, 55, 56, 57], "11": [29, 30, 36, 40, 49, 50, 76], "displai": [29, 30], "loop": 29, "camera": [29, 30, 58, 59, 69], "what": [29, 31, 32, 33, 34, 35, 36, 38], "great": [29, 31, 32, 34, 35, 36, 38, 39], "movi": [29, 31, 32, 34, 35, 38, 39], "tast": [29, 32, 34, 35, 38], "best": [29, 32, 34, 35, 38, 39], "film": [29, 32, 34, 35, 38, 39], "ever": [29, 32, 34, 35, 38, 39], "ve": [29, 32, 34, 35, 38, 39], "never": [29, 32, 34, 35, 38, 39, 40, 43, 45, 47, 51, 53], "watch": [29, 32, 34, 35, 38, 39], "someth": [29, 32, 34, 35, 36, 38, 39], "bad": [29, 32, 34, 35, 36, 38, 39], "len": [29, 34, 35, 39, 58, 59, 64, 68, 69, 71, 72, 75], "17": [29, 38, 54, 55, 56, 57], "18": [29, 36, 49, 54], "29": 29, "1319": 29, "76541": 29, "610": 29, "314": 29, "173": 29, "19": [29, 36, 49], "ts_a": 29, "ts_b": 29, "try": [30, 41, 43, 44, 45, 47, 48, 49, 51, 53, 54, 67], "22474487": 30, "120": 30, "6227660078332259": 30, "4736296010332684": 30, "5178561161676974": 30, "680918560398684": 30, "7265094189091538": 30, "3632547094545769": 30, "2762645695949752": 30, "unknown": 30, "xxx": [30, 43], "lt": [30, 40, 43, 45, 47, 51, 53], "gt": [30, 40, 43, 45, 47, 51, 53], "limit": [31, 39], "interview": 31, "neither": 31, "funni": 31, "nor": 31, "witti": 31, "even": [31, 36], "like": [31, 36, 43], "overal": [31, 36], "distilbert": [31, 32, 38], "uncas": [31, 32, 38], "finetun": [31, 32, 38], "sst": [31, 32, 38], "english": [31, 32, 38], "return_all_scor": [31, 32, 38], "ss": 31, "There": [31, 39, 58], "partit": [31, 36, 38], "3it": 31, "70": 31, "info": [31, 32, 33, 39, 49], "polyjuice_wrapp": [31, 32, 33, 39], "setup": [31, 32, 33, 39], "spaci": [31, 32, 33, 39], "processor": [31, 32, 33, 39, 70, 73], "perplex": [31, 32, 33, 39], "scorer": [31, 32, 33, 39], "ask": [31, 32, 33, 36, 39], "truncat": [31, 32, 33, 39], "predefin": [31, 32, 33, 39], "werkzeug": [31, 39], "idx2label": [32, 58, 59, 68, 69, 71, 72, 75], "build": [32, 33, 40, 61, 63, 70, 73], "def": [32, 33, 34, 35, 39, 42, 49, 55, 56, 57, 61, 63, 64, 68, 70, 71, 73, 74, 75], "_predict": [32, 33], "pred": 32, "els": [32, 34, 35, 36, 39, 58, 60, 61, 62, 63, 67, 72, 74, 75, 76], "unittest": [33, 34, 46, 70, 73, 75], "model_nam": 33, "deepset": 33, "roberta": 33, "squad2": 33, "isinst": [33, 49], "farm": 33, "give": [33, 36], "freedom": 33, "peopl": [33, 36], "switch": 33, "covers": 33, "electr": 33, "vehicl": 33, "emit": 33, "less": [33, 36], "harm": 33, "pollut": 33, "convent": 33, "ultim": 33, "cleaner": [33, 40, 43, 45, 47, 51, 53], "human": [33, 36], "beings": 33, "eletr": 33, "fetch_20newsgroup": [34, 35, 36, 37, 39], "textmodel": [34, 35, 39], "num_embed": [34, 35, 39], "num_class": [34, 35, 39, 60, 62, 76], "super": [34, 35, 39, 61, 63, 74], "embedding_s": [34, 35, 39], "embeddings_initi": 34, "randomuniform": 34, "minval": 34, "maxval": 34, "conv_lay": [34, 35, 39, 61, 63, 74], "conv1d": [34, 35, 39], "activ": [34, 35, 36, 39, 42, 49, 60, 62, 76], "relu": [34, 35, 39, 49, 60, 61, 62, 63, 74, 76], "dropout": [34, 35, 39, 49, 60, 61, 62, 63, 74, 76], "output_lay": [34, 35, 39], "dens": [34, 42, 49, 60, 61, 62, 63, 74, 76], "expand_dim": [34, 49, 60, 62, 64, 68, 71, 76], "axi": [34, 35, 39, 42, 49, 50, 54, 60, 62, 64, 68, 71, 76], "reduce_max": 34, "concat": 34, "relat": [34, 35, 36, 37, 39], "train_data": [34, 35, 39, 61, 63, 74], "read_csv": [34, 35, 39, 42, 49, 55, 56, 57], "home": [34, 35, 39, 70, 73, 76], "ywz": [34, 35, 39, 70, 73, 76], "labeledtraindata": [34, 35, 39], "tsv": [34, 35, 39], "x_train": [34, 35, 36, 37, 39, 42, 50, 54, 60, 61, 62, 63, 76], "y_train": [34, 35, 36, 37, 39, 42, 50, 54, 60, 61, 62, 63, 76], "astyp": [34, 35, 39, 42, 55, 56, 57, 60, 62, 76], "x_test": [34, 35, 36, 37, 39, 42, 50, 54, 60, 61, 62, 63, 76], "y_test": [34, 35, 36, 37, 39, 42, 50, 54, 60, 61, 62, 63, 76], "max_len": [34, 35, 39], "float32": [34, 35, 39, 42, 49, 60, 62, 76], "evalu": [34, 35, 39, 42, 60, 61, 62, 63, 74, 76], "1e": [34, 35, 39, 61, 63, 74], "loss_fn": 34, "sparsecategoricalcrossentropi": 34, "from_logit": [34, 42, 60, 62, 76], "train_dataset": 34, "from_tensor_slic": 34, "shuffl": [34, 35, 39, 61, 63, 74], "buffer_s": 34, "1024": 34, "enumer": [34, 61, 63, 74], "gradienttap": 34, "tape": 34, "trainable_weight": 34, "apply_gradi": 34, "zip": [34, 61, 63, 74, 75], "200": [34, 42, 54], "6866752505302429": 34, "4109169542789459": 34, "21237820386886597": 34, "1540527492761612": 34, "08126655220985413": 34, "02999718114733696": 34, "008433952927589417": 34, "009998280555009842": 34, "0030068857595324516": 34, "001554026734083891": 34, "argmax": [34, 35, 39], "accuraci": [34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 60, 61, 62, 63, 74, 76], "f1_score": [34, 35, 36, 37, 39], "8560798903465829": 34, "id_to_word": [34, 35, 39], "util": [35, 39, 42, 60, 61, 62, 63, 74, 76], "trainer": [35, 39], "inputdata": [35, 39, 61, 63, 74], "dataload": [35, 39, 61, 63, 74], "normal_": [35, 39], "modulelist": [35, 39], "unsqueez": [35, 39, 75], "dim": [35, 39, 58, 75], "permut": [35, 39], "devic": [35, 39, 58, 61, 63, 67, 72, 74, 75], "is_avail": [35, 39, 58, 61, 63, 67, 72, 74, 75], "cpu": [35, 39, 58, 61, 63, 64, 67, 72, 74, 75], "optimizer_class": [35, 39], "loss_func": [35, 39, 61, 63, 74], "train_x": [35, 39], "train_i": [35, 39], "complet": [35, 36, 39, 44, 74], "0008": 35, "eval": [35, 39, 61, 63, 74, 75], "data_load": [35, 39], "collate_fn": [35, 39], "collate_func": [35, 39], "detach": [35, 39, 74, 75], "8458027386386188": 35, "advantag": [36, 44, 74], "fast": [36, 44, 74], "disadvantag": [36, 44, 74], "qualiti": [36, 44, 74], "highli": [36, 40, 44, 74], "affect": [36, 44, 74], "factor": [36, 44, 74], "hyperparamet": [36, 44], "ensembl": [36, 37, 46, 50, 53, 54], "alt": [36, 37], "atheism": [36, 37], "soc": [36, 37], "religion": [36, 37], "christian": [36, 37], "newsgroups_train": [36, 37], "newsgroups_test": [36, 37], "tfdif": [36, 37], "train_vector": [36, 37], "test_vector": [36, 37], "randomforestclassifi": [36, 37], "500": [36, 37], "925233644859813": 36, "idx": [36, 37], "83": [36, 37, 70, 73], "0039": 36, "8674698795180723": 36, "subject": [36, 37], "request": 36, "darwin": 36, "fish": 36, "organ": [36, 37], "univers": 36, "mexico": 36, "albuquerqu": 36, "recent": 36, "seen": 36, "anyon": [36, 37], "contact": 36, "email": 36, "me": 36, "john": 36, "dan": 36, "rose": 36, "aros": 36, "nation": [36, 37], "repent": 36, "my": 36, "own": [36, 40, 43, 45, 47, 51, 53], "view": [36, 49], "63": 36, "mcovingt": 36, "covington": 36, "heard": 36, "radio": 36, "todai": 36, "student": 36, "confer": 36, "were": 36, "america": 36, "sin": [36, 37], "sexual": 36, "promiscu": 36, "repli": 36, "ca": 36, "claim": 36, "someon": 36, "am": 36, "fact": 36, "him": 36, "jesu": 36, "equip": 36, "judg": 36, "lewi": 36, "essai": 36, "world": 36, "war": 36, "ii": 36, "leader": 36, "britain": 36, "urg": 36, "horror": 36, "strongli": [36, 43], "disagre": 36, "turn": 36, "behav": 36, "incredibli": 36, "toward": 36, "god": 36, "encourag": 36, "forc": 36, "folk": 36, "particip": 36, "directli": [36, 46], "oppos": 36, "written": 36, "far": 36, "abov": [36, 40, 42, 61, 63, 74], "luxuri": 36, "live": 36, "land": 36, "slaughter": 36, "children": 36, "million": 36, "stricken": 36, "out": 36, "honor": 36, "due": 36, "everi": 36, "ow": 36, "apologi": 36, "bit": [36, 40], "public": 36, "said": [36, 37], "decai": 36, "bibl": 36, "quiz": 36, "distribut": 36, "articl": 36, "healta": 36, "tammi": 36, "r": [36, 58, 59, 68, 69, 70, 71, 72, 73, 75], "heali": 36, "coven": 36, "he": 36, "idol": 36, "worship": 36, "high": [36, 43], "priest": 36, "could": [36, 43], "enter": 36, "holi": 36, "year": 36, "dai": 36, "aton": 36, "familiar": 36, "knowledg": 36, "believ": 36, "translat": 36, "would": 36, "had": 36, "think": 36, "wrong": 36, "again": 36, "just": 36, "suggest": [36, 43], "correct": 36, "dean": 36, "danb": 36, "babcock": 36, "thought": 36, "commun": 36, "compani": 36, "voic": 36, "bil": 36, "bill": 36, "conner": 36, "jame": 36, "felder": 36, "spbach": 36, "wrote": 36, "logic": 36, "alert": 36, "incredul": 36, "hard": 36, "doe": 36, "liar": 36, "pursuas": 36, "look": [36, 49], "koresh": 36, "yourself": 36, "basi": 36, "reject": 36, "account": 36, "thing": 36, "madalyn": 36, "face": 36, "silli": 36, "okai": 36, "disbeliev": 36, "admit": 36, "fallaci": 36, "awar": 36, "reader": 36, "assert": 36, "mam": 36, "mike": 36, "mcangu": 36, "american": 36, "evolut": 36, "mat": 36, "tin": 36, "pl9": 36, "53": [36, 40, 43, 45, 47, 51, 53], "tue": 36, "apr": 36, "1993": 36, "gmt": 36, "robert": 36, "singleton": 36, "bob": 36, "sure": 36, "exclus": 36, "lend": 36, "notion": 36, "posterior": 36, "atheist": 36, "pitch": 36, "thu": 36, "necessarili": 36, "reduc": 36, "quantiti": 36, "theist": 36, "divin": 36, "fall": 36, "prei": 36, "ockham": 36, "razor": 36, "phenomenon": 36, "being": 36, "satisfactorili": 36, "independ": 36, "evid": 36, "occam": 36, "law": 36, "natur": 36, "often": 36, "end": 36, "seem": 36, "odd": 36, "simultan": 36, "condemn": 36, "primit": 36, "unscientif": 36, "childish": 36, "yet": [36, 49], "complex": 36, "scientif": 36, "straightforeward": 36, "appar": 36, "cute": 36, "character": 36, "howev": 36, "inconsist": 36, "statement": 36, "still": 36, "unnecessari": 36, "level": 36, "idea": 36, "themselv": 36, "thei": [36, 40], "unnecessarili": 36, "descript": 36, "part": 36, "sfp": 36, "sheila": 36, "patterson": 36, "mari": 36, "assumpt": 36, "cornel": 36, "cit": 36, "22": [36, 40, 43, 45, 47, 51, 53, 54], "mpaul": 36, "marxhausen": 36, "paul": 36, "feel": 36, "better": 36, "phrase": 36, "sai": 36, "parent": 36, "sanctifi": 36, "beyond": 36, "sound": 36, "inabl": 36, "grasp": 36, "grace": 36, "incarn": 36, "through": 36, "alwai": [36, 49], "impress": 36, "chose": 36, "woman": 36, "bring": 36, "himself": 36, "prove": 36, "down": 36, "hi": 36, "perfect": 36, "touch": 36, "ah": 36, "wonder": 36, "ithaca": 36, "ny": 36, "mark": 36, "boston": [36, 50], "asid": 36, "moder": 36, "rick": 36, "granberri": 36, "wo": 36, "quot": 36, "error": 36, "opinion": 36, "writer": 36, "plain": 36, "confus": 36, "come": [36, 49], "lexington": 36, "church": 36, "brought": 36, "team": 36, "actual": 36, "il": 36, "up": [36, 49, 65], "friend": 36, "tell": 36, "go": [36, 70, 73], "northeast": 36, "wast": 36, "talent": 36, "realli": 36, "kind": [36, 53, 54], "insid": 36, "joke": 36, "took": 36, "well": [36, 66, 67], "inde": 36, "misinform": 36, "sun": 36, "ok": 36, "mail": 36, "marshal": 36, "kevin": 36, "death": 36, "penalti": 36, "polit": 36, "virginia": 36, "tech": [36, 40, 43, 45, 47, 51, 53], "scienc": 36, "dept": 36, "blacksburg": 36, "va": 36, "46": 36, "fascin": 36, "argu": 36, "abort": 36, "defend": 36, "homosexu": 36, "popul": [36, 54], "control": 36, "insist": 36, "biolog": 36, "punish": 36, "benedikt": 36, "contardictori": 36, "case": [36, 49], "excel": 36, "growth": 36, "sorri": 36, "escap": 36, "assum": 36, "alik": 36, "vari": 36, "greatli": 36, "attack": 36, "presum": 36, "present": 36, "person": 36, "right": 36, "regardless": 36, "arrog": 36, "individu": 36, "bodi": 36, "domain": 36, "jcj": 36, "becom": [36, 40], "huh": 36, "whuzzat": 36, "muirm": 36, "maxwel": 36, "muir": 36, "candor": 36, "happi": 36, "proven": 36, "problem": 36, "broken": 36, "went": 36, "journei": 36, "lukewarm": 36, "agnostic": 36, "although": 36, "faith": 36, "jeff": 36, "johnson": 36, "9230769230769231": 37, "nntp": 37, "murder": 37, "7it": 38, "51": [38, 40, 42], "0010": 39, "8492442322991249": 39, "tensor": [39, 58, 59, 61, 63, 69, 72], "preprocess_func": [39, 60, 62, 76], "postprocess_func": 39, "state": [40, 43, 45, 47, 51, 53], "gov": [40, 43, 45, 47, 51, 53], "77516": [40, 43, 45, 47, 51, 53], "bachelor": [40, 43, 45, 47, 51, 53], "emp": [40, 43, 45, 47, 51, 53], "inc": [40, 43, 45, 47, 51, 53], "83311": [40, 43, 45, 47, 51, 53], "38": [40, 43, 45, 47, 51, 53], "privat": [40, 43, 45, 47, 51, 53], "215646": [40, 43, 45, 47, 51, 53], "234721": [40, 43, 45, 47, 51, 53], "11th": [40, 43, 45, 47, 51, 53], "338409": [40, 43, 45, 47, 51, 53], "32556": [40, 43, 45, 47, 51, 53], "257302": [40, 43, 45, 47, 51, 53], "assoc": [40, 43, 45, 47, 51, 53], "acdm": [40, 43, 45, 47, 51, 53], "32557": [40, 43, 45, 47, 51, 53], "40": [40, 43, 45, 47, 51, 53], "154374": [40, 43, 45, 47, 51, 53], "32558": [40, 43, 45, 47, 51, 53], "58": [40, 43, 45, 47, 51, 53], "151910": [40, 43, 45, 47, 51, 53], "32559": [40, 43, 45, 47, 51, 53], "201490": [40, 43, 45, 47, 51, 53], "32560": [40, 43, 45, 47, 51, 53], "52": [40, 43, 45, 47, 51, 53, 54], "287927": [40, 43, 45, 47, 51, 53], "marri": [40, 43, 45, 47, 51, 53], "adm": [40, 43, 45, 47, 51, 53], "cleric": [40, 43, 45, 47, 51, 53], "white": [40, 43, 45, 47, 51, 53], "civ": [40, 43, 45, 47, 51, 53], "spous": [40, 43, 45, 47, 51, 53], "exec": [40, 43, 45, 47, 51, 53], "manageri": [40, 43, 45, 47, 51, 53], "husband": [40, 43, 45, 47, 51, 53], "divorc": [40, 43, 45, 47, 51, 53], "handler": [40, 43, 45, 47, 49, 51, 53], "prof": [40, 43, 45, 47, 51, 53], "specialti": [40, 43, 45, 47, 51, 53], "wife": [40, 43, 45, 47, 51, 53], "op": [40, 43, 45, 47, 51, 53], "inspct": [40, 43, 45, 47, 51, 53], "widow": [40, 43, 45, 47, 51, 53], "unmarri": [40, 43, 45, 47, 51, 53], "child": [40, 43, 45, 47, 51, 53], "2174": [40, 43, 45, 47, 51, 53], "50k": [40, 43, 45, 47, 51, 53], "cuba": [40, 43, 45, 47, 51, 53], "15024": [40, 43, 45, 47, 51, 53], "32561": [40, 43, 45, 47, 51, 53], "lead": 40, "potenti": 40, "sociolog": 40, "bia": 40, "observ": 40, "strong": 40, "matrit": 40, "imbalanc": 40, "among": 40, "therefor": 40, "avoid": 40, "rough": 40, "educt": 40, "least": 40, "them": [40, 58, 64, 68, 71], "rel": 40, "low": 40, "12345": 40, "labels_train": [40, 43, 44, 45, 47, 48, 51, 53], "labels_test": [40, 43, 44, 45, 47, 48, 51, 53], "model_select": [40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54], "train_test_split": [40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54], "80": [40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54], "accuracy_scor": [40, 41, 43, 44, 45, 47, 48, 51, 53], "26048": [40, 41, 43, 44, 45, 47, 48, 51, 53], "6513": [40, 41, 43, 44, 45, 47, 48, 51, 53], "8593582066635959": 40, "describ": 40, "longer": [40, 76], "But": 40, "causal": 40, "caus": [40, 43], "unclear": 40, "back": [40, 43, 45, 49, 51, 53, 54], "1653": [40, 43, 44, 45, 51, 52, 53], "1658": [40, 53], "ocup": 40, "train_label": [41, 60, 62, 74, 76], "test_label": [41, 60, 62, 74, 76], "108": [41, 43, 44, 45, 47, 48, 51, 53], "8668816213726394": [41, 43, 44, 45, 47, 48, 51, 53], "standardscal": [42, 43], "diabetes_data": 42, "file_path": 42, "to_replac": 42, "No": 42, "polyuria": 42, "polydipsia": 42, "sudden": 42, "weak": 42, "polyphagia": 42, "genit": 42, "thrush": 42, "blur": 42, "itch": 42, "irrit": 42, "delai": 42, "heal": 42, "paresi": 42, "muscl": 42, "stiff": 42, "alopecia": 42, "obes": 42, "x_train_un": 42, "x_test_un": 42, "test_siz": 42, "stratifi": 42, "sc": 42, "fit_transform": 42, "train_tf_model": 42, "to_categor": [42, 60, 62, 76], "sequenti": [42, 60, 61, 62, 63, 74, 76], "softplu": 42, "schedul": 42, "exponentialdecai": 42, "initial_learning_r": 42, "decay_step": 42, "decay_r": 42, "99": [42, 49, 58, 59, 60, 61, 63, 74], "staircas": 42, "sgd": 42, "momentum": 42, "nesterov": 42, "categoricalcrossentropi": [42, 60, 62, 76], "compil": [42, 49, 60, 62, 64, 70, 73, 76], "train_loss": 42, "train_accuraci": 42, "test_loss": 42, "test_accuraci": 42, "4f": 42, "csv": [42, 49, 55, 56, 57], "416": 42, "104": 42, "0631": 42, "9856": [42, 60], "0568": 42, "9808": 42, "gptexplain": 43, "apikei": 43, "openai": 43, "api": 43, "sk": 43, "test_x": [43, 44, 45, 46, 51, 52, 56, 57], "150": 43, "slower": 43, "kmean": 43, "summar": 43, "readi": [43, 49, 53, 54], "deprec": [43, 65, 67, 76], "wish": [43, 49], "reproduc": 43, "previou": 43, "make_pipelin": 43, "with_mean": 43, "lassolars": 43, "pass": [43, 65, 76], "sample_weight": 43, "__sample_weight": 43, "alpha": 43, "original_alpha": 43, "sqrt": 43, "n_sampl": 43, "label_1": 43, "6503": 43, "associ": 43, "addition": 43, "impact": 43, "label_0": 43, "3756": 43, "125": 43, "necessari": [44, 45, 47, 53, 54], "1953": 44, "8647768803169436": 44, "1655": [45, 51], "pprint": 46, "valid": [46, 49, 52], "8518347919545525": 46, "fix": 47, "pdo": 48, "takeawai": 49, "instal": [49, 70, 73], "ml4ir": 49, "ltr": 49, "order": 49, "document": [49, 74], "pointwis": 49, "listwis": 49, "record": 49, "infer": 49, "validityrankingexplain": 49, "singh": 49, "khosla": 49, "anand": 49, "2020": [49, 76], "2004": 49, "13972": 49, "upgrad": 49, "nbformat": 49, "df_train": 49, "file_0": 49, "head": 49, "query_id": 49, "query_text": 49, "text_match_scor": 49, "page_views_scor": 49, "quality_scor": 49, "click": 49, "domain_id": 49, "domain_nam": 49, "name_match": 49, "query_2": 49, "mhs7a7rjb1y4bjt": 49, "473730": 49, "000000": 49, "00000": 49, "domain_2": 49, "063190": 49, "205381": 49, "30103": 49, "query_5": 49, "knjnwv": 49, "368108": 49, "030636": 49, "domain_0": 49, "370628": 49, "041261": 49, "366700": 49, "082535": 49, "333836": 49, "042572": 49, "325021": 49, "046478": 49, "featureconfig": 49, "yaml": 49, "config": 49, "activate_2020": 49, "feature_config": 49, "tfrecord": 49, "usag": 49, "charact": 49, "bilstm": 49, "vocablookup": 49, "modelconfig": 49, "model_config": 49, "read": 49, "architecture_kei": 49, "dnn": 49, "first_dens": 49, "first_dropout": 49, "second_dens": 49, "final_dens": 49, "null": 49, "data_format": 49, "data_dir": 49, "execution_mod": 49, "train_inference_evalu": 49, "loss_kei": 49, "softmax_cross_entropi": 49, "models_dir": 49, "explain_demo_2022": 49, "logs_dir": 49, "log": 49, "run_id": 49, "activate_demo": 49, "model_dir": 49, "local_io": 49, "localio": 49, "file_io": 49, "fileio": 49, "sequenceexamplefeatureconfig": 49, "relevance_model": 49, "relevancemodel": 49, "tfrecordtypekei": 49, "logger": 49, "getlogg": 49, "get_logg": 49, "setlevel": 49, "autograph": 49, "set_verbos": 49, "tf_cpp_min_log_level": 49, "get_inst": 49, "tfrecord_typ": 49, "sequence_exampl": 49, "feature_config_dict": 49, "read_yaml": 49, "get_train_featur": 49, "saniti": 49, "model_fil": 49, "final": 49, "output_nam": 49, "relevance_scor": 49, "is_compil": 49, "retrain": 49, "kmodel": 49, "load_model": 49, "infer_fn": 49, "signatur": 49, "serving_tfrecord": 49, "tfrecord_help": 49, "get_sequence_example_proto": 49, "features_df": 49, "fillna": 49, "renam": [49, 55, 56, 57], "serving_info": 49, "context_featur": 49, "sequence_featur": 49, "context_feature_nam": 49, "proto": 49, "groupbi": 49, "ranking_scor": 49, "se": 49, "constant": 49, "serializetostr": 49, "predicted_scor": 49, "reset_index": 49, "362720": 49, "tlaud": 49, "venv": 49, "lib": [49, 70, 73, 76], "python3": [49, 70, 73, 76], "site": [49, 70, 73, 76], "ipykernel_launch": 49, "settingwithcopywarn": 49, "loc": 49, "row_index": 49, "col_index": 49, "caveat": 49, "pydata": 49, "user_guid": 49, "versu": 49, "cwd": 49, "sy": 49, "11998416": 49, "19389412": 49, "20375773": 49, "17943792": 49, "11195529": 49, "1909707": 49, "5671": 49, "query_1487": 49, "qcz4xhln": 49, "227694": 49, "5672": 49, "016954": 49, "5673": 49, "query_1490": 49, "wynff89": 49, "474600": 49, "190735": 49, "5674": 49, "620355": 49, "143310": 49, "5675": 49, "508362": 49, "5676": 49, "similarli": 49, "sample_queri": 49, "trainabl": 49, "ranking_explain": 49, "21": [49, 54], "23": [49, 54], "top_featur": 49, "dict_kei": 49, "kendalltauresult": 49, "9999999999999999": 49, "pvalu": 49, "002777777777777778": 49, "kendal": 49, "grade": 49, "fig": 49, "ipython_figur": 49, "update_layout": 49, "autos": 49, "1800": 49, "load_boston": 50, "rf": [50, 54], "randomforestregressor": [50, 54], "mserror": [50, 54], "404": 50, "102": 50, "215751067843145": 50, "8446184553968985": 52, "some_transform": [53, 54], "fetch_california_h": 54, "medinc": 54, "houseag": 54, "averoom": 54, "avebedrm": 54, "aveoccup": 54, "latitud": 54, "3252": 54, "41": 54, "984127": 54, "023810": 54, "322": 54, "555556": 54, "37": 54, "88": 54, "3014": 54, "238137": 54, "971880": 54, "2401": 54, "109842": 54, "86": 54, "2574": 54, "288136": 54, "073446": 54, "496": 54, "802260": 54, "85": 54, "6431": 54, "817352": 54, "073059": 54, "558": 54, "547945": 54, "8462": 54, "281853": 54, "081081": 54, "565": 54, "181467": 54, "20635": 54, "5603": 54, "045455": 54, "133333": 54, "845": 54, "560606": 54, "48": [54, 64], "20636": 54, "5568": 54, "114035": 54, "315789": 54, "356": 54, "122807": 54, "49": 54, "20637": 54, "7000": 54, "205543": 54, "120092": 54, "1007": 54, "325635": 54, "43": 54, "20638": 54, "8672": 54, "329513": 54, "171920": 54, "741": 54, "123209": 54, "20639": 54, "3886": 54, "254717": 54, "162264": 54, "1387": 54, "616981": 54, "longitud": 54, "122": 54, "526": 54, "585": 54, "24": 54, "521": 54, "413": 54, "422": 54, "121": 54, "09": [54, 64], "781": 54, "771": 54, "923": 54, "847": 54, "894": 54, "20640": 54, "16512": 54, "4128": 54, "3075597163231951": 54, "24209091231809937": 54, "sythent": [55, 56, 57], "horizont": [55, 56, 57], "1970": [55, 56, 57], "928031": [55, 56, 57], "05": [55, 56, 57], "156620": [55, 56, 57], "390650": [55, 56, 57], "400804": [55, 56, 57], "874490": [55, 56, 57], "02": [55, 56, 57], "04": [55, 56, 57], "55": [55, 56, 57], "362724": [55, 56, 57], "657373": [55, 56, 57], "472341": [55, 56, 57], "033154": [55, 56, 57], "950466": [55, 56, 57], "9150": [55, 56, 57], "9300": [55, 56, 57], "percentil": [55, 56, 57], "90": [55, 56, 57], "anomaly_scor": [55, 56, 57], "sum": [55, 56, 57, 70, 73], "98": [55, 56, 61, 63, 74], "json": [58, 59, 68, 69, 71, 72, 75], "img_1": 58, "dog_cat": [58, 65, 72, 75], "img_2": 58, "img_3": 58, "visul": 58, "imagenet_class_index": [58, 59, 68, 69, 71, 72, 75], "read_fil": [58, 59, 68, 69, 71, 72, 75], "class_idx": [58, 59, 68, 69, 71, 72, 75], "sent": 58, "purpos": 59, "pyplot": [60, 61, 62, 63, 76], "plt": [60, 61, 62, 63, 76], "img_row": [60, 62, 76], "img_col": [60, 62, 76], "load_data": [60, 62, 76], "backend": [60, 62, 76], "image_data_format": [60, 62, 76], "channels_first": [60, 62, 76], "input_shap": [60, 62, 76], "train_img": [60, 62, 74, 76], "conv2d": [60, 61, 62, 63, 74, 76], "maxpooling2d": [60, 62, 76], "pool_siz": [60, 62, 76], "flatten": [60, 61, 62, 63, 74, 76], "validation_data": [60, 62, 76], "469": [60, 62, 76], "5m": [60, 62, 76], "1696": 60, "9492": 60, "val_loss": [60, 62, 76], "0436": 60, "val_accuraci": [60, 62, 76], "9855": [60, 76], "0478": 60, "0352": 60, "9882": 60, "0324": 60, "9896": [60, 62], "0315": 60, "9892": [60, 62], "0223": 60, "9929": 60, "0320": 60, "9887": [60, 62], "0179": 60, "9940": 60, "0314": 60, "9901": 60, "0141": 60, "9952": 60, "0365": 60, "9888": 60, "0113": 60, "9960": 60, "9903": [60, 76], "0109": [60, 62, 76], "9965": 60, "0297": [60, 62], "9918": 60, "0083": 60, "9972": 60, "0337": 60, "0072": [60, 76], "9976": 60, "0382": 60, "9895": [60, 62], "03824701905250549": 60, "9894999861717224": 60, "__len__": [61, 63, 74], "__getitem__": [61, 63, 74], "mnistnet": [61, 63, 74], "maxpool2d": [61, 63, 74], "fc_layer": [61, 63, 74], "320": [61, 63, 74], "train_load": [61, 63, 74], "test_load": [61, 63, 74], "lr": [61, 63, 74], "zero_grad": [61, 63, 74], "backward": [61, 63, 74], "correct_pr": [61, 63, 74], "total_pr": [61, 63, 74], "_": [61, 63, 74], "correct_count": [61, 63, 74], "1f": [61, 63, 74], "97": [61, 63], "1712": 62, "9493": 62, "0509": 62, "9837": 62, "0467": 62, "9857": 62, "0364": 62, "9880": 62, "0331": 62, "0323": [62, 76], "9884": 62, "0226": 62, "9927": 62, "0345": 62, "9890": 62, "0171": 62, "9942": 62, "0371": 62, "0150": 62, "9949": [62, 76], "9906": [62, 76], "9966": 62, "0428": 62, "0101": 62, "9967": 62, "0356": 62, "0086": 62, "9969": 62, "0393": 62, "0065": [62, 76], "9977": 62, "0399": 62, "9898": 62, "03988948091864586": 62, "989799976348877": 62, "vgg16": [64, 66, 67], "feature_visu": [64, 65, 66, 67], "featuremapvisu": [64, 65], "dog_cat_2": [64, 68, 71], "img_to_arrai": [64, 68, 71], "preprocess_input": [64, 68, 71], "2022": 64, "08": 64, "038022": 64, "core": 64, "platform": 64, "cpu_feature_guard": 64, "cc": 64, "193": 64, "oneapi": 64, "onednn": 64, "instruct": [64, 76], "critic": 64, "oper": 64, "avx2": 64, "fma": 64, "enabl": 64, "rebuild": 64, "flag": 64, "vgg": 65, "sinc": [65, 74], "enum": 65, "equival": 65, "resnet50_weight": 65, "imagenet1k_v1": 65, "layer2": 65, "neuron": [66, 67], "direct": [66, 67], "visit": [66, 67], "distil": [66, 67], "pub": [66, 67], "featurevisu": [66, 67], "maxim": [66, 67], "fft": 67, "precondit": 67, "use_fft": 67, "irfft": 67, "releas": [67, 70, 73], "ifft": 67, "trigger": [67, 70, 73], "intern": [67, 70, 73], "aten": 67, "src": 67, "nativ": 67, "spectralop": 67, "cpp": [67, 70, 73], "602": 67, "mobilenet_v2": [68, 71], "mobilenetv2": [68, 71], "include_top": [68, 71], "input_img": [68, 75], "top_indic": [68, 71], "argsort": [68, 71], "243": [68, 71], "242": [68, 71], "boxer": [68, 71], "282": [68, 71], "tabbi": [68, 71], "292": [68, 71], "tiger": [68, 71], "lavi": [70, 73], "soon": [70, 73], "multi_input": [70, 73], "multiinput": [70, 73], "vision_languag": [70, 73], "blipitm": [70, 73], "load_processor": [70, 73], "anaconda3": [70, 73, 76], "env": [70, 73], "conda_env_py3": [70, 73], "userwarn": [70, 73], "nvidia": [70, 73], "driver": [70, 73], "system": [70, 73], "old": [70, 73, 74], "10010": [70, 73], "updat": [70, 73, 76], "gpu": [70, 73], "url": [70, 73], "aspx": [70, 73], "altern": [70, 73], "c10": [70, 73], "cudafunct": [70, 73], "109": [70, 73], "480": [70, 73], "girl_dog": [70, 73], "girl": [70, 73], "plai": [70, 73], "her": [70, 73], "beach": [70, 73], "blip": [70, 73], "pretrained_path": [70, 73], "storag": [70, 73], "googleapi": [70, 73], "sfr": [70, 73], "model_base_retrieval_coco": [70, 73], "pth": [70, 73], "vit": [70, 73], "image_processor": [70, 73], "blip_image_ev": [70, 73], "image_s": [70, 73], "384": [70, 73], "text_processor": [70, 73], "blip_capt": [70, 73], "init_token": [70, 73], "text_encod": [70, 73], "base_model": 70, "crossattent": 70, "attention_probs_lay": 70, "inception_v3": [72, 75], "word_embed": 73, "cl": 73, "96": 74, "bilinear": 74, "align_corn": 74, "2665": 74, "8901166666666667": 74, "incept": 75, "probs_top_5": 75, "topk": 75, "93592954": 75, "239": [75, 76], "bernese_mountain_dog": 75, "038448237": 75, "241": 75, "entlebuch": 75, "023756476": 75, "appenzel": 75, "0018181928": 75, "238": 75, "greater_swiss_mountain_dog": 75, "113302e": 75, "06": 75, "214": 75, "gordon_sett": 75, "batch_predict": 75, "prob": 75, "hide_color": 75, "1724": 76, "9487": 76, "0458": 76, "0466": 76, "9852": 76, "0333": 76, "9885": 76, "0298": 76, "9891": 76, "0207": 76, "9933": 76, "0286": 76, "0158": 76, "0295": 76, "9907": 76, "0125": 76, "9962": 76, "0290": 76, "9904": 76, "9963": 76, "0283": 76, "9902": 76, "0090": 76, "9970": 76, "9978": 76, "0317": 76, "9912": 76, "9974": 76, "0359": 76, "9915": 76, "03591015189886093": 76, "9915000200271606": 76, "_deep": 76, "deep_tf": 76, "set_learning_phas": 76, "__call__": 76}, "objects": {"": [[1, 0, 0, "-", "omnixai"]], "omnixai": [[2, 0, 0, "-", "data"], [3, 0, 0, "-", "explainers"], [20, 0, 0, "-", "explanations"], [25, 0, 0, "-", "preprocessing"], [26, 0, 0, "-", "visualization"]], "omnixai.data": [[2, 0, 0, "-", "base"], [2, 0, 0, "-", "image"], [2, 0, 0, "-", "tabular"], [2, 0, 0, "-", "text"], [2, 0, 0, "-", "timeseries"]], "omnixai.data.base": [[2, 1, 1, "", "Data"]], "omnixai.data.base.Data": [[2, 2, 1, "", "data_type"], [2, 3, 1, "", "values"]], "omnixai.data.image": [[2, 1, 1, "", "Image"]], "omnixai.data.image.Image": [[2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 2, 1, "", "image_shape"], [2, 2, 1, "", "shape"], [2, 3, 1, "", "to_numpy"], [2, 3, 1, "", "to_pil"], [2, 2, 1, "", "values"]], "omnixai.data.tabular": [[2, 1, 1, "", "Tabular"]], "omnixai.data.tabular.Tabular": [[2, 2, 1, "", "categorical_columns"], [2, 2, 1, "", "columns"], [2, 2, 1, "", "continuous_columns"], [2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 2, 1, "", "feature_columns"], [2, 3, 1, "", "get_continuous_bounds"], [2, 3, 1, "", "get_continuous_medians"], [2, 3, 1, "", "iloc"], [2, 3, 1, "", "remove_target_column"], [2, 2, 1, "", "shape"], [2, 2, 1, "", "target_column"], [2, 3, 1, "", "to_numpy"], [2, 3, 1, "", "to_pd"], [2, 2, 1, "", "values"]], "omnixai.data.text": [[2, 1, 1, "", "Text"]], "omnixai.data.text.Text": [[2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 3, 1, "", "split"], [2, 3, 1, "", "to_str"], [2, 3, 1, "", "to_tokens"], [2, 2, 1, "", "values"]], "omnixai.data.timeseries": [[2, 1, 1, "", "Timeseries"]], "omnixai.data.timeseries.Timeseries": [[2, 2, 1, "", "batch_size"], [2, 2, 1, "", "columns"], [2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 3, 1, "", "from_pd"], [2, 2, 1, "", "index"], [2, 2, 1, "", "shape"], [2, 3, 1, "", "to_numpy"], [2, 3, 1, "", "to_pd"], [2, 2, 1, "", "ts_len"], [2, 2, 1, "", "values"]], "omnixai.explainers": [[3, 0, 0, "-", "base"], [4, 0, 0, "-", "data"]], "omnixai.explainers.base": [[3, 1, 1, "", "AutoExplainerBase"], [3, 1, 1, "", "ExplainerABCMeta"], [3, 1, 1, "", "ExplainerBase"]], "omnixai.explainers.base.AutoExplainerBase": [[3, 3, 1, "", "explain"], [3, 3, 1, "", "explain_global"], [3, 2, 1, "", "explainer_names"], [3, 3, 1, "", "list_explainers"]], "omnixai.explainers.base.ExplainerBase": [[3, 3, 1, "", "explain"], [3, 2, 1, "", "explanation_type"]], "omnixai.explainers.data": [[4, 1, 1, "", "ChiSquare"], [4, 1, 1, "", "CorrelationAnalyzer"], [4, 1, 1, "", "DataAnalyzer"], [4, 1, 1, "", "ImbalanceAnalyzer"], [4, 1, 1, "", "MutualInformation"], [4, 0, 0, "-", "auto"], [4, 0, 0, "-", "chi_square"], [4, 0, 0, "-", "correlation"], [4, 0, 0, "-", "imbalance"], [4, 0, 0, "-", "mutual_info"]], "omnixai.explainers.data.ChiSquare": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.CorrelationAnalyzer": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.DataAnalyzer": [[4, 3, 1, "", "list_explainers"]], "omnixai.explainers.data.ImbalanceAnalyzer": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.MutualInformation": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.auto": [[4, 1, 1, "", "DataAnalyzer"]], "omnixai.explainers.data.auto.DataAnalyzer": [[4, 3, 1, "", "list_explainers"]], "omnixai.explainers.data.chi_square": [[4, 1, 1, "", "ChiSquare"]], "omnixai.explainers.data.chi_square.ChiSquare": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.correlation": [[4, 1, 1, "", "CorrelationAnalyzer"]], "omnixai.explainers.data.correlation.CorrelationAnalyzer": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.imbalance": [[4, 1, 1, "", "ImbalanceAnalyzer"]], "omnixai.explainers.data.imbalance.ImbalanceAnalyzer": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.mutual_info": [[4, 1, 1, "", "MutualInformation"]], "omnixai.explainers.data.mutual_info.MutualInformation": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp": [[6, 0, 0, "-", "agnostic"], [5, 0, 0, "-", "auto"], [7, 0, 0, "-", "counterfactual"], [8, 0, 0, "-", "specific"]], "omnixai.explainers.nlp.agnostic": [[6, 0, 0, "-", "l2x"], [6, 0, 0, "-", "lime"], [6, 0, 0, "-", "shap"]], "omnixai.explainers.nlp.agnostic.l2x": [[6, 1, 1, "", "DefaultPredictionModel"], [6, 1, 1, "", "DefaultSelectionModel"], [6, 1, 1, "", "L2XText"]], "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "omnixai.explainers.nlp.agnostic.l2x.L2XText": [[6, 4, 1, "", "alias"], [6, 3, 1, "", "explain"], [6, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp.agnostic.lime": [[6, 1, 1, "", "LimeText"]], "omnixai.explainers.nlp.agnostic.lime.LimeText": [[6, 4, 1, "", "alias"], [6, 3, 1, "", "explain"], [6, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp.agnostic.shap": [[6, 1, 1, "", "ShapText"]], "omnixai.explainers.nlp.agnostic.shap.ShapText": [[6, 4, 1, "", "alias"], [6, 3, 1, "", "explain"], [6, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp.auto": [[5, 1, 1, "", "NLPExplainer"]], "omnixai.explainers.nlp.auto.NLPExplainer": [[5, 3, 1, "", "list_explainers"]], "omnixai.explainers.nlp.counterfactual": [[7, 0, 0, "-", "polyjuice"]], "omnixai.explainers.nlp.counterfactual.polyjuice": [[7, 1, 1, "", "Polyjuice"]], "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice": [[7, 4, 1, "", "alias"], [7, 3, 1, "", "explain"], [7, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp.specific": [[8, 0, 0, "-", "ig"]], "omnixai.explainers.nlp.specific.ig": [[8, 1, 1, "", "IntegratedGradientText"]], "omnixai.explainers.nlp.specific.ig.IntegratedGradientText": [[8, 4, 1, "", "alias"], [8, 3, 1, "", "explain"], [8, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular": [[10, 0, 0, "-", "agnostic"], [9, 0, 0, "-", "auto"], [9, 0, 0, "-", "base"], [11, 0, 0, "-", "counterfactual"], [12, 0, 0, "-", "specific"]], "omnixai.explainers.tabular.agnostic.L2X": [[10, 0, 0, "-", "l2x"]], "omnixai.explainers.tabular.agnostic.L2X.l2x": [[10, 1, 1, "", "DefaultPredictionModel"], [10, 1, 1, "", "DefaultSelectionModel"], [10, 1, 1, "", "L2XTabular"]], "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel": [[10, 3, 1, "", "forward"], [10, 4, 1, "", "training"]], "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel": [[10, 3, 1, "", "forward"], [10, 4, 1, "", "training"]], "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular": [[10, 4, 1, "", "alias"], [10, 3, 1, "", "explain"], [10, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic": [[10, 0, 0, "-", "lime"], [10, 0, 0, "-", "pdp"], [10, 0, 0, "-", "sensitivity"], [10, 0, 0, "-", "shap"]], "omnixai.explainers.tabular.agnostic.lime": [[10, 1, 1, "", "LimeTabular"]], "omnixai.explainers.tabular.agnostic.lime.LimeTabular": [[10, 4, 1, "", "alias"], [10, 3, 1, "", "explain"], [10, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic.pdp": [[10, 1, 1, "", "PartialDependenceTabular"]], "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular": [[10, 4, 1, "", "alias"], [10, 3, 1, "", "explain"], [10, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic.sensitivity": [[10, 1, 1, "", "SensitivityAnalysisTabular"]], "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular": [[10, 4, 1, "", "alias"], [10, 3, 1, "", "explain"], [10, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic.shap": [[10, 1, 1, "", "ShapTabular"]], "omnixai.explainers.tabular.agnostic.shap.ShapTabular": [[10, 4, 1, "", "alias"], [10, 3, 1, "", "explain"], [10, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.auto": [[9, 1, 1, "", "TabularExplainer"]], "omnixai.explainers.tabular.auto.TabularExplainer": [[9, 3, 1, "", "list_explainers"]], "omnixai.explainers.tabular.base": [[9, 1, 1, "", "SklearnBase"], [9, 1, 1, "", "TabularExplainer"]], "omnixai.explainers.tabular.base.SklearnBase": [[9, 3, 1, "", "class_names"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "predict_proba"]], "omnixai.explainers.tabular.counterfactual": [[11, 0, 0, "-", "ce"]], "omnixai.explainers.tabular.counterfactual.ce": [[11, 1, 1, "", "CounterfactualExplainer"], [11, 1, 1, "", "CounterfactualOptimizer"]], "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer": [[11, 4, 1, "", "alias"], [11, 3, 1, "", "explain"], [11, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.counterfactual.ce.CounterfactualOptimizer": [[11, 3, 1, "", "optimize"]], "omnixai.explainers.tabular.counterfactual.mace": [[11, 0, 0, "-", "mace"]], "omnixai.explainers.tabular.counterfactual.mace.mace": [[11, 1, 1, "", "MACEExplainer"]], "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer": [[11, 4, 1, "", "alias"], [11, 3, 1, "", "explain"], [11, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.specific": [[12, 0, 0, "-", "decision_tree"], [12, 0, 0, "-", "ig"], [12, 0, 0, "-", "linear"], [12, 0, 0, "-", "shap_tree"]], "omnixai.explainers.tabular.specific.decision_tree": [[12, 1, 1, "", "TreeBase"], [12, 1, 1, "", "TreeClassifier"], [12, 1, 1, "", "TreeRegressor"]], "omnixai.explainers.tabular.specific.decision_tree.TreeBase": [[12, 3, 1, "", "explain"], [12, 4, 1, "", "explanation_type"], [12, 3, 1, "", "fit"]], "omnixai.explainers.tabular.specific.decision_tree.TreeClassifier": [[12, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.decision_tree.TreeRegressor": [[12, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.ig": [[12, 1, 1, "", "IntegratedGradient"], [12, 1, 1, "", "IntegratedGradientTabular"]], "omnixai.explainers.tabular.specific.ig.IntegratedGradient": [[12, 3, 1, "", "compute_integrated_gradients"]], "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular": [[12, 4, 1, "", "alias"], [12, 3, 1, "", "explain"], [12, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.specific.linear": [[12, 1, 1, "", "LinearBase"], [12, 1, 1, "", "LinearRegression"], [12, 1, 1, "", "LogisticRegression"]], "omnixai.explainers.tabular.specific.linear.LinearBase": [[12, 3, 1, "", "explain"], [12, 4, 1, "", "explanation_type"], [12, 3, 1, "", "fit"]], "omnixai.explainers.tabular.specific.linear.LinearRegression": [[12, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.linear.LogisticRegression": [[12, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.shap_tree": [[12, 1, 1, "", "ShapTreeTabular"]], "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular": [[12, 4, 1, "", "alias"], [12, 3, 1, "", "explain"], [12, 4, 1, "", "explanation_type"], [12, 3, 1, "", "fit"]], "omnixai.explainers.timeseries": [[14, 0, 0, "-", "agnostic"], [13, 0, 0, "-", "auto"], [15, 0, 0, "-", "counterfactual"]], "omnixai.explainers.timeseries.agnostic": [[14, 0, 0, "-", "shap"]], "omnixai.explainers.timeseries.agnostic.shap": [[14, 1, 1, "", "ShapTimeseries"]], "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries": [[14, 4, 1, "", "alias"], [14, 3, 1, "", "explain"], [14, 4, 1, "", "explanation_type"]], "omnixai.explainers.timeseries.auto": [[13, 1, 1, "", "TimeseriesExplainer"]], "omnixai.explainers.timeseries.auto.TimeseriesExplainer": [[13, 3, 1, "", "list_explainers"]], "omnixai.explainers.timeseries.counterfactual": [[15, 0, 0, "-", "ce"], [15, 0, 0, "-", "mace"]], "omnixai.explainers.timeseries.counterfactual.ce": [[15, 1, 1, "", "CounterfactualExplainer"], [15, 1, 1, "", "CounterfactualOptimizer"]], "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer": [[15, 4, 1, "", "alias"], [15, 3, 1, "", "explain"], [15, 4, 1, "", "explanation_type"]], "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualOptimizer": [[15, 3, 1, "", "optimize"]], "omnixai.explainers.timeseries.counterfactual.mace": [[15, 1, 1, "", "MACEExplainer"]], "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer": [[15, 4, 1, "", "alias"], [15, 3, 1, "", "explain"], [15, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision": [[17, 0, 0, "-", "agnostic"], [16, 0, 0, "-", "auto"], [18, 0, 0, "-", "counterfactual"], [19, 0, 0, "-", "specific"]], "omnixai.explainers.vision.agnostic": [[17, 0, 0, "-", "l2x"], [17, 0, 0, "-", "lime"], [17, 0, 0, "-", "pdp"], [17, 0, 0, "-", "shap"]], "omnixai.explainers.vision.agnostic.l2x": [[17, 1, 1, "", "DefaultPredictionModel"], [17, 1, 1, "", "DefaultSelectionModel"], [17, 1, 1, "", "L2XImage"]], "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel": [[17, 3, 1, "", "forward"], [17, 4, 1, "", "training"]], "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel": [[17, 3, 1, "", "forward"], [17, 3, 1, "", "postprocess"], [17, 4, 1, "", "training"]], "omnixai.explainers.vision.agnostic.l2x.L2XImage": [[17, 4, 1, "", "alias"], [17, 3, 1, "", "explain"], [17, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.agnostic.lime": [[17, 1, 1, "", "LimeImage"]], "omnixai.explainers.vision.agnostic.lime.LimeImage": [[17, 4, 1, "", "alias"], [17, 3, 1, "", "explain"], [17, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.agnostic.pdp": [[17, 1, 1, "", "PartialDependenceImage"]], "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage": [[17, 4, 1, "", "alias"], [17, 3, 1, "", "explain"], [17, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.agnostic.shap": [[17, 1, 1, "", "ShapImage"]], "omnixai.explainers.vision.agnostic.shap.ShapImage": [[17, 4, 1, "", "alias"], [17, 3, 1, "", "explain"], [17, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.auto": [[16, 1, 1, "", "VisionExplainer"]], "omnixai.explainers.vision.auto.VisionExplainer": [[16, 3, 1, "", "list_explainers"]], "omnixai.explainers.vision.counterfactual": [[18, 0, 0, "-", "ce"]], "omnixai.explainers.vision.counterfactual.ce": [[18, 1, 1, "", "CounterfactualExplainer"]], "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer": [[18, 4, 1, "", "alias"], [18, 3, 1, "", "explain"], [18, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific": [[19, 0, 0, "-", "cem"], [19, 0, 0, "-", "ig"]], "omnixai.explainers.vision.specific.cem": [[19, 1, 1, "", "CEMOptimizer"], [19, 1, 1, "", "ContrastiveExplainer"]], "omnixai.explainers.vision.specific.cem.CEMOptimizer": [[19, 3, 1, "", "pn_optimize"], [19, 3, 1, "", "pp_optimize"]], "omnixai.explainers.vision.specific.cem.ContrastiveExplainer": [[19, 4, 1, "", "alias"], [19, 3, 1, "", "explain"], [19, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.gradcam": [[19, 0, 0, "-", "gradcam"]], "omnixai.explainers.vision.specific.gradcam.gradcam": [[19, 1, 1, "", "GradCAM"], [19, 1, 1, "", "GradCAMPlus"]], "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM": [[19, 4, 1, "", "alias"], [19, 3, 1, "", "explain"], [19, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus": [[19, 4, 1, "", "alias"], [19, 3, 1, "", "explain"], [19, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.ig": [[19, 1, 1, "", "IntegratedGradientImage"]], "omnixai.explainers.vision.specific.ig.IntegratedGradientImage": [[19, 4, 1, "", "alias"], [19, 3, 1, "", "explain"], [19, 4, 1, "", "explanation_type"]], "omnixai.explanations": [[20, 0, 0, "-", "base"], [21, 0, 0, "-", "image"], [22, 0, 0, "-", "tabular"], [23, 0, 0, "-", "text"], [24, 0, 0, "-", "timeseries"]], "omnixai.explanations.base": [[20, 1, 1, "", "DashFigure"], [20, 1, 1, "", "ExplanationBase"], [20, 1, 1, "", "PredictedResults"]], "omnixai.explanations.base.DashFigure": [[20, 3, 1, "", "show"], [20, 3, 1, "", "to_html"], [20, 3, 1, "", "to_html_div"]], "omnixai.explanations.base.ExplanationBase": [[20, 3, 1, "", "get_explanations"], [20, 3, 1, "", "ipython_plot"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plotly_plot"]], "omnixai.explanations.base.PredictedResults": [[20, 3, 1, "", "get_explanations"], [20, 3, 1, "", "ipython_plot"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image": [[21, 0, 0, "-", "contrast"], [21, 0, 0, "-", "counterfactual"], [21, 0, 0, "-", "mask"], [21, 0, 0, "-", "pixel_importance"]], "omnixai.explanations.image.contrast": [[21, 1, 1, "", "ContrastiveExplanation"]], "omnixai.explanations.image.contrast.ContrastiveExplanation": [[21, 3, 1, "", "add"], [21, 3, 1, "", "get_explanations"], [21, 3, 1, "", "ipython_plot"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image.counterfactual": [[21, 1, 1, "", "CFExplanation"]], "omnixai.explanations.image.counterfactual.CFExplanation": [[21, 3, 1, "", "add"], [21, 3, 1, "", "get_explanations"], [21, 3, 1, "", "ipython_plot"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image.mask": [[21, 1, 1, "", "MaskExplanation"]], "omnixai.explanations.image.mask.MaskExplanation": [[21, 3, 1, "", "add"], [21, 3, 1, "", "get_explanations"], [21, 3, 1, "", "ipython_plot"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image.pixel_importance": [[21, 1, 1, "", "PixelImportance"]], "omnixai.explanations.image.pixel_importance.PixelImportance": [[21, 3, 1, "", "add"], [21, 3, 1, "", "get_explanations"], [21, 3, 1, "", "ipython_plot"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular": [[22, 0, 0, "-", "correlation"], [22, 0, 0, "-", "counterfactual"], [22, 0, 0, "-", "feature_importance"], [22, 0, 0, "-", "imbalance"], [22, 0, 0, "-", "linear"], [22, 0, 0, "-", "pdp"], [22, 0, 0, "-", "sensitivity"], [22, 0, 0, "-", "tree"]], "omnixai.explanations.tabular.correlation": [[22, 1, 1, "", "CorrelationExplanation"]], "omnixai.explanations.tabular.correlation.CorrelationExplanation": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.counterfactual": [[22, 1, 1, "", "CFExplanation"]], "omnixai.explanations.tabular.counterfactual.CFExplanation": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.feature_importance": [[22, 1, 1, "", "FeatureImportance"], [22, 1, 1, "", "GlobalFeatureImportance"]], "omnixai.explanations.tabular.feature_importance.FeatureImportance": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.imbalance": [[22, 1, 1, "", "ImbalanceExplanation"]], "omnixai.explanations.tabular.imbalance.ImbalanceExplanation": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.linear": [[22, 1, 1, "", "LinearExplanation"]], "omnixai.explanations.tabular.linear.LinearExplanation": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.pdp": [[22, 1, 1, "", "PDPExplanation"]], "omnixai.explanations.tabular.pdp.PDPExplanation": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.sensitivity": [[22, 1, 1, "", "SensitivityExplanation"]], "omnixai.explanations.tabular.sensitivity.SensitivityExplanation": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.tree": [[22, 1, 1, "", "TreeExplanation"]], "omnixai.explanations.tabular.tree.TreeExplanation": [[22, 3, 1, "", "add_global"], [22, 3, 1, "", "add_local"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.text": [[23, 0, 0, "-", "word_importance"]], "omnixai.explanations.text.word_importance": [[23, 1, 1, "", "WordImportance"]], "omnixai.explanations.text.word_importance.WordImportance": [[23, 3, 1, "", "add"], [23, 3, 1, "", "get_explanations"], [23, 3, 1, "", "ipython_plot"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "plotly_plot"]], "omnixai.explanations.timeseries": [[24, 0, 0, "-", "counterfactual"], [24, 0, 0, "-", "feature_importance"]], "omnixai.explanations.timeseries.counterfactual": [[24, 1, 1, "", "CFExplanation"]], "omnixai.explanations.timeseries.counterfactual.CFExplanation": [[24, 3, 1, "", "add"], [24, 3, 1, "", "get_explanations"], [24, 3, 1, "", "ipython_plot"], [24, 3, 1, "", "plot"], [24, 3, 1, "", "plotly_plot"]], "omnixai.explanations.timeseries.feature_importance": [[24, 1, 1, "", "FeatureImportance"]], "omnixai.explanations.timeseries.feature_importance.FeatureImportance": [[24, 3, 1, "", "add"], [24, 3, 1, "", "get_explanations"], [24, 3, 1, "", "ipython_plot"], [24, 3, 1, "", "plot"], [24, 3, 1, "", "plotly_plot"]], "omnixai.preprocessing": [[25, 0, 0, "-", "base"], [25, 0, 0, "-", "encode"], [25, 0, 0, "-", "fill"], [25, 0, 0, "-", "image"], [25, 0, 0, "-", "normalize"], [25, 0, 0, "-", "pipeline"], [25, 0, 0, "-", "tabular"], [25, 0, 0, "-", "text"]], "omnixai.preprocessing.base": [[25, 1, 1, "", "Identity"], [25, 1, 1, "", "TransformBase"]], "omnixai.preprocessing.base.Identity": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.base.TransformBase": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.encode": [[25, 1, 1, "", "KBins"], [25, 1, 1, "", "LabelEncoder"], [25, 1, 1, "", "OneHot"], [25, 1, 1, "", "Ordinal"]], "omnixai.preprocessing.encode.KBins": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.encode.LabelEncoder": [[25, 2, 1, "", "categories"], [25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.encode.OneHot": [[25, 2, 1, "", "categories"], [25, 3, 1, "", "fit"], [25, 3, 1, "", "get_feature_names"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.encode.Ordinal": [[25, 2, 1, "", "categories"], [25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.fill": [[25, 1, 1, "", "FillNaN"], [25, 1, 1, "", "FillNaNTabular"]], "omnixai.preprocessing.fill.FillNaN": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.fill.FillNaNTabular": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.image": [[25, 1, 1, "", "Normalize"], [25, 1, 1, "", "Resize"], [25, 1, 1, "", "Round2Int"], [25, 1, 1, "", "Scale"]], "omnixai.preprocessing.image.Normalize": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.image.Resize": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.image.Round2Int": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.image.Scale": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.normalize": [[25, 1, 1, "", "MinMax"], [25, 1, 1, "", "Scale"], [25, 1, 1, "", "Standard"]], "omnixai.preprocessing.normalize.MinMax": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.normalize.Scale": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.normalize.Standard": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.pipeline": [[25, 1, 1, "", "Pipeline"]], "omnixai.preprocessing.pipeline.Pipeline": [[25, 3, 1, "", "dump"], [25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "load"], [25, 4, 1, "", "name"], [25, 3, 1, "", "step"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.tabular": [[25, 1, 1, "", "TabularTransform"]], "omnixai.preprocessing.tabular.TabularTransform": [[25, 2, 1, "", "categories"], [25, 2, 1, "", "class_names"], [25, 3, 1, "", "decompose"], [25, 3, 1, "", "fit"], [25, 3, 1, "", "get_feature_names"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.text": [[25, 1, 1, "", "Tfidf"], [25, 1, 1, "", "Word2Id"]], "omnixai.preprocessing.text.Tfidf": [[25, 3, 1, "", "fit"], [25, 3, 1, "", "get_feature_names"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"]], "omnixai.preprocessing.text.Word2Id": [[25, 4, 1, "", "PAD"], [25, 4, 1, "", "START"], [25, 4, 1, "", "UNK"], [25, 3, 1, "", "fit"], [25, 3, 1, "", "invert"], [25, 3, 1, "", "transform"], [25, 2, 1, "", "vocab_size"]], "omnixai.sampler": [[25, 0, 0, "-", "tabular"]], "omnixai.sampler.tabular": [[25, 1, 1, "", "Sampler"]], "omnixai.sampler.tabular.Sampler": [[25, 3, 1, "", "oversample"], [25, 3, 1, "", "subsample"], [25, 3, 1, "", "undersample"]], "omnixai.visualization": [[26, 0, 0, "-", "dashboard"]], "omnixai.visualization.dashboard": [[26, 1, 1, "", "Dashboard"]], "omnixai.visualization.dashboard.Dashboard": [[26, 3, 1, "", "show"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "omnixai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 40], "": 0, "document": 0, "introduct": [0, 1], "capabl": 0, "featur": [0, 28, 64, 65, 66, 67], "comparison": 0, "competitor": 0, "instal": [0, 1], "get": [0, 1], "start": [0, 1], "how": [0, 1], "contribut": [0, 1], "content": 0, "indic": 0, "tabl": 0, "an": 1, "explan": [1, 20, 21, 22, 23, 24, 32, 33, 42, 47, 56, 59, 60, 61, 62, 63], "toolbox": 1, "librari": 1, "design": 1, "more": 1, "exampl": [1, 27, 29, 30], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "differ": [1, 3], "data": [1, 2, 4, 29, 30], "type": 1, "preprocess": [1, 25, 30], "function": 1, "support": 1, "method": 1, "result": [1, 20], "dashboard": [1, 26], "visual": [1, 26, 64, 65, 66, 67, 70, 73], "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "base": [2, 3, 9, 20, 25], "tabular": [2, 9, 10, 11, 12, 22, 25, 27, 29, 30], "imag": [2, 21, 25, 29, 30, 58, 68, 69, 71, 72, 75], "text": [2, 23, 25, 29, 30, 32, 36, 37], "timeseri": [2, 13, 14, 15, 24, 27], "explain": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 36, 43, 44, 74], "task": [3, 70, 73], "auto": [4, 5, 9, 13, 16], "correl": [4, 22], "imbal": [4, 22], "mutual_info": 4, "chi_squar": 4, "nlp": [5, 6, 7, 8, 27], "subpackag": [5, 9, 13, 16], "agnost": [6, 10, 14, 17], "lime": [6, 10, 17, 37, 45, 75], "shap": [6, 10, 14, 17, 38, 51, 57, 76], "l2x": [6, 10, 17, 36, 44, 74], "counterfactu": [7, 11, 15, 18, 21, 22, 24, 32, 33, 42, 47, 56, 59, 60, 61], "polyjuic": 7, "specif": [8, 12, 19], "ig": [8, 12, 19], "pdp": [10, 17, 22], "sensit": [10, 22, 50], "mace": [11, 15, 47], "ce": [11, 15, 18], "linear": [12, 22], "decision_tre": 12, "shap_tre": 12, "vision": [16, 17, 18, 19, 27], "gradcam": 19, "cem": 19, "three": 20, "categori": 20, "pixel_import": 21, "mask": 21, "contrast": [21, 62, 63], "feature_import": [22, 24], "tree": [22, 52], "word_import": 23, "encod": 25, "normal": 25, "fill": 25, "pipelin": 25, "sampler": 25, "tutori": 27, "code": 27, "basic": 27, "applic": 27, "dataanalyz": 28, "analysi": [28, 31, 38, 50], "object": 29, "time": [29, 55, 56, 57], "seri": [29, 55, 56, 57], "nlpexplain": [31, 39], "sentiment": [31, 38], "classif": [32, 36, 37, 53, 58, 68, 69, 71, 72, 75], "question": 33, "answer": 33, "integr": [34, 35, 71, 72, 73], "gradient": [34, 35, 71, 72, 73], "imdb": [34, 35, 39], "dataset": [34, 35, 39, 42], "tensorflow": [34, 60, 62, 64, 66, 68, 71], "pytorch": [35, 61, 63, 65, 67, 69, 72], "learn": [36, 44, 49, 74], "ml": 40, "workflow": 40, "accumul": 41, "local": 41, "effect": 41, "al": 41, "diabet": 42, "gpt": 43, "incom": [43, 44, 45, 46, 47, 51, 52, 53], "predict": [43, 44, 45, 46, 47, 51, 52, 53, 54], "logist": 46, "regress": [46, 54], "pariti": 48, "depend": 48, "plot": 48, "rank": 49, "expan": 49, "demo": 49, "morri": 50, "decis": 52, "tabularexplain": [53, 54], "hous": 54, "price": 54, "timeseriesexplain": 55, "anomali": [55, 56, 57], "detect": [55, 56, 57], "visionexplain": 58, "imagenet": 59, "mnist": [60, 61, 62, 63, 74, 76], "map": [64, 65], "grad": [68, 69, 70], "cam": [68, 69, 70], "languag": [70, 73]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 3, "sphinx": 57}, "alltitles": {"Welcome to OmniXAI\u2019s documentation!": [[0, "welcome-to-omnixai-s-documentation"]], "Introduction": [[0, "introduction"], [1, "introduction"]], "Capabilities and Features": [[0, "capabilities-and-features"]], "Comparison with Competitors": [[0, "comparison-with-competitors"]], "Installation": [[0, "installation"], [1, "installation"]], "Getting Started": [[0, "getting-started"], [1, "getting-started"]], "How to Contribute": [[0, "how-to-contribute"], [1, "how-to-contribute"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "OmniXAI: An Explanation Toolbox": [[1, "omnixai-an-explanation-toolbox"]], "Library Design": [[1, "library-design"]], "More Examples": [[1, "more-examples"]], "Modules for Different Data Types": [[1, "modules-for-different-data-types"]], "Preprocessing Functions": [[1, "preprocessing-functions"]], "Supported Explanation Methods": [[1, "supported-explanation-methods"]], "Modules for Explanation Results": [[1, "modules-for-explanation-results"]], "Dashboard for Visualization": [[1, "dashboard-for-visualization"]], "omnixai.data package": [[2, "module-omnixai.data"]], "omnixai.data.base module": [[2, "module-omnixai.data.base"]], "omnixai.data.tabular module": [[2, "module-omnixai.data.tabular"]], "omnixai.data.image module": [[2, "module-omnixai.data.image"]], "omnixai.data.text module": [[2, "module-omnixai.data.text"]], "omnixai.data.timeseries module": [[2, "module-omnixai.data.timeseries"]], "omnixai.explainers package": [[3, "omnixai-explainers-package"]], "omnixai.explainers.base module": [[3, "module-omnixai.explainers.base"]], "Explainers for different tasks": [[3, "explainers-for-different-tasks"]], "omnixai.explainers.data package": [[4, "module-omnixai.explainers.data"]], "omnixai.explainers.data.auto module": [[4, "module-omnixai.explainers.data.auto"]], "omnixai.explainers.data.correlation module": [[4, "module-omnixai.explainers.data.correlation"]], "omnixai.explainers.data.imbalance module": [[4, "module-omnixai.explainers.data.imbalance"]], "omnixai.explainers.data.mutual_info module": [[4, "module-omnixai.explainers.data.mutual_info"]], "omnixai.explainers.data.chi_square module": [[4, "module-omnixai.explainers.data.chi_square"]], "omnixai.explainers.nlp package": [[5, "omnixai-explainers-nlp-package"]], "omnixai.explainers.nlp.auto module": [[5, "module-omnixai.explainers.nlp.auto"]], "Subpackages": [[5, "subpackages"], [9, "subpackages"], [13, "subpackages"], [16, "subpackages"]], "omnixai.explainers.nlp.agnostic package": [[6, "module-omnixai.explainers.nlp.agnostic"]], "omnixai.explainers.nlp.agnostic.lime module": [[6, "module-omnixai.explainers.nlp.agnostic.lime"]], "omnixai.explainers.nlp.agnostic.shap module": [[6, "module-omnixai.explainers.nlp.agnostic.shap"]], "omnixai.explainers.nlp.agnostic.l2x module": [[6, "module-omnixai.explainers.nlp.agnostic.l2x"]], "omnixai.explainers.nlp.counterfactual package": [[7, "module-omnixai.explainers.nlp.counterfactual"]], "omnixai.explainers.nlp.counterfactual.polyjuice module": [[7, "module-omnixai.explainers.nlp.counterfactual.polyjuice"]], "omnixai.explainers.nlp.specific package": [[8, "module-omnixai.explainers.nlp.specific"]], "omnixai.explainers.nlp.specific.ig module": [[8, "module-omnixai.explainers.nlp.specific.ig"]], "omnixai.explainers.tabular package": [[9, "omnixai-explainers-tabular-package"]], "omnixai.explainers.tabular.base module": [[9, "module-omnixai.explainers.tabular.base"]], "omnixai.explainers.tabular.auto module": [[9, "module-omnixai.explainers.tabular.auto"]], "omnixai.explainers.tabular.agnostic package": [[10, "module-omnixai.explainers.tabular.agnostic"]], "omnixai.explainers.tabular.agnostic.lime module": [[10, "module-omnixai.explainers.tabular.agnostic.lime"]], "omnixai.explainers.tabular.agnostic.shap module": [[10, "module-omnixai.explainers.tabular.agnostic.shap"]], "omnixai.explainers.tabular.agnostic.pdp module": [[10, "module-omnixai.explainers.tabular.agnostic.pdp"]], "omnixai.explainers.tabular.agnostic.sensitivity module": [[10, "module-omnixai.explainers.tabular.agnostic.sensitivity"]], "omnixai.explainers.tabular.agnostic.L2X.l2x module": [[10, "module-omnixai.explainers.tabular.agnostic.L2X.l2x"]], "omnixai.explainers.tabular.counterfactual package": [[11, "module-omnixai.explainers.tabular.counterfactual"]], "omnixai.explainers.tabular.counterfactual.mace.mace module": [[11, "module-omnixai.explainers.tabular.counterfactual.mace.mace"]], "omnixai.explainers.tabular.counterfactual.ce module": [[11, "module-omnixai.explainers.tabular.counterfactual.ce"]], "omnixai.explainers.tabular.specific package": [[12, "module-omnixai.explainers.tabular.specific"]], "omnixai.explainers.tabular.specific.ig module": [[12, "module-omnixai.explainers.tabular.specific.ig"]], "omnixai.explainers.tabular.specific.linear module": [[12, "module-omnixai.explainers.tabular.specific.linear"]], "omnixai.explainers.tabular.specific.decision_tree module": [[12, "module-omnixai.explainers.tabular.specific.decision_tree"]], "omnixai.explainers.tabular.specific.shap_tree module": [[12, "module-omnixai.explainers.tabular.specific.shap_tree"]], "omnixai.explainers.timeseries package": [[13, "omnixai-explainers-timeseries-package"]], "omnixai.explainers.timeseries.auto module": [[13, "module-omnixai.explainers.timeseries.auto"]], "omnixai.explainers.timeseries.agnostic package": [[14, "module-omnixai.explainers.timeseries.agnostic"]], "omnixai.explainers.timeseries.agnostic.shap module": [[14, "module-omnixai.explainers.timeseries.agnostic.shap"]], "omnixai.explainers.timeseries.counterfactual package": [[15, "module-omnixai.explainers.timeseries.counterfactual"]], "omnixai.explainers.timeseries.counterfactual.ce module": [[15, "module-omnixai.explainers.timeseries.counterfactual.ce"]], "omnixai.explainers.timeseries.counterfactual.mace module": [[15, "module-omnixai.explainers.timeseries.counterfactual.mace"]], "omnixai.explainers.vision package": [[16, "omnixai-explainers-vision-package"]], "omnixai.explainers.vision.auto module": [[16, "module-omnixai.explainers.vision.auto"]], "omnixai.explainers.vision.agnostic package": [[17, "module-omnixai.explainers.vision.agnostic"]], "omnixai.explainers.vision.agnostic.lime module": [[17, "module-omnixai.explainers.vision.agnostic.lime"]], "omnixai.explainers.vision.agnostic.shap module": [[17, "module-omnixai.explainers.vision.agnostic.shap"]], "omnixai.explainers.vision.agnostic.pdp module": [[17, "module-omnixai.explainers.vision.agnostic.pdp"]], "omnixai.explainers.vision.agnostic.l2x module": [[17, "module-omnixai.explainers.vision.agnostic.l2x"]], "omnixai.explainers.vision.counterfactual package": [[18, "module-omnixai.explainers.vision.counterfactual"]], "omnixai.explainers.vision.counterfactual.ce module": [[18, "module-omnixai.explainers.vision.counterfactual.ce"]], "omnixai.explainers.vision.specific package": [[19, "module-omnixai.explainers.vision.specific"]], "omnixai.explainers.vision.specific.ig module": [[19, "module-omnixai.explainers.vision.specific.ig"]], "omnixai.explainers.vision.specific.gradcam.gradcam module": [[19, "module-omnixai.explainers.vision.specific.gradcam.gradcam"]], "omnixai.explainers.vision.specific.cem module": [[19, "module-omnixai.explainers.vision.specific.cem"]], "omnixai.explanations package": [[20, "module-omnixai.explanations"]], "Three categories of explanation results": [[20, "three-categories-of-explanation-results"]], "omnixai.explanations.base module": [[20, "module-omnixai.explanations.base"]], "omnixai.explanations.image package": [[21, "module-omnixai.explanations.image"]], "omnixai.explanations.image.pixel_importance module": [[21, "module-omnixai.explanations.image.pixel_importance"]], "omnixai.explanations.image.mask module": [[21, "module-omnixai.explanations.image.mask"]], "omnixai.explanations.image.contrast module": [[21, "module-omnixai.explanations.image.contrast"]], "omnixai.explanations.image.counterfactual module": [[21, "module-omnixai.explanations.image.counterfactual"]], "omnixai.explanations.tabular package": [[22, "module-omnixai.explanations.tabular"]], "omnixai.explanations.tabular.feature_importance module": [[22, "module-omnixai.explanations.tabular.feature_importance"]], "omnixai.explanations.tabular.counterfactual module": [[22, "module-omnixai.explanations.tabular.counterfactual"]], "omnixai.explanations.tabular.pdp module": [[22, "module-omnixai.explanations.tabular.pdp"]], "omnixai.explanations.tabular.sensitivity module": [[22, "module-omnixai.explanations.tabular.sensitivity"]], "omnixai.explanations.tabular.linear module": [[22, "module-omnixai.explanations.tabular.linear"]], "omnixai.explanations.tabular.tree module": [[22, "module-omnixai.explanations.tabular.tree"]], "omnixai.explanations.tabular.correlation module": [[22, "module-omnixai.explanations.tabular.correlation"]], "omnixai.explanations.tabular.imbalance module": [[22, "module-omnixai.explanations.tabular.imbalance"]], "omnixai.explanations.text package": [[23, "module-omnixai.explanations.text"]], "omnixai.explanations.text.word_importance module": [[23, "module-omnixai.explanations.text.word_importance"]], "omnixai.explanations.timeseries package": [[24, "module-omnixai.explanations.timeseries"]], "omnixai.explanations.timeseries.feature_importance module": [[24, "module-omnixai.explanations.timeseries.feature_importance"]], "omnixai.explanations.timeseries.counterfactual module": [[24, "module-omnixai.explanations.timeseries.counterfactual"]], "omnixai.preprocessing package": [[25, "module-omnixai.preprocessing"]], "omnixai.preprocessing.base module": [[25, "module-omnixai.preprocessing.base"]], "omnixai.preprocessing.encode module": [[25, "module-omnixai.preprocessing.encode"]], "omnixai.preprocessing.normalize module": [[25, "module-omnixai.preprocessing.normalize"]], "omnixai.preprocessing.fill module": [[25, "module-omnixai.preprocessing.fill"]], "omnixai.preprocessing.pipeline module": [[25, "module-omnixai.preprocessing.pipeline"]], "omnixai.preprocessing.tabular module": [[25, "module-omnixai.preprocessing.tabular"]], "omnixai.preprocessing.image module": [[25, "module-omnixai.preprocessing.image"]], "omnixai.preprocessing.text module": [[25, "module-omnixai.preprocessing.text"]], "omnixai.sampler.tabular module": [[25, "module-omnixai.sampler.tabular"]], "omnixai.visualization package": [[26, "module-omnixai.visualization"]], "omnixai.visualization.dashboard module": [[26, "module-omnixai.visualization.dashboard"]], "Tutorials & Example Code": [[27, "tutorials-example-code"]], "Basics": [[27, "basics"]], "Applications": [[27, "applications"]], "Tabular Explainers": [[27, "tabular-explainers"]], "Vision Explainers": [[27, "vision-explainers"]], "NLP Explainers": [[27, "nlp-explainers"]], "Timeseries Explainers": [[27, "timeseries-explainers"]], "DataAnalyzer for feature analysis": [[28, "DataAnalyzer-for-feature-analysis"]], "Examples of data objects": [[29, "Examples-of-data-objects"]], "Tabular data": [[29, "Tabular-data"], [30, "Tabular-data"]], "Image data": [[29, "Image-data"], [30, "Image-data"]], "Text data": [[29, "Text-data"], [30, "Text-data"]], "Time series data": [[29, "Time-series-data"]], "Examples of data preprocessing": [[30, "Examples-of-data-preprocessing"]], "NLPExplainer for sentiment analysis": [[31, "NLPExplainer-for-sentiment-analysis"]], "Counterfactual explanation for text classification": [[32, "Counterfactual-explanation-for-text-classification"]], "Counterfactual explanation for question answering": [[33, "Counterfactual-explanation-for-question-answering"]], "Integrated-gradient on IMDB dataset (Tensorflow)": [[34, "Integrated-gradient-on-IMDB-dataset-(Tensorflow)"]], "Integrated-gradient on IMDB dataset (PyTorch)": [[35, "Integrated-gradient-on-IMDB-dataset-(PyTorch)"]], "L2X (learning to explain) for text classification": [[36, "L2X-(learning-to-explain)-for-text-classification"]], "LIME for text classification": [[37, "LIME-for-text-classification"]], "SHAP for sentiment analysis": [[38, "SHAP-for-sentiment-analysis"]], "NLPExplainer on IMDB dataset": [[39, "NLPExplainer-on-IMDB-dataset"]], "OmniXAI in a ML workflow": [[40, "OmniXAI-in-a-ML-workflow"]], "Accumulated local effects (ALE)": [[41, "Accumulated-local-effects-(ALE)"]], "Counterfactual explanation on Diabetes dataset": [[42, "Counterfactual-explanation-on-Diabetes-dataset"]], "GPT explainer for income prediction": [[43, "GPT-explainer-for-income-prediction"]], "L2X (learning to explain) for income prediction": [[44, "L2X-(learning-to-explain)-for-income-prediction"]], "LIME for income prediction": [[45, "LIME-for-income-prediction"]], "Logistic regression for income prediction": [[46, "Logistic-regression-for-income-prediction"]], "MACE counterfactual explanation for income prediction": [[47, "MACE-counterfactual-explanation-for-income-prediction"]], "Paritial dependence plots": [[48, "Paritial-dependence-plots"]], "Learning to Rank Expanations Demo": [[49, "Learning-to-Rank-Expanations-Demo"]], "Morris sensitivity analysis": [[50, "Morris-sensitivity-analysis"]], "SHAP for income prediction": [[51, "SHAP-for-income-prediction"]], "Decision tree for income prediction": [[52, "Decision-tree-for-income-prediction"]], "TabularExplainer for income prediction (classification)": [[53, "TabularExplainer-for-income-prediction-(classification)"]], "TabularExplainer for house-price prediction (regression)": [[54, "TabularExplainer-for-house-price-prediction-(regression)"]], "TimeseriesExplainer for time series anomaly detection": [[55, "TimeseriesExplainer-for-time-series-anomaly-detection"]], "Counterfactual explanation on time series anomaly detection": [[56, "Counterfactual-explanation-on-time-series-anomaly-detection"]], "SHAP for time series anomaly detection": [[57, "SHAP-for-time-series-anomaly-detection"]], "VisionExplainer for image classification": [[58, "VisionExplainer-for-image-classification"]], "Counterfactual explanation on ImageNet": [[59, "Counterfactual-explanation-on-ImageNet"]], "Counterfactual explanation on MNIST (Tensorflow)": [[60, "Counterfactual-explanation-on-MNIST-(Tensorflow)"]], "Counterfactual explanation on MNIST (PyTorch)": [[61, "Counterfactual-explanation-on-MNIST-(PyTorch)"]], "Contrastive explanation on MNIST (Tensorflow)": [[62, "Contrastive-explanation-on-MNIST-(Tensorflow)"]], "Contrastive explanation on MNIST (PyTorch)": [[63, "Contrastive-explanation-on-MNIST-(PyTorch)"]], "Feature map visualization (Tensorflow)": [[64, "Feature-map-visualization-(Tensorflow)"]], "Feature map visualization (PyTorch)": [[65, "Feature-map-visualization-(PyTorch)"]], "Feature visualization (Tensorflow)": [[66, "Feature-visualization-(Tensorflow)"]], "Feature visualization (PyTorch)": [[67, "Feature-visualization-(PyTorch)"]], "Grad-CAM for image classification (Tensorflow)": [[68, "Grad-CAM-for-image-classification-(Tensorflow)"]], "Grad-CAM for image classification (PyTorch)": [[69, "Grad-CAM-for-image-classification-(PyTorch)"]], "Grad-CAM for visual language tasks": [[70, "Grad-CAM-for-visual-language-tasks"]], "Integrated-gradient for image classification (Tensorflow)": [[71, "Integrated-gradient-for-image-classification-(Tensorflow)"]], "Integrated-gradient for image classification (PyTorch)": [[72, "Integrated-gradient-for-image-classification-(PyTorch)"]], "Integrated-gradient for visual language tasks": [[73, "Integrated-gradient-for-visual-language-tasks"]], "L2X (learning to explain) on MNIST": [[74, "L2X-(learning-to-explain)-on-MNIST"]], "LIME for image classification": [[75, "LIME-for-image-classification"]], "SHAP on MNIST": [[76, "SHAP-on-MNIST"]]}, "indexentries": {"module": [[1, "module-omnixai"], [2, "module-omnixai.data"], [2, "module-omnixai.data.base"], [2, "module-omnixai.data.image"], [2, "module-omnixai.data.tabular"], [2, "module-omnixai.data.text"], [2, "module-omnixai.data.timeseries"], [3, "module-omnixai.explainers"], [3, "module-omnixai.explainers.base"], [4, "module-omnixai.explainers.data"], [4, "module-omnixai.explainers.data.auto"], [4, "module-omnixai.explainers.data.chi_square"], [4, "module-omnixai.explainers.data.correlation"], [4, "module-omnixai.explainers.data.imbalance"], [4, "module-omnixai.explainers.data.mutual_info"], [5, "module-omnixai.explainers.nlp.auto"], [6, "module-omnixai.explainers.nlp.agnostic"], [6, "module-omnixai.explainers.nlp.agnostic.l2x"], [6, "module-omnixai.explainers.nlp.agnostic.lime"], [6, "module-omnixai.explainers.nlp.agnostic.shap"], [7, "module-omnixai.explainers.nlp.counterfactual"], [7, "module-omnixai.explainers.nlp.counterfactual.polyjuice"], [8, "module-omnixai.explainers.nlp.specific"], [8, "module-omnixai.explainers.nlp.specific.ig"], [9, "module-omnixai.explainers.tabular.auto"], [9, "module-omnixai.explainers.tabular.base"], [10, "module-omnixai.explainers.tabular.agnostic"], [10, "module-omnixai.explainers.tabular.agnostic.L2X.l2x"], [10, "module-omnixai.explainers.tabular.agnostic.lime"], [10, "module-omnixai.explainers.tabular.agnostic.pdp"], [10, "module-omnixai.explainers.tabular.agnostic.sensitivity"], [10, "module-omnixai.explainers.tabular.agnostic.shap"], [11, "module-omnixai.explainers.tabular.counterfactual"], [11, "module-omnixai.explainers.tabular.counterfactual.ce"], [11, "module-omnixai.explainers.tabular.counterfactual.mace.mace"], [12, "module-omnixai.explainers.tabular.specific"], [12, "module-omnixai.explainers.tabular.specific.decision_tree"], [12, "module-omnixai.explainers.tabular.specific.ig"], [12, "module-omnixai.explainers.tabular.specific.linear"], [12, "module-omnixai.explainers.tabular.specific.shap_tree"], [13, "module-omnixai.explainers.timeseries.auto"], [14, "module-omnixai.explainers.timeseries.agnostic"], [14, "module-omnixai.explainers.timeseries.agnostic.shap"], [15, "module-omnixai.explainers.timeseries.counterfactual"], [15, "module-omnixai.explainers.timeseries.counterfactual.ce"], [15, "module-omnixai.explainers.timeseries.counterfactual.mace"], [16, "module-omnixai.explainers.vision.auto"], [17, "module-omnixai.explainers.vision.agnostic"], [17, "module-omnixai.explainers.vision.agnostic.l2x"], [17, "module-omnixai.explainers.vision.agnostic.lime"], [17, "module-omnixai.explainers.vision.agnostic.pdp"], [17, "module-omnixai.explainers.vision.agnostic.shap"], [18, "module-omnixai.explainers.vision.counterfactual"], [18, "module-omnixai.explainers.vision.counterfactual.ce"], [19, "module-omnixai.explainers.vision.specific"], [19, "module-omnixai.explainers.vision.specific.cem"], [19, "module-omnixai.explainers.vision.specific.gradcam.gradcam"], [19, "module-omnixai.explainers.vision.specific.ig"], [20, "module-omnixai.explanations"], [20, "module-omnixai.explanations.base"], [21, "module-omnixai.explanations.image"], [21, "module-omnixai.explanations.image.contrast"], [21, "module-omnixai.explanations.image.counterfactual"], [21, "module-omnixai.explanations.image.mask"], [21, "module-omnixai.explanations.image.pixel_importance"], [22, "module-omnixai.explanations.tabular"], [22, "module-omnixai.explanations.tabular.correlation"], [22, "module-omnixai.explanations.tabular.counterfactual"], [22, "module-omnixai.explanations.tabular.feature_importance"], [22, "module-omnixai.explanations.tabular.imbalance"], [22, "module-omnixai.explanations.tabular.linear"], [22, "module-omnixai.explanations.tabular.pdp"], [22, "module-omnixai.explanations.tabular.sensitivity"], [22, "module-omnixai.explanations.tabular.tree"], [23, "module-omnixai.explanations.text"], [23, "module-omnixai.explanations.text.word_importance"], [24, "module-omnixai.explanations.timeseries"], [24, "module-omnixai.explanations.timeseries.counterfactual"], [24, "module-omnixai.explanations.timeseries.feature_importance"], [25, "module-omnixai.preprocessing"], [25, "module-omnixai.preprocessing.base"], [25, "module-omnixai.preprocessing.encode"], [25, "module-omnixai.preprocessing.fill"], [25, "module-omnixai.preprocessing.image"], [25, "module-omnixai.preprocessing.normalize"], [25, "module-omnixai.preprocessing.pipeline"], [25, "module-omnixai.preprocessing.tabular"], [25, "module-omnixai.preprocessing.text"], [25, "module-omnixai.sampler.tabular"], [26, "module-omnixai.visualization"], [26, "module-omnixai.visualization.dashboard"]], "omnixai": [[1, "module-omnixai"]], "data (class in omnixai.data.base)": [[2, "omnixai.data.base.Data"]], "image (class in omnixai.data.image)": [[2, "omnixai.data.image.Image"]], "tabular (class in omnixai.data.tabular)": [[2, "omnixai.data.tabular.Tabular"]], "text (class in omnixai.data.text)": [[2, "omnixai.data.text.Text"]], "timeseries (class in omnixai.data.timeseries)": [[2, "omnixai.data.timeseries.Timeseries"]], "batch_size (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.batch_size"]], "categorical_columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.categorical_columns"]], "columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.columns"]], "columns (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.columns"]], "continuous_columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.continuous_columns"]], "copy() (omnixai.data.image.image method)": [[2, "omnixai.data.image.Image.copy"]], "copy() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.copy"]], "copy() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.copy"]], "copy() (omnixai.data.timeseries.timeseries method)": [[2, "omnixai.data.timeseries.Timeseries.copy"]], "data_type (omnixai.data.base.data property)": [[2, "omnixai.data.base.Data.data_type"]], "data_type (omnixai.data.image.image attribute)": [[2, "omnixai.data.image.Image.data_type"]], "data_type (omnixai.data.tabular.tabular attribute)": [[2, "omnixai.data.tabular.Tabular.data_type"]], "data_type (omnixai.data.text.text attribute)": [[2, "omnixai.data.text.Text.data_type"]], "data_type (omnixai.data.timeseries.timeseries attribute)": [[2, "omnixai.data.timeseries.Timeseries.data_type"]], "feature_columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.feature_columns"]], "from_pd() (omnixai.data.timeseries.timeseries class method)": [[2, "omnixai.data.timeseries.Timeseries.from_pd"]], "get_continuous_bounds() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.get_continuous_bounds"]], "get_continuous_medians() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.get_continuous_medians"]], "iloc() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.iloc"]], "image_shape (omnixai.data.image.image property)": [[2, "omnixai.data.image.Image.image_shape"]], "index (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.index"]], "omnixai.data": [[2, "module-omnixai.data"]], "omnixai.data.base": [[2, "module-omnixai.data.base"]], "omnixai.data.image": [[2, "module-omnixai.data.image"]], "omnixai.data.tabular": [[2, "module-omnixai.data.tabular"]], "omnixai.data.text": [[2, "module-omnixai.data.text"]], "omnixai.data.timeseries": [[2, "module-omnixai.data.timeseries"]], "remove_target_column() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.remove_target_column"]], "shape (omnixai.data.image.image property)": [[2, "omnixai.data.image.Image.shape"]], "shape (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.shape"]], "shape (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.shape"]], "split() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.split"]], "target_column (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.target_column"]], "to_numpy() (omnixai.data.image.image method)": [[2, "omnixai.data.image.Image.to_numpy"]], "to_numpy() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.to_numpy"]], "to_numpy() (omnixai.data.timeseries.timeseries method)": [[2, "omnixai.data.timeseries.Timeseries.to_numpy"]], "to_pd() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.to_pd"]], "to_pd() (omnixai.data.timeseries.timeseries method)": [[2, "omnixai.data.timeseries.Timeseries.to_pd"]], "to_pil() (omnixai.data.image.image method)": [[2, "omnixai.data.image.Image.to_pil"]], "to_str() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.to_str"]], "to_tokens() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.to_tokens"]], "ts_len (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.ts_len"]], "values (omnixai.data.image.image property)": [[2, "omnixai.data.image.Image.values"]], "values (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.values"]], "values (omnixai.data.text.text property)": [[2, "omnixai.data.text.Text.values"]], "values (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.values"]], "values() (omnixai.data.base.data method)": [[2, "omnixai.data.base.Data.values"]], "autoexplainerbase (class in omnixai.explainers.base)": [[3, "omnixai.explainers.base.AutoExplainerBase"]], "explainerabcmeta (class in omnixai.explainers.base)": [[3, "omnixai.explainers.base.ExplainerABCMeta"]], "explainerbase (class in omnixai.explainers.base)": [[3, "omnixai.explainers.base.ExplainerBase"]], "explain() (omnixai.explainers.base.autoexplainerbase method)": [[3, "omnixai.explainers.base.AutoExplainerBase.explain"]], "explain() (omnixai.explainers.base.explainerbase method)": [[3, "omnixai.explainers.base.ExplainerBase.explain"]], "explain_global() (omnixai.explainers.base.autoexplainerbase method)": [[3, "omnixai.explainers.base.AutoExplainerBase.explain_global"]], "explainer_names (omnixai.explainers.base.autoexplainerbase property)": [[3, "omnixai.explainers.base.AutoExplainerBase.explainer_names"]], "explanation_type (omnixai.explainers.base.explainerbase property)": [[3, "omnixai.explainers.base.ExplainerBase.explanation_type"]], "list_explainers() (omnixai.explainers.base.autoexplainerbase static method)": [[3, "omnixai.explainers.base.AutoExplainerBase.list_explainers"]], "omnixai.explainers": [[3, "module-omnixai.explainers"]], "omnixai.explainers.base": [[3, "module-omnixai.explainers.base"]], "chisquare (class in omnixai.explainers.data)": [[4, "omnixai.explainers.data.ChiSquare"]], "chisquare (class in omnixai.explainers.data.chi_square)": [[4, "omnixai.explainers.data.chi_square.ChiSquare"]], "correlationanalyzer (class in omnixai.explainers.data)": [[4, "omnixai.explainers.data.CorrelationAnalyzer"]], "correlationanalyzer (class in omnixai.explainers.data.correlation)": [[4, "omnixai.explainers.data.correlation.CorrelationAnalyzer"]], "dataanalyzer (class in omnixai.explainers.data)": [[4, "omnixai.explainers.data.DataAnalyzer"]], "dataanalyzer (class in omnixai.explainers.data.auto)": [[4, "omnixai.explainers.data.auto.DataAnalyzer"]], "imbalanceanalyzer (class in omnixai.explainers.data)": [[4, "omnixai.explainers.data.ImbalanceAnalyzer"]], "imbalanceanalyzer (class in omnixai.explainers.data.imbalance)": [[4, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer"]], "mutualinformation (class in omnixai.explainers.data)": [[4, "omnixai.explainers.data.MutualInformation"]], "mutualinformation (class in omnixai.explainers.data.mutual_info)": [[4, "omnixai.explainers.data.mutual_info.MutualInformation"]], "alias (omnixai.explainers.data.chisquare attribute)": [[4, "omnixai.explainers.data.ChiSquare.alias"]], "alias (omnixai.explainers.data.correlationanalyzer attribute)": [[4, "omnixai.explainers.data.CorrelationAnalyzer.alias"]], "alias (omnixai.explainers.data.imbalanceanalyzer attribute)": [[4, "omnixai.explainers.data.ImbalanceAnalyzer.alias"]], "alias (omnixai.explainers.data.mutualinformation attribute)": [[4, "omnixai.explainers.data.MutualInformation.alias"]], "alias (omnixai.explainers.data.chi_square.chisquare attribute)": [[4, "omnixai.explainers.data.chi_square.ChiSquare.alias"]], "alias (omnixai.explainers.data.correlation.correlationanalyzer attribute)": [[4, "omnixai.explainers.data.correlation.CorrelationAnalyzer.alias"]], "alias (omnixai.explainers.data.imbalance.imbalanceanalyzer attribute)": [[4, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer.alias"]], "alias (omnixai.explainers.data.mutual_info.mutualinformation attribute)": [[4, "omnixai.explainers.data.mutual_info.MutualInformation.alias"]], "explain() (omnixai.explainers.data.chisquare method)": [[4, "omnixai.explainers.data.ChiSquare.explain"]], "explain() (omnixai.explainers.data.correlationanalyzer method)": [[4, "omnixai.explainers.data.CorrelationAnalyzer.explain"]], "explain() (omnixai.explainers.data.imbalanceanalyzer method)": [[4, "omnixai.explainers.data.ImbalanceAnalyzer.explain"]], "explain() (omnixai.explainers.data.mutualinformation method)": [[4, "omnixai.explainers.data.MutualInformation.explain"]], "explain() (omnixai.explainers.data.chi_square.chisquare method)": [[4, "omnixai.explainers.data.chi_square.ChiSquare.explain"]], "explain() (omnixai.explainers.data.correlation.correlationanalyzer method)": [[4, "omnixai.explainers.data.correlation.CorrelationAnalyzer.explain"]], "explain() (omnixai.explainers.data.imbalance.imbalanceanalyzer method)": [[4, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer.explain"]], "explain() (omnixai.explainers.data.mutual_info.mutualinformation method)": [[4, "omnixai.explainers.data.mutual_info.MutualInformation.explain"]], "explanation_type (omnixai.explainers.data.chisquare attribute)": [[4, "omnixai.explainers.data.ChiSquare.explanation_type"]], "explanation_type (omnixai.explainers.data.correlationanalyzer attribute)": [[4, "omnixai.explainers.data.CorrelationAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.imbalanceanalyzer attribute)": [[4, "omnixai.explainers.data.ImbalanceAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.mutualinformation attribute)": [[4, "omnixai.explainers.data.MutualInformation.explanation_type"]], "explanation_type (omnixai.explainers.data.chi_square.chisquare attribute)": [[4, "omnixai.explainers.data.chi_square.ChiSquare.explanation_type"]], "explanation_type (omnixai.explainers.data.correlation.correlationanalyzer attribute)": [[4, "omnixai.explainers.data.correlation.CorrelationAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.imbalance.imbalanceanalyzer attribute)": [[4, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.mutual_info.mutualinformation attribute)": [[4, "omnixai.explainers.data.mutual_info.MutualInformation.explanation_type"]], "list_explainers() (omnixai.explainers.data.dataanalyzer static method)": [[4, "omnixai.explainers.data.DataAnalyzer.list_explainers"]], "list_explainers() (omnixai.explainers.data.auto.dataanalyzer static method)": [[4, "omnixai.explainers.data.auto.DataAnalyzer.list_explainers"]], "omnixai.explainers.data": [[4, "module-omnixai.explainers.data"]], "omnixai.explainers.data.auto": [[4, "module-omnixai.explainers.data.auto"]], "omnixai.explainers.data.chi_square": [[4, "module-omnixai.explainers.data.chi_square"]], "omnixai.explainers.data.correlation": [[4, "module-omnixai.explainers.data.correlation"]], "omnixai.explainers.data.imbalance": [[4, "module-omnixai.explainers.data.imbalance"]], "omnixai.explainers.data.mutual_info": [[4, "module-omnixai.explainers.data.mutual_info"]], "nlpexplainer (class in omnixai.explainers.nlp.auto)": [[5, "omnixai.explainers.nlp.auto.NLPExplainer"]], "list_explainers() (omnixai.explainers.nlp.auto.nlpexplainer static method)": [[5, "omnixai.explainers.nlp.auto.NLPExplainer.list_explainers"]], "omnixai.explainers.nlp.auto": [[5, "module-omnixai.explainers.nlp.auto"]], "defaultpredictionmodel (class in omnixai.explainers.nlp.agnostic.l2x)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel"]], "defaultselectionmodel (class in omnixai.explainers.nlp.agnostic.l2x)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel"]], "l2xtext (class in omnixai.explainers.nlp.agnostic.l2x)": [[6, "omnixai.explainers.nlp.agnostic.l2x.L2XText"]], "limetext (class in omnixai.explainers.nlp.agnostic.lime)": [[6, "omnixai.explainers.nlp.agnostic.lime.LimeText"]], "shaptext (class in omnixai.explainers.nlp.agnostic.shap)": [[6, "omnixai.explainers.nlp.agnostic.shap.ShapText"]], "alias (omnixai.explainers.nlp.agnostic.l2x.l2xtext attribute)": [[6, "omnixai.explainers.nlp.agnostic.l2x.L2XText.alias"]], "alias (omnixai.explainers.nlp.agnostic.lime.limetext attribute)": [[6, "omnixai.explainers.nlp.agnostic.lime.LimeText.alias"]], "alias (omnixai.explainers.nlp.agnostic.shap.shaptext attribute)": [[6, "omnixai.explainers.nlp.agnostic.shap.ShapText.alias"]], "explain() (omnixai.explainers.nlp.agnostic.l2x.l2xtext method)": [[6, "omnixai.explainers.nlp.agnostic.l2x.L2XText.explain"]], "explain() (omnixai.explainers.nlp.agnostic.lime.limetext method)": [[6, "omnixai.explainers.nlp.agnostic.lime.LimeText.explain"]], "explain() (omnixai.explainers.nlp.agnostic.shap.shaptext method)": [[6, "omnixai.explainers.nlp.agnostic.shap.ShapText.explain"]], "explanation_type (omnixai.explainers.nlp.agnostic.l2x.l2xtext attribute)": [[6, "omnixai.explainers.nlp.agnostic.l2x.L2XText.explanation_type"]], "explanation_type (omnixai.explainers.nlp.agnostic.lime.limetext attribute)": [[6, "omnixai.explainers.nlp.agnostic.lime.LimeText.explanation_type"]], "explanation_type (omnixai.explainers.nlp.agnostic.shap.shaptext attribute)": [[6, "omnixai.explainers.nlp.agnostic.shap.ShapText.explanation_type"]], "forward() (omnixai.explainers.nlp.agnostic.l2x.defaultpredictionmodel method)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel.forward"]], "forward() (omnixai.explainers.nlp.agnostic.l2x.defaultselectionmodel method)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel.forward"]], "omnixai.explainers.nlp.agnostic": [[6, "module-omnixai.explainers.nlp.agnostic"]], "omnixai.explainers.nlp.agnostic.l2x": [[6, "module-omnixai.explainers.nlp.agnostic.l2x"]], "omnixai.explainers.nlp.agnostic.lime": [[6, "module-omnixai.explainers.nlp.agnostic.lime"]], "omnixai.explainers.nlp.agnostic.shap": [[6, "module-omnixai.explainers.nlp.agnostic.shap"]], "training (omnixai.explainers.nlp.agnostic.l2x.defaultpredictionmodel attribute)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel.training"]], "training (omnixai.explainers.nlp.agnostic.l2x.defaultselectionmodel attribute)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel.training"]], "polyjuice (class in omnixai.explainers.nlp.counterfactual.polyjuice)": [[7, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice"]], "alias (omnixai.explainers.nlp.counterfactual.polyjuice.polyjuice attribute)": [[7, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice.alias"]], "explain() (omnixai.explainers.nlp.counterfactual.polyjuice.polyjuice method)": [[7, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice.explain"]], "explanation_type (omnixai.explainers.nlp.counterfactual.polyjuice.polyjuice attribute)": [[7, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice.explanation_type"]], "omnixai.explainers.nlp.counterfactual": [[7, "module-omnixai.explainers.nlp.counterfactual"]], "omnixai.explainers.nlp.counterfactual.polyjuice": [[7, "module-omnixai.explainers.nlp.counterfactual.polyjuice"]], "integratedgradienttext (class in omnixai.explainers.nlp.specific.ig)": [[8, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText"]], "alias (omnixai.explainers.nlp.specific.ig.integratedgradienttext attribute)": [[8, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText.alias"]], "explain() (omnixai.explainers.nlp.specific.ig.integratedgradienttext method)": [[8, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText.explain"]], "explanation_type (omnixai.explainers.nlp.specific.ig.integratedgradienttext attribute)": [[8, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText.explanation_type"]], "omnixai.explainers.nlp.specific": [[8, "module-omnixai.explainers.nlp.specific"]], "omnixai.explainers.nlp.specific.ig": [[8, "module-omnixai.explainers.nlp.specific.ig"]], "sklearnbase (class in omnixai.explainers.tabular.base)": [[9, "omnixai.explainers.tabular.base.SklearnBase"]], "tabularexplainer (class in omnixai.explainers.tabular.auto)": [[9, "omnixai.explainers.tabular.auto.TabularExplainer"]], "tabularexplainer (class in omnixai.explainers.tabular.base)": [[9, "omnixai.explainers.tabular.base.TabularExplainer"]], "class_names() (omnixai.explainers.tabular.base.sklearnbase method)": [[9, "omnixai.explainers.tabular.base.SklearnBase.class_names"]], "fit() (omnixai.explainers.tabular.base.sklearnbase method)": [[9, "omnixai.explainers.tabular.base.SklearnBase.fit"]], "list_explainers() (omnixai.explainers.tabular.auto.tabularexplainer static method)": [[9, "omnixai.explainers.tabular.auto.TabularExplainer.list_explainers"]], "omnixai.explainers.tabular.auto": [[9, "module-omnixai.explainers.tabular.auto"]], "omnixai.explainers.tabular.base": [[9, "module-omnixai.explainers.tabular.base"]], "predict() (omnixai.explainers.tabular.base.sklearnbase method)": [[9, "omnixai.explainers.tabular.base.SklearnBase.predict"]], "predict_proba() (omnixai.explainers.tabular.base.sklearnbase method)": [[9, "omnixai.explainers.tabular.base.SklearnBase.predict_proba"]], "defaultpredictionmodel (class in omnixai.explainers.tabular.agnostic.l2x.l2x)": [[10, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel"]], "defaultselectionmodel (class in omnixai.explainers.tabular.agnostic.l2x.l2x)": [[10, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel"]], "l2xtabular (class in omnixai.explainers.tabular.agnostic.l2x.l2x)": [[10, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular"]], "limetabular (class in omnixai.explainers.tabular.agnostic.lime)": [[10, "omnixai.explainers.tabular.agnostic.lime.LimeTabular"]], "partialdependencetabular (class in omnixai.explainers.tabular.agnostic.pdp)": [[10, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular"]], "sensitivityanalysistabular (class in omnixai.explainers.tabular.agnostic.sensitivity)": [[10, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular"]], "shaptabular (class in omnixai.explainers.tabular.agnostic.shap)": [[10, "omnixai.explainers.tabular.agnostic.shap.ShapTabular"]], "alias (omnixai.explainers.tabular.agnostic.l2x.l2x.l2xtabular attribute)": [[10, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.lime.limetabular attribute)": [[10, "omnixai.explainers.tabular.agnostic.lime.LimeTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.pdp.partialdependencetabular attribute)": [[10, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.sensitivity.sensitivityanalysistabular attribute)": [[10, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.shap.shaptabular attribute)": [[10, "omnixai.explainers.tabular.agnostic.shap.ShapTabular.alias"]], "explain() (omnixai.explainers.tabular.agnostic.l2x.l2x.l2xtabular method)": [[10, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.lime.limetabular method)": [[10, "omnixai.explainers.tabular.agnostic.lime.LimeTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.pdp.partialdependencetabular method)": [[10, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.sensitivity.sensitivityanalysistabular method)": [[10, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.shap.shaptabular method)": [[10, "omnixai.explainers.tabular.agnostic.shap.ShapTabular.explain"]], "explanation_type (omnixai.explainers.tabular.agnostic.l2x.l2x.l2xtabular attribute)": [[10, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.lime.limetabular attribute)": [[10, "omnixai.explainers.tabular.agnostic.lime.LimeTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.pdp.partialdependencetabular attribute)": [[10, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.sensitivity.sensitivityanalysistabular attribute)": [[10, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.shap.shaptabular attribute)": [[10, "omnixai.explainers.tabular.agnostic.shap.ShapTabular.explanation_type"]], "forward() (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultpredictionmodel method)": [[10, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel.forward"]], "forward() (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultselectionmodel method)": [[10, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel.forward"]], "omnixai.explainers.tabular.agnostic": [[10, "module-omnixai.explainers.tabular.agnostic"]], "omnixai.explainers.tabular.agnostic.l2x.l2x": [[10, "module-omnixai.explainers.tabular.agnostic.L2X.l2x"]], "omnixai.explainers.tabular.agnostic.lime": [[10, "module-omnixai.explainers.tabular.agnostic.lime"]], "omnixai.explainers.tabular.agnostic.pdp": [[10, "module-omnixai.explainers.tabular.agnostic.pdp"]], "omnixai.explainers.tabular.agnostic.sensitivity": [[10, "module-omnixai.explainers.tabular.agnostic.sensitivity"]], "omnixai.explainers.tabular.agnostic.shap": [[10, "module-omnixai.explainers.tabular.agnostic.shap"]], "training (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultpredictionmodel attribute)": [[10, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel.training"]], "training (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultselectionmodel attribute)": [[10, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel.training"]], "counterfactualexplainer (class in omnixai.explainers.tabular.counterfactual.ce)": [[11, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer"]], "counterfactualoptimizer (class in omnixai.explainers.tabular.counterfactual.ce)": [[11, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualOptimizer"]], "maceexplainer (class in omnixai.explainers.tabular.counterfactual.mace.mace)": [[11, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer"]], "alias (omnixai.explainers.tabular.counterfactual.ce.counterfactualexplainer attribute)": [[11, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer.alias"]], "alias (omnixai.explainers.tabular.counterfactual.mace.mace.maceexplainer attribute)": [[11, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer.alias"]], "explain() (omnixai.explainers.tabular.counterfactual.ce.counterfactualexplainer method)": [[11, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer.explain"]], "explain() (omnixai.explainers.tabular.counterfactual.mace.mace.maceexplainer method)": [[11, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer.explain"]], "explanation_type (omnixai.explainers.tabular.counterfactual.ce.counterfactualexplainer attribute)": [[11, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer.explanation_type"]], "explanation_type (omnixai.explainers.tabular.counterfactual.mace.mace.maceexplainer attribute)": [[11, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer.explanation_type"]], "omnixai.explainers.tabular.counterfactual": [[11, "module-omnixai.explainers.tabular.counterfactual"]], "omnixai.explainers.tabular.counterfactual.ce": [[11, "module-omnixai.explainers.tabular.counterfactual.ce"]], "omnixai.explainers.tabular.counterfactual.mace.mace": [[11, "module-omnixai.explainers.tabular.counterfactual.mace.mace"]], "optimize() (omnixai.explainers.tabular.counterfactual.ce.counterfactualoptimizer method)": [[11, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualOptimizer.optimize"]], "integratedgradient (class in omnixai.explainers.tabular.specific.ig)": [[12, "omnixai.explainers.tabular.specific.ig.IntegratedGradient"]], "integratedgradienttabular (class in omnixai.explainers.tabular.specific.ig)": [[12, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular"]], "linearbase (class in omnixai.explainers.tabular.specific.linear)": [[12, "omnixai.explainers.tabular.specific.linear.LinearBase"]], "linearregression (class in omnixai.explainers.tabular.specific.linear)": [[12, "omnixai.explainers.tabular.specific.linear.LinearRegression"]], "logisticregression (class in omnixai.explainers.tabular.specific.linear)": [[12, "omnixai.explainers.tabular.specific.linear.LogisticRegression"]], "shaptreetabular (class in omnixai.explainers.tabular.specific.shap_tree)": [[12, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular"]], "treebase (class in omnixai.explainers.tabular.specific.decision_tree)": [[12, "omnixai.explainers.tabular.specific.decision_tree.TreeBase"]], "treeclassifier (class in omnixai.explainers.tabular.specific.decision_tree)": [[12, "omnixai.explainers.tabular.specific.decision_tree.TreeClassifier"]], "treeregressor (class in omnixai.explainers.tabular.specific.decision_tree)": [[12, "omnixai.explainers.tabular.specific.decision_tree.TreeRegressor"]], "alias (omnixai.explainers.tabular.specific.decision_tree.treeclassifier attribute)": [[12, "omnixai.explainers.tabular.specific.decision_tree.TreeClassifier.alias"]], "alias (omnixai.explainers.tabular.specific.decision_tree.treeregressor attribute)": [[12, "omnixai.explainers.tabular.specific.decision_tree.TreeRegressor.alias"]], "alias (omnixai.explainers.tabular.specific.ig.integratedgradienttabular attribute)": [[12, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular.alias"]], "alias (omnixai.explainers.tabular.specific.linear.linearregression attribute)": [[12, "omnixai.explainers.tabular.specific.linear.LinearRegression.alias"]], "alias (omnixai.explainers.tabular.specific.linear.logisticregression attribute)": [[12, "omnixai.explainers.tabular.specific.linear.LogisticRegression.alias"]], "alias (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular attribute)": [[12, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.alias"]], "compute_integrated_gradients() (omnixai.explainers.tabular.specific.ig.integratedgradient static method)": [[12, "omnixai.explainers.tabular.specific.ig.IntegratedGradient.compute_integrated_gradients"]], "explain() (omnixai.explainers.tabular.specific.decision_tree.treebase method)": [[12, "omnixai.explainers.tabular.specific.decision_tree.TreeBase.explain"]], "explain() (omnixai.explainers.tabular.specific.ig.integratedgradienttabular method)": [[12, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular.explain"]], "explain() (omnixai.explainers.tabular.specific.linear.linearbase method)": [[12, "omnixai.explainers.tabular.specific.linear.LinearBase.explain"]], "explain() (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular method)": [[12, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.explain"]], "explanation_type (omnixai.explainers.tabular.specific.decision_tree.treebase attribute)": [[12, "omnixai.explainers.tabular.specific.decision_tree.TreeBase.explanation_type"]], "explanation_type (omnixai.explainers.tabular.specific.ig.integratedgradienttabular attribute)": [[12, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.specific.linear.linearbase attribute)": [[12, "omnixai.explainers.tabular.specific.linear.LinearBase.explanation_type"]], "explanation_type (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular attribute)": [[12, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.explanation_type"]], "fit() (omnixai.explainers.tabular.specific.decision_tree.treebase method)": [[12, "omnixai.explainers.tabular.specific.decision_tree.TreeBase.fit"]], "fit() (omnixai.explainers.tabular.specific.linear.linearbase method)": [[12, "omnixai.explainers.tabular.specific.linear.LinearBase.fit"]], "fit() (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular method)": [[12, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.fit"]], "omnixai.explainers.tabular.specific": [[12, "module-omnixai.explainers.tabular.specific"]], "omnixai.explainers.tabular.specific.decision_tree": [[12, "module-omnixai.explainers.tabular.specific.decision_tree"]], "omnixai.explainers.tabular.specific.ig": [[12, "module-omnixai.explainers.tabular.specific.ig"]], "omnixai.explainers.tabular.specific.linear": [[12, "module-omnixai.explainers.tabular.specific.linear"]], "omnixai.explainers.tabular.specific.shap_tree": [[12, "module-omnixai.explainers.tabular.specific.shap_tree"]], "timeseriesexplainer (class in omnixai.explainers.timeseries.auto)": [[13, "omnixai.explainers.timeseries.auto.TimeseriesExplainer"]], "list_explainers() (omnixai.explainers.timeseries.auto.timeseriesexplainer static method)": [[13, "omnixai.explainers.timeseries.auto.TimeseriesExplainer.list_explainers"]], "omnixai.explainers.timeseries.auto": [[13, "module-omnixai.explainers.timeseries.auto"]], "shaptimeseries (class in omnixai.explainers.timeseries.agnostic.shap)": [[14, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries"]], "alias (omnixai.explainers.timeseries.agnostic.shap.shaptimeseries attribute)": [[14, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries.alias"]], "explain() (omnixai.explainers.timeseries.agnostic.shap.shaptimeseries method)": [[14, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries.explain"]], "explanation_type (omnixai.explainers.timeseries.agnostic.shap.shaptimeseries attribute)": [[14, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries.explanation_type"]], "omnixai.explainers.timeseries.agnostic": [[14, "module-omnixai.explainers.timeseries.agnostic"]], "omnixai.explainers.timeseries.agnostic.shap": [[14, "module-omnixai.explainers.timeseries.agnostic.shap"]], "counterfactualexplainer (class in omnixai.explainers.timeseries.counterfactual.ce)": [[15, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer"]], "counterfactualoptimizer (class in omnixai.explainers.timeseries.counterfactual.ce)": [[15, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualOptimizer"]], "maceexplainer (class in omnixai.explainers.timeseries.counterfactual.mace)": [[15, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer"]], "alias (omnixai.explainers.timeseries.counterfactual.ce.counterfactualexplainer attribute)": [[15, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer.alias"]], "alias (omnixai.explainers.timeseries.counterfactual.mace.maceexplainer attribute)": [[15, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer.alias"]], "explain() (omnixai.explainers.timeseries.counterfactual.ce.counterfactualexplainer method)": [[15, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer.explain"]], "explain() (omnixai.explainers.timeseries.counterfactual.mace.maceexplainer method)": [[15, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer.explain"]], "explanation_type (omnixai.explainers.timeseries.counterfactual.ce.counterfactualexplainer attribute)": [[15, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer.explanation_type"]], "explanation_type (omnixai.explainers.timeseries.counterfactual.mace.maceexplainer attribute)": [[15, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer.explanation_type"]], "omnixai.explainers.timeseries.counterfactual": [[15, "module-omnixai.explainers.timeseries.counterfactual"]], "omnixai.explainers.timeseries.counterfactual.ce": [[15, "module-omnixai.explainers.timeseries.counterfactual.ce"]], "omnixai.explainers.timeseries.counterfactual.mace": [[15, "module-omnixai.explainers.timeseries.counterfactual.mace"]], "optimize() (omnixai.explainers.timeseries.counterfactual.ce.counterfactualoptimizer method)": [[15, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualOptimizer.optimize"]], "visionexplainer (class in omnixai.explainers.vision.auto)": [[16, "omnixai.explainers.vision.auto.VisionExplainer"]], "list_explainers() (omnixai.explainers.vision.auto.visionexplainer static method)": [[16, "omnixai.explainers.vision.auto.VisionExplainer.list_explainers"]], "omnixai.explainers.vision.auto": [[16, "module-omnixai.explainers.vision.auto"]], "defaultpredictionmodel (class in omnixai.explainers.vision.agnostic.l2x)": [[17, "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel"]], "defaultselectionmodel (class in omnixai.explainers.vision.agnostic.l2x)": [[17, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel"]], "l2ximage (class in omnixai.explainers.vision.agnostic.l2x)": [[17, "omnixai.explainers.vision.agnostic.l2x.L2XImage"]], "limeimage (class in omnixai.explainers.vision.agnostic.lime)": [[17, "omnixai.explainers.vision.agnostic.lime.LimeImage"]], "partialdependenceimage (class in omnixai.explainers.vision.agnostic.pdp)": [[17, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage"]], "shapimage (class in omnixai.explainers.vision.agnostic.shap)": [[17, "omnixai.explainers.vision.agnostic.shap.ShapImage"]], "alias (omnixai.explainers.vision.agnostic.l2x.l2ximage attribute)": [[17, "omnixai.explainers.vision.agnostic.l2x.L2XImage.alias"]], "alias (omnixai.explainers.vision.agnostic.lime.limeimage attribute)": [[17, "omnixai.explainers.vision.agnostic.lime.LimeImage.alias"]], "alias (omnixai.explainers.vision.agnostic.pdp.partialdependenceimage attribute)": [[17, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage.alias"]], "alias (omnixai.explainers.vision.agnostic.shap.shapimage attribute)": [[17, "omnixai.explainers.vision.agnostic.shap.ShapImage.alias"]], "explain() (omnixai.explainers.vision.agnostic.l2x.l2ximage method)": [[17, "omnixai.explainers.vision.agnostic.l2x.L2XImage.explain"]], "explain() (omnixai.explainers.vision.agnostic.lime.limeimage method)": [[17, "omnixai.explainers.vision.agnostic.lime.LimeImage.explain"]], "explain() (omnixai.explainers.vision.agnostic.pdp.partialdependenceimage method)": [[17, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage.explain"]], "explain() (omnixai.explainers.vision.agnostic.shap.shapimage method)": [[17, "omnixai.explainers.vision.agnostic.shap.ShapImage.explain"]], "explanation_type (omnixai.explainers.vision.agnostic.l2x.l2ximage attribute)": [[17, "omnixai.explainers.vision.agnostic.l2x.L2XImage.explanation_type"]], "explanation_type (omnixai.explainers.vision.agnostic.lime.limeimage attribute)": [[17, "omnixai.explainers.vision.agnostic.lime.LimeImage.explanation_type"]], "explanation_type (omnixai.explainers.vision.agnostic.pdp.partialdependenceimage attribute)": [[17, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage.explanation_type"]], "explanation_type (omnixai.explainers.vision.agnostic.shap.shapimage attribute)": [[17, "omnixai.explainers.vision.agnostic.shap.ShapImage.explanation_type"]], "forward() (omnixai.explainers.vision.agnostic.l2x.defaultpredictionmodel method)": [[17, "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel.forward"]], "forward() (omnixai.explainers.vision.agnostic.l2x.defaultselectionmodel method)": [[17, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel.forward"]], "omnixai.explainers.vision.agnostic": [[17, "module-omnixai.explainers.vision.agnostic"]], "omnixai.explainers.vision.agnostic.l2x": [[17, "module-omnixai.explainers.vision.agnostic.l2x"]], "omnixai.explainers.vision.agnostic.lime": [[17, "module-omnixai.explainers.vision.agnostic.lime"]], "omnixai.explainers.vision.agnostic.pdp": [[17, "module-omnixai.explainers.vision.agnostic.pdp"]], "omnixai.explainers.vision.agnostic.shap": [[17, "module-omnixai.explainers.vision.agnostic.shap"]], "postprocess() (omnixai.explainers.vision.agnostic.l2x.defaultselectionmodel method)": [[17, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel.postprocess"]], "training (omnixai.explainers.vision.agnostic.l2x.defaultpredictionmodel attribute)": [[17, "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel.training"]], "training (omnixai.explainers.vision.agnostic.l2x.defaultselectionmodel attribute)": [[17, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel.training"]], "counterfactualexplainer (class in omnixai.explainers.vision.counterfactual.ce)": [[18, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer"]], "alias (omnixai.explainers.vision.counterfactual.ce.counterfactualexplainer attribute)": [[18, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer.alias"]], "explain() (omnixai.explainers.vision.counterfactual.ce.counterfactualexplainer method)": [[18, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer.explain"]], "explanation_type (omnixai.explainers.vision.counterfactual.ce.counterfactualexplainer attribute)": [[18, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer.explanation_type"]], "omnixai.explainers.vision.counterfactual": [[18, "module-omnixai.explainers.vision.counterfactual"]], "omnixai.explainers.vision.counterfactual.ce": [[18, "module-omnixai.explainers.vision.counterfactual.ce"]], "cemoptimizer (class in omnixai.explainers.vision.specific.cem)": [[19, "omnixai.explainers.vision.specific.cem.CEMOptimizer"]], "contrastiveexplainer (class in omnixai.explainers.vision.specific.cem)": [[19, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer"]], "gradcam (class in omnixai.explainers.vision.specific.gradcam.gradcam)": [[19, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM"]], "gradcamplus (class in omnixai.explainers.vision.specific.gradcam.gradcam)": [[19, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus"]], "integratedgradientimage (class in omnixai.explainers.vision.specific.ig)": [[19, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage"]], "alias (omnixai.explainers.vision.specific.cem.contrastiveexplainer attribute)": [[19, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer.alias"]], "alias (omnixai.explainers.vision.specific.gradcam.gradcam.gradcam attribute)": [[19, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM.alias"]], "alias (omnixai.explainers.vision.specific.gradcam.gradcam.gradcamplus attribute)": [[19, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus.alias"]], "alias (omnixai.explainers.vision.specific.ig.integratedgradientimage attribute)": [[19, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage.alias"]], "explain() (omnixai.explainers.vision.specific.cem.contrastiveexplainer method)": [[19, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer.explain"]], "explain() (omnixai.explainers.vision.specific.gradcam.gradcam.gradcam method)": [[19, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM.explain"]], "explain() (omnixai.explainers.vision.specific.gradcam.gradcam.gradcamplus method)": [[19, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus.explain"]], "explain() (omnixai.explainers.vision.specific.ig.integratedgradientimage method)": [[19, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage.explain"]], "explanation_type (omnixai.explainers.vision.specific.cem.contrastiveexplainer attribute)": [[19, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.gradcam.gradcam.gradcam attribute)": [[19, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.gradcam.gradcam.gradcamplus attribute)": [[19, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.ig.integratedgradientimage attribute)": [[19, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage.explanation_type"]], "omnixai.explainers.vision.specific": [[19, "module-omnixai.explainers.vision.specific"]], "omnixai.explainers.vision.specific.cem": [[19, "module-omnixai.explainers.vision.specific.cem"]], "omnixai.explainers.vision.specific.gradcam.gradcam": [[19, "module-omnixai.explainers.vision.specific.gradcam.gradcam"]], "omnixai.explainers.vision.specific.ig": [[19, "module-omnixai.explainers.vision.specific.ig"]], "pn_optimize() (omnixai.explainers.vision.specific.cem.cemoptimizer method)": [[19, "omnixai.explainers.vision.specific.cem.CEMOptimizer.pn_optimize"]], "pp_optimize() (omnixai.explainers.vision.specific.cem.cemoptimizer method)": [[19, "omnixai.explainers.vision.specific.cem.CEMOptimizer.pp_optimize"]], "dashfigure (class in omnixai.explanations.base)": [[20, "omnixai.explanations.base.DashFigure"]], "explanationbase (class in omnixai.explanations.base)": [[20, "omnixai.explanations.base.ExplanationBase"]], "predictedresults (class in omnixai.explanations.base)": [[20, "omnixai.explanations.base.PredictedResults"]], "get_explanations() (omnixai.explanations.base.explanationbase method)": [[20, "omnixai.explanations.base.ExplanationBase.get_explanations"]], "get_explanations() (omnixai.explanations.base.predictedresults method)": [[20, "omnixai.explanations.base.PredictedResults.get_explanations"]], "ipython_plot() (omnixai.explanations.base.explanationbase method)": [[20, "omnixai.explanations.base.ExplanationBase.ipython_plot"]], "ipython_plot() (omnixai.explanations.base.predictedresults method)": [[20, "omnixai.explanations.base.PredictedResults.ipython_plot"]], "omnixai.explanations": [[20, "module-omnixai.explanations"]], "omnixai.explanations.base": [[20, "module-omnixai.explanations.base"]], "plot() (omnixai.explanations.base.explanationbase method)": [[20, "omnixai.explanations.base.ExplanationBase.plot"]], "plot() (omnixai.explanations.base.predictedresults method)": [[20, "omnixai.explanations.base.PredictedResults.plot"]], "plotly_plot() (omnixai.explanations.base.explanationbase method)": [[20, "omnixai.explanations.base.ExplanationBase.plotly_plot"]], "plotly_plot() (omnixai.explanations.base.predictedresults method)": [[20, "omnixai.explanations.base.PredictedResults.plotly_plot"]], "show() (omnixai.explanations.base.dashfigure method)": [[20, "omnixai.explanations.base.DashFigure.show"]], "to_html() (omnixai.explanations.base.dashfigure method)": [[20, "omnixai.explanations.base.DashFigure.to_html"]], "to_html_div() (omnixai.explanations.base.dashfigure method)": [[20, "omnixai.explanations.base.DashFigure.to_html_div"]], "cfexplanation (class in omnixai.explanations.image.counterfactual)": [[21, "omnixai.explanations.image.counterfactual.CFExplanation"]], "contrastiveexplanation (class in omnixai.explanations.image.contrast)": [[21, "omnixai.explanations.image.contrast.ContrastiveExplanation"]], "maskexplanation (class in omnixai.explanations.image.mask)": [[21, "omnixai.explanations.image.mask.MaskExplanation"]], "pixelimportance (class in omnixai.explanations.image.pixel_importance)": [[21, "omnixai.explanations.image.pixel_importance.PixelImportance"]], "add() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[21, "omnixai.explanations.image.contrast.ContrastiveExplanation.add"]], "add() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[21, "omnixai.explanations.image.counterfactual.CFExplanation.add"]], "add() (omnixai.explanations.image.mask.maskexplanation method)": [[21, "omnixai.explanations.image.mask.MaskExplanation.add"]], "add() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[21, "omnixai.explanations.image.pixel_importance.PixelImportance.add"]], "get_explanations() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[21, "omnixai.explanations.image.contrast.ContrastiveExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[21, "omnixai.explanations.image.counterfactual.CFExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.image.mask.maskexplanation method)": [[21, "omnixai.explanations.image.mask.MaskExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[21, "omnixai.explanations.image.pixel_importance.PixelImportance.get_explanations"]], "ipython_plot() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[21, "omnixai.explanations.image.contrast.ContrastiveExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[21, "omnixai.explanations.image.counterfactual.CFExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.image.mask.maskexplanation method)": [[21, "omnixai.explanations.image.mask.MaskExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[21, "omnixai.explanations.image.pixel_importance.PixelImportance.ipython_plot"]], "omnixai.explanations.image": [[21, "module-omnixai.explanations.image"]], "omnixai.explanations.image.contrast": [[21, "module-omnixai.explanations.image.contrast"]], "omnixai.explanations.image.counterfactual": [[21, "module-omnixai.explanations.image.counterfactual"]], "omnixai.explanations.image.mask": [[21, "module-omnixai.explanations.image.mask"]], "omnixai.explanations.image.pixel_importance": [[21, "module-omnixai.explanations.image.pixel_importance"]], "plot() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[21, "omnixai.explanations.image.contrast.ContrastiveExplanation.plot"]], "plot() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[21, "omnixai.explanations.image.counterfactual.CFExplanation.plot"]], "plot() (omnixai.explanations.image.mask.maskexplanation method)": [[21, "omnixai.explanations.image.mask.MaskExplanation.plot"]], "plot() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[21, "omnixai.explanations.image.pixel_importance.PixelImportance.plot"]], "plotly_plot() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[21, "omnixai.explanations.image.contrast.ContrastiveExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[21, "omnixai.explanations.image.counterfactual.CFExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.image.mask.maskexplanation method)": [[21, "omnixai.explanations.image.mask.MaskExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[21, "omnixai.explanations.image.pixel_importance.PixelImportance.plotly_plot"]], "cfexplanation (class in omnixai.explanations.tabular.counterfactual)": [[22, "omnixai.explanations.tabular.counterfactual.CFExplanation"]], "correlationexplanation (class in omnixai.explanations.tabular.correlation)": [[22, "omnixai.explanations.tabular.correlation.CorrelationExplanation"]], "featureimportance (class in omnixai.explanations.tabular.feature_importance)": [[22, "omnixai.explanations.tabular.feature_importance.FeatureImportance"]], "globalfeatureimportance (class in omnixai.explanations.tabular.feature_importance)": [[22, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance"]], "imbalanceexplanation (class in omnixai.explanations.tabular.imbalance)": [[22, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation"]], "linearexplanation (class in omnixai.explanations.tabular.linear)": [[22, "omnixai.explanations.tabular.linear.LinearExplanation"]], "pdpexplanation (class in omnixai.explanations.tabular.pdp)": [[22, "omnixai.explanations.tabular.pdp.PDPExplanation"]], "sensitivityexplanation (class in omnixai.explanations.tabular.sensitivity)": [[22, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation"]], "treeexplanation (class in omnixai.explanations.tabular.tree)": [[22, "omnixai.explanations.tabular.tree.TreeExplanation"]], "add() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[22, "omnixai.explanations.tabular.correlation.CorrelationExplanation.add"]], "add() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[22, "omnixai.explanations.tabular.counterfactual.CFExplanation.add"]], "add() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[22, "omnixai.explanations.tabular.feature_importance.FeatureImportance.add"]], "add() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[22, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.add"]], "add() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[22, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.add"]], "add() (omnixai.explanations.tabular.linear.linearexplanation method)": [[22, "omnixai.explanations.tabular.linear.LinearExplanation.add"]], "add() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[22, "omnixai.explanations.tabular.pdp.PDPExplanation.add"]], "add() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[22, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.add"]], "add_global() (omnixai.explanations.tabular.tree.treeexplanation method)": [[22, "omnixai.explanations.tabular.tree.TreeExplanation.add_global"]], "add_local() (omnixai.explanations.tabular.tree.treeexplanation method)": [[22, "omnixai.explanations.tabular.tree.TreeExplanation.add_local"]], "get_explanations() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[22, "omnixai.explanations.tabular.correlation.CorrelationExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[22, "omnixai.explanations.tabular.counterfactual.CFExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[22, "omnixai.explanations.tabular.feature_importance.FeatureImportance.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[22, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[22, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.linear.linearexplanation method)": [[22, "omnixai.explanations.tabular.linear.LinearExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[22, "omnixai.explanations.tabular.pdp.PDPExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[22, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.tree.treeexplanation method)": [[22, "omnixai.explanations.tabular.tree.TreeExplanation.get_explanations"]], "ipython_plot() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[22, "omnixai.explanations.tabular.correlation.CorrelationExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[22, "omnixai.explanations.tabular.counterfactual.CFExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[22, "omnixai.explanations.tabular.feature_importance.FeatureImportance.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[22, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[22, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.linear.linearexplanation method)": [[22, "omnixai.explanations.tabular.linear.LinearExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[22, "omnixai.explanations.tabular.pdp.PDPExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[22, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.tree.treeexplanation method)": [[22, "omnixai.explanations.tabular.tree.TreeExplanation.ipython_plot"]], "omnixai.explanations.tabular": [[22, "module-omnixai.explanations.tabular"]], "omnixai.explanations.tabular.correlation": [[22, "module-omnixai.explanations.tabular.correlation"]], "omnixai.explanations.tabular.counterfactual": [[22, "module-omnixai.explanations.tabular.counterfactual"]], "omnixai.explanations.tabular.feature_importance": [[22, "module-omnixai.explanations.tabular.feature_importance"]], "omnixai.explanations.tabular.imbalance": [[22, "module-omnixai.explanations.tabular.imbalance"]], "omnixai.explanations.tabular.linear": [[22, "module-omnixai.explanations.tabular.linear"]], "omnixai.explanations.tabular.pdp": [[22, "module-omnixai.explanations.tabular.pdp"]], "omnixai.explanations.tabular.sensitivity": [[22, "module-omnixai.explanations.tabular.sensitivity"]], "omnixai.explanations.tabular.tree": [[22, "module-omnixai.explanations.tabular.tree"]], "plot() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[22, "omnixai.explanations.tabular.correlation.CorrelationExplanation.plot"]], "plot() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[22, "omnixai.explanations.tabular.counterfactual.CFExplanation.plot"]], "plot() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[22, "omnixai.explanations.tabular.feature_importance.FeatureImportance.plot"]], "plot() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[22, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.plot"]], "plot() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[22, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.plot"]], "plot() (omnixai.explanations.tabular.linear.linearexplanation method)": [[22, "omnixai.explanations.tabular.linear.LinearExplanation.plot"]], "plot() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[22, "omnixai.explanations.tabular.pdp.PDPExplanation.plot"]], "plot() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[22, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.plot"]], "plot() (omnixai.explanations.tabular.tree.treeexplanation method)": [[22, "omnixai.explanations.tabular.tree.TreeExplanation.plot"]], "plotly_plot() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[22, "omnixai.explanations.tabular.correlation.CorrelationExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[22, "omnixai.explanations.tabular.counterfactual.CFExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[22, "omnixai.explanations.tabular.feature_importance.FeatureImportance.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[22, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[22, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.linear.linearexplanation method)": [[22, "omnixai.explanations.tabular.linear.LinearExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[22, "omnixai.explanations.tabular.pdp.PDPExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[22, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.tree.treeexplanation method)": [[22, "omnixai.explanations.tabular.tree.TreeExplanation.plotly_plot"]], "wordimportance (class in omnixai.explanations.text.word_importance)": [[23, "omnixai.explanations.text.word_importance.WordImportance"]], "add() (omnixai.explanations.text.word_importance.wordimportance method)": [[23, "omnixai.explanations.text.word_importance.WordImportance.add"]], "get_explanations() (omnixai.explanations.text.word_importance.wordimportance method)": [[23, "omnixai.explanations.text.word_importance.WordImportance.get_explanations"]], "ipython_plot() (omnixai.explanations.text.word_importance.wordimportance method)": [[23, "omnixai.explanations.text.word_importance.WordImportance.ipython_plot"]], "omnixai.explanations.text": [[23, "module-omnixai.explanations.text"]], "omnixai.explanations.text.word_importance": [[23, "module-omnixai.explanations.text.word_importance"]], "plot() (omnixai.explanations.text.word_importance.wordimportance method)": [[23, "omnixai.explanations.text.word_importance.WordImportance.plot"]], "plotly_plot() (omnixai.explanations.text.word_importance.wordimportance method)": [[23, "omnixai.explanations.text.word_importance.WordImportance.plotly_plot"]], "cfexplanation (class in omnixai.explanations.timeseries.counterfactual)": [[24, "omnixai.explanations.timeseries.counterfactual.CFExplanation"]], "featureimportance (class in omnixai.explanations.timeseries.feature_importance)": [[24, "omnixai.explanations.timeseries.feature_importance.FeatureImportance"]], "add() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[24, "omnixai.explanations.timeseries.counterfactual.CFExplanation.add"]], "add() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[24, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.add"]], "get_explanations() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[24, "omnixai.explanations.timeseries.counterfactual.CFExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[24, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.get_explanations"]], "ipython_plot() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[24, "omnixai.explanations.timeseries.counterfactual.CFExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[24, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.ipython_plot"]], "omnixai.explanations.timeseries": [[24, "module-omnixai.explanations.timeseries"]], "omnixai.explanations.timeseries.counterfactual": [[24, "module-omnixai.explanations.timeseries.counterfactual"]], "omnixai.explanations.timeseries.feature_importance": [[24, "module-omnixai.explanations.timeseries.feature_importance"]], "plot() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[24, "omnixai.explanations.timeseries.counterfactual.CFExplanation.plot"]], "plot() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[24, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.plot"]], "plotly_plot() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[24, "omnixai.explanations.timeseries.counterfactual.CFExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[24, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.plotly_plot"]], "fillnan (class in omnixai.preprocessing.fill)": [[25, "omnixai.preprocessing.fill.FillNaN"]], "fillnantabular (class in omnixai.preprocessing.fill)": [[25, "omnixai.preprocessing.fill.FillNaNTabular"]], "identity (class in omnixai.preprocessing.base)": [[25, "omnixai.preprocessing.base.Identity"]], "kbins (class in omnixai.preprocessing.encode)": [[25, "omnixai.preprocessing.encode.KBins"]], "labelencoder (class in omnixai.preprocessing.encode)": [[25, "omnixai.preprocessing.encode.LabelEncoder"]], "minmax (class in omnixai.preprocessing.normalize)": [[25, "omnixai.preprocessing.normalize.MinMax"]], "normalize (class in omnixai.preprocessing.image)": [[25, "omnixai.preprocessing.image.Normalize"]], "onehot (class in omnixai.preprocessing.encode)": [[25, "omnixai.preprocessing.encode.OneHot"]], "ordinal (class in omnixai.preprocessing.encode)": [[25, "omnixai.preprocessing.encode.Ordinal"]], "pad (omnixai.preprocessing.text.word2id attribute)": [[25, "omnixai.preprocessing.text.Word2Id.PAD"]], "pipeline (class in omnixai.preprocessing.pipeline)": [[25, "omnixai.preprocessing.pipeline.Pipeline"]], "resize (class in omnixai.preprocessing.image)": [[25, "omnixai.preprocessing.image.Resize"]], "round2int (class in omnixai.preprocessing.image)": [[25, "omnixai.preprocessing.image.Round2Int"]], "start (omnixai.preprocessing.text.word2id attribute)": [[25, "omnixai.preprocessing.text.Word2Id.START"]], "sampler (class in omnixai.sampler.tabular)": [[25, "omnixai.sampler.tabular.Sampler"]], "scale (class in omnixai.preprocessing.image)": [[25, "omnixai.preprocessing.image.Scale"]], "scale (class in omnixai.preprocessing.normalize)": [[25, "omnixai.preprocessing.normalize.Scale"]], "standard (class in omnixai.preprocessing.normalize)": [[25, "omnixai.preprocessing.normalize.Standard"]], "tabulartransform (class in omnixai.preprocessing.tabular)": [[25, "omnixai.preprocessing.tabular.TabularTransform"]], "tfidf (class in omnixai.preprocessing.text)": [[25, "omnixai.preprocessing.text.Tfidf"]], "transformbase (class in omnixai.preprocessing.base)": [[25, "omnixai.preprocessing.base.TransformBase"]], "unk (omnixai.preprocessing.text.word2id attribute)": [[25, "omnixai.preprocessing.text.Word2Id.UNK"]], "word2id (class in omnixai.preprocessing.text)": [[25, "omnixai.preprocessing.text.Word2Id"]], "categories (omnixai.preprocessing.encode.labelencoder property)": [[25, "omnixai.preprocessing.encode.LabelEncoder.categories"]], "categories (omnixai.preprocessing.encode.onehot property)": [[25, "omnixai.preprocessing.encode.OneHot.categories"]], "categories (omnixai.preprocessing.encode.ordinal property)": [[25, "omnixai.preprocessing.encode.Ordinal.categories"]], "categories (omnixai.preprocessing.tabular.tabulartransform property)": [[25, "omnixai.preprocessing.tabular.TabularTransform.categories"]], "class_names (omnixai.preprocessing.tabular.tabulartransform property)": [[25, "omnixai.preprocessing.tabular.TabularTransform.class_names"]], "decompose() (omnixai.preprocessing.tabular.tabulartransform method)": [[25, "omnixai.preprocessing.tabular.TabularTransform.decompose"]], "dump() (omnixai.preprocessing.pipeline.pipeline method)": [[25, "omnixai.preprocessing.pipeline.Pipeline.dump"]], "fit() (omnixai.preprocessing.base.identity method)": [[25, "omnixai.preprocessing.base.Identity.fit"]], "fit() (omnixai.preprocessing.base.transformbase method)": [[25, "omnixai.preprocessing.base.TransformBase.fit"]], "fit() (omnixai.preprocessing.encode.kbins method)": [[25, "omnixai.preprocessing.encode.KBins.fit"]], "fit() (omnixai.preprocessing.encode.labelencoder method)": [[25, "omnixai.preprocessing.encode.LabelEncoder.fit"]], "fit() (omnixai.preprocessing.encode.onehot method)": [[25, "omnixai.preprocessing.encode.OneHot.fit"]], "fit() (omnixai.preprocessing.encode.ordinal method)": [[25, "omnixai.preprocessing.encode.Ordinal.fit"]], "fit() (omnixai.preprocessing.fill.fillnan method)": [[25, "omnixai.preprocessing.fill.FillNaN.fit"]], "fit() (omnixai.preprocessing.fill.fillnantabular method)": [[25, "omnixai.preprocessing.fill.FillNaNTabular.fit"]], "fit() (omnixai.preprocessing.image.normalize method)": [[25, "omnixai.preprocessing.image.Normalize.fit"]], "fit() (omnixai.preprocessing.image.resize method)": [[25, "omnixai.preprocessing.image.Resize.fit"]], "fit() (omnixai.preprocessing.image.round2int method)": [[25, "omnixai.preprocessing.image.Round2Int.fit"]], "fit() (omnixai.preprocessing.image.scale method)": [[25, "omnixai.preprocessing.image.Scale.fit"]], "fit() (omnixai.preprocessing.normalize.minmax method)": [[25, "omnixai.preprocessing.normalize.MinMax.fit"]], "fit() (omnixai.preprocessing.normalize.scale method)": [[25, "omnixai.preprocessing.normalize.Scale.fit"]], "fit() (omnixai.preprocessing.normalize.standard method)": [[25, "omnixai.preprocessing.normalize.Standard.fit"]], "fit() (omnixai.preprocessing.pipeline.pipeline method)": [[25, "omnixai.preprocessing.pipeline.Pipeline.fit"]], "fit() (omnixai.preprocessing.tabular.tabulartransform method)": [[25, "omnixai.preprocessing.tabular.TabularTransform.fit"]], "fit() (omnixai.preprocessing.text.tfidf method)": [[25, "omnixai.preprocessing.text.Tfidf.fit"]], "fit() (omnixai.preprocessing.text.word2id method)": [[25, "omnixai.preprocessing.text.Word2Id.fit"]], "get_feature_names() (omnixai.preprocessing.encode.onehot method)": [[25, "omnixai.preprocessing.encode.OneHot.get_feature_names"]], "get_feature_names() (omnixai.preprocessing.tabular.tabulartransform method)": [[25, "omnixai.preprocessing.tabular.TabularTransform.get_feature_names"]], "get_feature_names() (omnixai.preprocessing.text.tfidf method)": [[25, "omnixai.preprocessing.text.Tfidf.get_feature_names"]], "invert() (omnixai.preprocessing.base.identity method)": [[25, "omnixai.preprocessing.base.Identity.invert"]], "invert() (omnixai.preprocessing.base.transformbase method)": [[25, "omnixai.preprocessing.base.TransformBase.invert"]], "invert() (omnixai.preprocessing.encode.kbins method)": [[25, "omnixai.preprocessing.encode.KBins.invert"]], "invert() (omnixai.preprocessing.encode.labelencoder method)": [[25, "omnixai.preprocessing.encode.LabelEncoder.invert"]], "invert() (omnixai.preprocessing.encode.onehot method)": [[25, "omnixai.preprocessing.encode.OneHot.invert"]], "invert() (omnixai.preprocessing.encode.ordinal method)": [[25, "omnixai.preprocessing.encode.Ordinal.invert"]], "invert() (omnixai.preprocessing.fill.fillnan method)": [[25, "omnixai.preprocessing.fill.FillNaN.invert"]], "invert() (omnixai.preprocessing.fill.fillnantabular method)": [[25, "omnixai.preprocessing.fill.FillNaNTabular.invert"]], "invert() (omnixai.preprocessing.image.normalize method)": [[25, "omnixai.preprocessing.image.Normalize.invert"]], "invert() (omnixai.preprocessing.image.resize method)": [[25, "omnixai.preprocessing.image.Resize.invert"]], "invert() (omnixai.preprocessing.image.round2int method)": [[25, "omnixai.preprocessing.image.Round2Int.invert"]], "invert() (omnixai.preprocessing.image.scale method)": [[25, "omnixai.preprocessing.image.Scale.invert"]], "invert() (omnixai.preprocessing.normalize.minmax method)": [[25, "omnixai.preprocessing.normalize.MinMax.invert"]], "invert() (omnixai.preprocessing.normalize.scale method)": [[25, "omnixai.preprocessing.normalize.Scale.invert"]], "invert() (omnixai.preprocessing.normalize.standard method)": [[25, "omnixai.preprocessing.normalize.Standard.invert"]], "invert() (omnixai.preprocessing.pipeline.pipeline method)": [[25, "omnixai.preprocessing.pipeline.Pipeline.invert"]], "invert() (omnixai.preprocessing.tabular.tabulartransform method)": [[25, "omnixai.preprocessing.tabular.TabularTransform.invert"]], "invert() (omnixai.preprocessing.text.tfidf method)": [[25, "omnixai.preprocessing.text.Tfidf.invert"]], "invert() (omnixai.preprocessing.text.word2id method)": [[25, "omnixai.preprocessing.text.Word2Id.invert"]], "load() (omnixai.preprocessing.pipeline.pipeline method)": [[25, "omnixai.preprocessing.pipeline.Pipeline.load"]], "name (omnixai.preprocessing.pipeline.pipeline attribute)": [[25, "omnixai.preprocessing.pipeline.Pipeline.name"]], "omnixai.preprocessing": [[25, "module-omnixai.preprocessing"]], "omnixai.preprocessing.base": [[25, "module-omnixai.preprocessing.base"]], "omnixai.preprocessing.encode": [[25, "module-omnixai.preprocessing.encode"]], "omnixai.preprocessing.fill": [[25, "module-omnixai.preprocessing.fill"]], "omnixai.preprocessing.image": [[25, "module-omnixai.preprocessing.image"]], "omnixai.preprocessing.normalize": [[25, "module-omnixai.preprocessing.normalize"]], "omnixai.preprocessing.pipeline": [[25, "module-omnixai.preprocessing.pipeline"]], "omnixai.preprocessing.tabular": [[25, "module-omnixai.preprocessing.tabular"]], "omnixai.preprocessing.text": [[25, "module-omnixai.preprocessing.text"]], "omnixai.sampler.tabular": [[25, "module-omnixai.sampler.tabular"]], "oversample() (omnixai.sampler.tabular.sampler static method)": [[25, "omnixai.sampler.tabular.Sampler.oversample"]], "step() (omnixai.preprocessing.pipeline.pipeline method)": [[25, "omnixai.preprocessing.pipeline.Pipeline.step"]], "subsample() (omnixai.sampler.tabular.sampler static method)": [[25, "omnixai.sampler.tabular.Sampler.subsample"]], "transform() (omnixai.preprocessing.base.identity method)": [[25, "omnixai.preprocessing.base.Identity.transform"]], "transform() (omnixai.preprocessing.base.transformbase method)": [[25, "omnixai.preprocessing.base.TransformBase.transform"]], "transform() (omnixai.preprocessing.encode.kbins method)": [[25, "omnixai.preprocessing.encode.KBins.transform"]], "transform() (omnixai.preprocessing.encode.labelencoder method)": [[25, "omnixai.preprocessing.encode.LabelEncoder.transform"]], "transform() (omnixai.preprocessing.encode.onehot method)": [[25, "omnixai.preprocessing.encode.OneHot.transform"]], "transform() (omnixai.preprocessing.encode.ordinal method)": [[25, "omnixai.preprocessing.encode.Ordinal.transform"]], "transform() (omnixai.preprocessing.fill.fillnan method)": [[25, "omnixai.preprocessing.fill.FillNaN.transform"]], "transform() (omnixai.preprocessing.fill.fillnantabular method)": [[25, "omnixai.preprocessing.fill.FillNaNTabular.transform"]], "transform() (omnixai.preprocessing.image.normalize method)": [[25, "omnixai.preprocessing.image.Normalize.transform"]], "transform() (omnixai.preprocessing.image.resize method)": [[25, "omnixai.preprocessing.image.Resize.transform"]], "transform() (omnixai.preprocessing.image.round2int method)": [[25, "omnixai.preprocessing.image.Round2Int.transform"]], "transform() (omnixai.preprocessing.image.scale method)": [[25, "omnixai.preprocessing.image.Scale.transform"]], "transform() (omnixai.preprocessing.normalize.minmax method)": [[25, "omnixai.preprocessing.normalize.MinMax.transform"]], "transform() (omnixai.preprocessing.normalize.scale method)": [[25, "omnixai.preprocessing.normalize.Scale.transform"]], "transform() (omnixai.preprocessing.normalize.standard method)": [[25, "omnixai.preprocessing.normalize.Standard.transform"]], "transform() (omnixai.preprocessing.pipeline.pipeline method)": [[25, "omnixai.preprocessing.pipeline.Pipeline.transform"]], "transform() (omnixai.preprocessing.tabular.tabulartransform method)": [[25, "omnixai.preprocessing.tabular.TabularTransform.transform"]], "transform() (omnixai.preprocessing.text.tfidf method)": [[25, "omnixai.preprocessing.text.Tfidf.transform"]], "transform() (omnixai.preprocessing.text.word2id method)": [[25, "omnixai.preprocessing.text.Word2Id.transform"]], "undersample() (omnixai.sampler.tabular.sampler static method)": [[25, "omnixai.sampler.tabular.Sampler.undersample"]], "vocab_size (omnixai.preprocessing.text.word2id property)": [[25, "omnixai.preprocessing.text.Word2Id.vocab_size"]], "dashboard (class in omnixai.visualization.dashboard)": [[26, "omnixai.visualization.dashboard.Dashboard"]], "omnixai.visualization": [[26, "module-omnixai.visualization"]], "omnixai.visualization.dashboard": [[26, "module-omnixai.visualization.dashboard"]], "show() (omnixai.visualization.dashboard.dashboard method)": [[26, "omnixai.visualization.dashboard.Dashboard.show"]]}})