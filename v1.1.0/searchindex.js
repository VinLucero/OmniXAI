Search.setIndex({"docnames": ["index", "omnixai", "omnixai.data", "omnixai.explainers", "omnixai.explainers.data", "omnixai.explainers.nlp", "omnixai.explainers.nlp.agnostic", "omnixai.explainers.nlp.counterfactual", "omnixai.explainers.nlp.specific", "omnixai.explainers.prediction", "omnixai.explainers.tabular", "omnixai.explainers.tabular.agnostic", "omnixai.explainers.tabular.counterfactual", "omnixai.explainers.tabular.specific", "omnixai.explainers.timeseries", "omnixai.explainers.timeseries.agnostic", "omnixai.explainers.timeseries.counterfactual", "omnixai.explainers.vision", "omnixai.explainers.vision.agnostic", "omnixai.explainers.vision.counterfactual", "omnixai.explainers.vision.specific", "omnixai.explanations", "omnixai.explanations.image", "omnixai.explanations.tabular", "omnixai.explanations.text", "omnixai.explanations.timeseries", "omnixai.preprocessing", "omnixai.visualization", "tutorials", "tutorials/data_analysis", "tutorials/misc/data_objects", "tutorials/misc/preprocessing", "tutorials/nlp", "tutorials/nlp/ce_classification", "tutorials/nlp/ce_qa", "tutorials/nlp/ig_tf", "tutorials/nlp/ig_torch", "tutorials/nlp/l2x", "tutorials/nlp/lime", "tutorials/nlp/shap", "tutorials/nlp_imdb", "tutorials/omnixai_in_ml_workflow", "tutorials/tabular/ale", "tutorials/tabular/ce", "tutorials/tabular/gpt", "tutorials/tabular/l2x", "tutorials/tabular/lime", "tutorials/tabular/linear", "tutorials/tabular/mace", "tutorials/tabular/pdp", "tutorials/tabular/ranking", "tutorials/tabular/sensitivity", "tutorials/tabular/shap", "tutorials/tabular/tree", "tutorials/tabular_classification", "tutorials/tabular_regression", "tutorials/timeseries", "tutorials/timeseries/mace", "tutorials/timeseries/shap", "tutorials/vision", "tutorials/vision/ce_imagenet", "tutorials/vision/ce_tf", "tutorials/vision/ce_torch", "tutorials/vision/cem_tf", "tutorials/vision/cem_torch", "tutorials/vision/feature_map_tf", "tutorials/vision/feature_map_torch", "tutorials/vision/feature_visualization_tf", "tutorials/vision/feature_visualization_torch", "tutorials/vision/gradcam_tf", "tutorials/vision/gradcam_torch", "tutorials/vision/gradcam_vlm", "tutorials/vision/ig_tf", "tutorials/vision/ig_torch", "tutorials/vision/ig_vlm", "tutorials/vision/l2x", "tutorials/vision/lime", "tutorials/vision/shap"], "filenames": ["index.rst", "omnixai.rst", "omnixai.data.rst", "omnixai.explainers.rst", "omnixai.explainers.data.rst", "omnixai.explainers.nlp.rst", "omnixai.explainers.nlp.agnostic.rst", "omnixai.explainers.nlp.counterfactual.rst", "omnixai.explainers.nlp.specific.rst", "omnixai.explainers.prediction.rst", "omnixai.explainers.tabular.rst", "omnixai.explainers.tabular.agnostic.rst", "omnixai.explainers.tabular.counterfactual.rst", "omnixai.explainers.tabular.specific.rst", "omnixai.explainers.timeseries.rst", "omnixai.explainers.timeseries.agnostic.rst", "omnixai.explainers.timeseries.counterfactual.rst", "omnixai.explainers.vision.rst", "omnixai.explainers.vision.agnostic.rst", "omnixai.explainers.vision.counterfactual.rst", "omnixai.explainers.vision.specific.rst", "omnixai.explanations.rst", "omnixai.explanations.image.rst", "omnixai.explanations.tabular.rst", "omnixai.explanations.text.rst", "omnixai.explanations.timeseries.rst", "omnixai.preprocessing.rst", "omnixai.visualization.rst", "tutorials.rst", "tutorials/data_analysis.ipynb", "tutorials/misc/data_objects.ipynb", "tutorials/misc/preprocessing.ipynb", "tutorials/nlp.ipynb", "tutorials/nlp/ce_classification.ipynb", "tutorials/nlp/ce_qa.ipynb", "tutorials/nlp/ig_tf.ipynb", "tutorials/nlp/ig_torch.ipynb", "tutorials/nlp/l2x.ipynb", "tutorials/nlp/lime.ipynb", "tutorials/nlp/shap.ipynb", "tutorials/nlp_imdb.ipynb", "tutorials/omnixai_in_ml_workflow.ipynb", "tutorials/tabular/ale.ipynb", "tutorials/tabular/ce.ipynb", "tutorials/tabular/gpt.ipynb", "tutorials/tabular/l2x.ipynb", "tutorials/tabular/lime.ipynb", "tutorials/tabular/linear.ipynb", "tutorials/tabular/mace.ipynb", "tutorials/tabular/pdp.ipynb", "tutorials/tabular/ranking.ipynb", "tutorials/tabular/sensitivity.ipynb", "tutorials/tabular/shap.ipynb", "tutorials/tabular/tree.ipynb", "tutorials/tabular_classification.ipynb", "tutorials/tabular_regression.ipynb", "tutorials/timeseries.ipynb", "tutorials/timeseries/mace.ipynb", "tutorials/timeseries/shap.ipynb", "tutorials/vision.ipynb", "tutorials/vision/ce_imagenet.ipynb", "tutorials/vision/ce_tf.ipynb", "tutorials/vision/ce_torch.ipynb", "tutorials/vision/cem_tf.ipynb", "tutorials/vision/cem_torch.ipynb", "tutorials/vision/feature_map_tf.ipynb", "tutorials/vision/feature_map_torch.ipynb", "tutorials/vision/feature_visualization_tf.ipynb", "tutorials/vision/feature_visualization_torch.ipynb", "tutorials/vision/gradcam_tf.ipynb", "tutorials/vision/gradcam_torch.ipynb", "tutorials/vision/gradcam_vlm.ipynb", "tutorials/vision/ig_tf.ipynb", "tutorials/vision/ig_torch.ipynb", "tutorials/vision/ig_vlm.ipynb", "tutorials/vision/l2x.ipynb", "tutorials/vision/lime.ipynb", "tutorials/vision/shap.ipynb"], "titles": ["Welcome to OmniXAI\u2019s documentation!", "OmniXAI: An Explanation Toolbox", "omnixai.data package", "omnixai.explainers package", "omnixai.explainers.data package", "omnixai.explainers.nlp package", "omnixai.explainers.nlp.agnostic package", "omnixai.explainers.nlp.counterfactual package", "omnixai.explainers.nlp.specific package", "omnixai.explainers.prediction package", "omnixai.explainers.tabular package", "omnixai.explainers.tabular.agnostic package", "omnixai.explainers.tabular.counterfactual package", "omnixai.explainers.tabular.specific package", "omnixai.explainers.timeseries package", "omnixai.explainers.timeseries.agnostic package", "omnixai.explainers.timeseries.counterfactual package", "omnixai.explainers.vision package", "omnixai.explainers.vision.agnostic package", "omnixai.explainers.vision.counterfactual package", "omnixai.explainers.vision.specific package", "omnixai.explanations package", "omnixai.explanations.image package", "omnixai.explanations.tabular package", "omnixai.explanations.text package", "omnixai.explanations.timeseries package", "omnixai.preprocessing package", "omnixai.visualization package", "Tutorials &amp; Example Code", "DataAnalyzer for feature analysis", "Examples of data objects", "Examples of data preprocessing", "NLPExplainer for sentiment analysis", "Counterfactual explanation for text classification", "Counterfactual explanation for question answering", "Integrated-gradient on IMDB dataset (Tensorflow)", "Integrated-gradient on IMDB dataset (PyTorch)", "L2X (learning to explain) for text classification", "LIME for text classification", "SHAP for sentiment analysis", "NLPExplainer on IMDB dataset", "OmniXAI in a ML workflow", "Accumulated local effects (ALE)", "Counterfactual explanation on Diabetes dataset", "GPT explainer for income prediction", "L2X (learning to explain) for income prediction", "LIME for income prediction", "Logistic regression for income prediction", "MACE counterfactual explanation for income prediction", "Paritial dependence plots", "Learning to Rank Expanations Demo", "Morris sensitivity analysis", "SHAP for income prediction", "Decision tree for income prediction", "TabularExplainer for income prediction (classification)", "TabularExplainer for house-price prediction (regression)", "TimeseriesExplainer for time series anomaly detection", "Counterfactual explanation on time series anomaly detection", "SHAP for time series anomaly detection", "VisionExplainer for image classification", "Counterfactual explanation on ImageNet", "Counterfactual explanation on MNIST (Tensorflow)", "Counterfactual explanation on MNIST (PyTorch)", "Contrastive explanation on MNIST (Tensorflow)", "Contrastive explanation on MNIST (PyTorch)", "Feature map visualization (Tensorflow)", "Feature map visualization (PyTorch)", "Feature visualization (Tensorflow)", "Feature visualization (PyTorch)", "Grad-CAM for image classification (Tensorflow)", "Grad-CAM for image classification (PyTorch)", "Grad-CAM for visual language tasks", "Integrated-gradient for image classification (Tensorflow)", "Integrated-gradient for image classification (PyTorch)", "Integrated-gradient for visual language tasks", "L2X (learning to explain) on MNIST", "LIME for image classification", "SHAP on MNIST"], "terms": {"short": [0, 1], "omni": [0, 1], "explain": [0, 1, 2, 22, 23, 24, 25, 27, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77], "ai": [0, 1, 2], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "python": [0, 1, 50, 71, 74, 77], "librari": [0, 2, 6, 29, 30, 31, 33, 34, 39, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 65, 71, 74], "xai": [0, 1], "offer": [0, 1, 37], "wai": [0, 1, 3, 26, 37, 50], "interpret": [0, 1, 6, 11, 18, 37, 45, 75], "machin": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 18, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 75, 76], "learn": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 28, 32, 38, 40, 41, 42, 43, 44, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 76], "address": [0, 1], "mani": [0, 1, 37], "pain": [0, 1], "point": [0, 1, 37, 56, 57, 58], "decis": [0, 1, 12, 13, 19, 23, 28, 43, 60, 61, 62], "made": [0, 1, 37], "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "practic": [0, 1, 3, 54, 55, 56, 59], "aim": [0, 1], "one": [0, 1, 2, 3, 6, 15, 16, 21, 22, 23, 24, 25, 26, 30, 31, 32, 37, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 69, 70, 72, 73, 75, 76, 77], "stop": [0, 1], "comprehens": [0, 1], "make": [0, 1, 26, 37, 41, 56], "easi": [0, 1, 32, 40, 54, 55, 56, 59], "data": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77], "scientist": [0, 1], "ml": [0, 1, 3, 4, 9, 13, 28, 29, 32, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 77], "research": [0, 1, 71, 74], "practition": [0, 1], "who": [0, 1, 37], "need": [0, 1, 2, 3, 30, 32, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77], "explan": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "variou": [0, 1], "type": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 35, 36, 37, 40, 42, 43, 44, 45, 46, 49, 50, 52, 54, 55, 56, 58, 59, 67, 68, 69, 70, 72, 73, 75], "method": [0, 4, 7, 18, 20, 22, 23, 26, 30, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 62, 63, 64, 67, 68, 72, 73, 75, 77], "differ": [0, 4, 5, 10, 12, 14, 17, 29, 37, 41, 42, 44, 45, 46, 48, 49, 52, 54, 55, 67, 68, 75], "stage": [0, 1, 41, 44], "process": [0, 1, 3, 8, 9, 13, 19, 20, 26, 32, 35, 36, 40, 50, 54, 55, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 77], "includ": [0, 1, 2, 19, 20, 26, 59], "rich": [0, 1], "famili": [0, 1, 41, 44, 46, 48, 52, 54], "integr": [0, 1, 8, 13, 20, 22, 28, 32, 40, 59], "unifi": [0, 1, 3, 32, 40, 54, 55, 56, 59], "interfac": [0, 1, 3, 32, 37, 40, 45, 54, 55, 56, 59, 75], "which": [0, 1, 2, 3, 5, 8, 9, 10, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 77], "support": [0, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 17, 18, 20, 30, 31, 32, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 76, 77], "multipl": [0, 1, 2, 3, 4, 5, 10, 14, 17, 26, 29, 37, 41, 45, 54, 55, 67, 68, 75], "tabular": [0, 1, 3, 4, 9, 21, 29, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "imag": [0, 1, 3, 12, 13, 17, 18, 19, 20, 21, 28, 37, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 77], "text": [0, 1, 3, 5, 6, 7, 8, 21, 23, 28, 32, 34, 35, 36, 39, 40, 44, 50, 71, 74], "time": [0, 1, 2, 3, 4, 5, 10, 14, 15, 16, 17, 25, 28, 29, 37, 41, 44], "seri": [0, 1, 2, 3, 14, 15, 16, 25, 28], "tradit": [0, 1], "scikit": [0, 1, 3, 5, 9, 10, 11, 13, 14, 17, 32, 40, 49, 54, 55, 59], "deep": [0, 1, 20, 65, 69, 70], "pytorch": [0, 1, 3, 6, 11, 18, 28, 32, 37, 40, 45, 54, 55, 59, 71, 74, 75, 77], "tensorflow": [0, 1, 3, 5, 9, 10, 14, 17, 28, 32, 40, 43, 50, 54, 55, 59, 68, 77], "rang": [0, 1, 19, 20, 26, 35, 36, 40, 59, 60, 62, 64, 65, 67, 68, 69, 70, 72, 73, 75, 76], "divers": [0, 1, 48], "specif": [0, 1, 3, 5, 9, 10, 14, 17, 21, 22, 23, 24, 25, 32, 35, 36, 40, 41, 44, 53, 54, 55, 56, 59, 65, 66, 67, 68, 69, 70, 71, 74], "agnost": [0, 1, 3, 5, 10, 12, 14, 16, 17, 36, 37, 40, 45, 46, 48, 50, 52, 75, 77], "attribut": [0, 1, 71, 74], "counterfactu": [0, 1, 5, 10, 14, 17, 21, 28, 32, 40, 41, 44, 56, 59], "gradient": [0, 1, 8, 12, 13, 16, 19, 20, 22, 28, 32, 37, 40, 59, 69, 70, 71, 75], "base": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 32, 33, 34, 37, 39, 44, 50, 51, 53, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 74, 75], "etc": [0, 1], "For": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 18, 20, 21, 23, 24, 26, 29, 30, 31, 35, 36, 37, 38, 41, 45, 47, 49, 53, 54, 55, 59, 67, 68, 71, 74, 75, 76], "provid": [0, 1, 2, 3, 21, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 47, 53, 54, 55, 56, 59, 65, 66], "an": [0, 2, 3, 4, 6, 11, 12, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "us": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "gener": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 37, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 75, 77], "applic": [0, 1, 50, 65, 67, 69, 72], "onli": [0, 1, 2, 3, 4, 6, 9, 11, 12, 13, 18, 19, 20, 26, 29, 30, 32, 33, 34, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "write": [0, 1, 37, 38], "few": [0, 1], "line": [0, 1, 37, 38, 56], "code": [0, 1, 59, 61, 62, 63, 64, 69, 70, 72, 73, 75, 76, 77], "also": [0, 1, 2, 30, 37, 44, 50, 59, 66, 67, 68], "gui": [0, 1], "dashboard": [0, 3, 29, 32, 40, 41, 54, 55, 56, 59], "visual": [0, 3, 20, 21, 28, 29, 32, 40, 41, 43, 50, 54, 55, 56, 59, 69, 70], "obtain": [0, 1, 37], "more": [0, 3, 11, 12, 15, 16, 26, 29, 37, 38, 41, 45, 49, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 75], "insight": [0, 1], "about": [0, 1, 3, 37], "compar": [0, 13, 18, 20], "other": [0, 1, 29, 31, 37, 41, 42, 43, 44, 45, 46, 48, 49, 52, 54, 55, 65, 66, 67, 68, 75], "exist": [0, 1, 26, 37, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "ibm": 0, "aix360": 0, "microsoft": 0, "interpretml": 0, "alibi": 0, "explainx": 0, "our": [0, 37, 48, 50, 57], "ha": [0, 1, 2, 3, 7, 22, 23, 24, 25, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 71, 74, 77], "list": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 30, 50, 51, 55, 56, 57, 58, 67, 68], "uniqu": 0, "follow": [0, 1, 2, 3, 22, 23, 24, 25, 26, 30, 32, 35, 36, 37, 38, 40, 42, 44, 45, 46, 48, 49, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77], "analysi": [0, 1, 3, 4, 9, 11, 23, 27, 28, 33, 41, 54, 55, 59], "explor": [0, 1, 29, 50], "analyz": [0, 1, 4, 9, 29, 37, 41, 50, 51, 54, 55, 65, 66, 67, 68], "correl": [0, 1, 3, 21, 29, 41, 50], "check": [0, 4, 41, 50, 69, 72, 76], "imbal": [0, 1, 3, 21, 26, 29, 41], "issu": [0, 37, 41], "most": [0, 1, 12, 41, 44, 56, 66], "popular": 0, "aspect": 0, "inform": [0, 1, 3, 4, 6, 11, 12, 18, 23, 25, 29, 37, 41, 43, 45, 49, 67, 68, 75], "chang": [0, 18, 44, 48, 75], "current": [0, 26, 32, 40, 59, 66], "predict": [0, 1, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 49, 50, 51, 57, 58, 59, 62, 64, 69, 72, 75, 76], "grad": [0, 1, 3, 17, 20, 22, 28, 35, 41, 44, 46, 48, 52, 54, 59], "cam": [0, 1, 3, 17, 20, 22, 28, 59], "its": [0, 1, 3, 10, 11, 12, 13, 18, 30, 32, 35, 36, 40, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55, 59, 60, 61, 62, 63, 64, 69, 70, 72, 73, 75, 77], "variant": 0, "timeseri": [0, 1, 3, 21, 30, 56, 57, 58], "A": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 37, 38, 39, 40, 41, 45, 50, 56, 57, 58, 59, 60, 70, 71, 74, 75], "much": [0, 34, 37], "simpler": [0, 37], "user": [0, 1, 3, 4, 5, 9, 10, 14, 17, 32, 34, 40, 50, 54, 55, 56, 59], "examin": [0, 41], "extend": [0, 37], "ad": 0, "new": [0, 1, 2, 18, 26, 37, 68, 71, 74], "algorithm": [0, 50], "easili": [0, 30, 34], "implement": [0, 1, 7, 12, 20, 27, 33, 34, 37, 45, 75], "singl": [0, 2, 3, 26, 30, 31], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 59, 60, 62, 64, 69, 70, 71, 72, 73, 74, 75, 76], "deriv": [0, 3, 4, 5, 10, 14, 17, 26, 29], "from": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 17, 18, 20, 21, 22, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "show": [0, 1, 3, 21, 22, 23, 24, 27, 29, 30, 32, 33, 35, 36, 39, 40, 41, 49, 51, 54, 55, 56, 59], "we": [0, 1, 2, 3, 29, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "continu": [0, 1, 2, 4, 10, 11, 12, 13, 26, 30, 31, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55], "improv": [0, 20], "thi": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "futur": [0, 68], "e": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77], "g": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77], "vision": [0, 1, 3, 22, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "nlp": [0, 1, 3, 24, 32, 33, 34, 35, 36, 37, 38, 39, 40], "task": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 73, 75, 76, 77], "eda": 0, "na": [0, 37], "global": [0, 1, 3, 4, 11, 13, 23, 27, 29, 32, 40, 41, 47, 49, 51, 53, 54, 55, 59], "select": [0, 1, 2, 6, 11, 18, 29, 41, 59], "metric": [0, 1, 2, 9, 30, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 52, 54, 55, 56, 61, 63, 77], "black": [0, 1, 3, 5, 9, 10, 12, 14, 17, 19, 32, 41, 43, 44, 46, 48, 52, 54, 55, 56, 59, 60, 61, 62], "box": [0, 1, 3, 5, 9, 10, 12, 14, 17, 19, 32, 43, 48, 54, 55, 56, 59, 60, 61, 62], "partial": [0, 1, 11, 18, 23, 43, 49, 54, 55], "depend": [0, 1, 11, 18, 23, 28, 37, 45, 54, 55, 75], "sensit": [0, 1, 10, 21, 28, 55], "lime": [0, 1, 3, 5, 10, 17, 22, 28, 32, 40, 41, 45, 54, 55, 59], "local": [0, 1, 3, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 23, 27, 28, 32, 40, 41, 45, 46, 47, 48, 52, 53, 54, 55, 56, 58, 59, 69, 70], "shap": [0, 1, 3, 5, 10, 13, 14, 17, 22, 28, 32, 41, 44, 45, 54, 55, 56], "torch": [0, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 35, 36, 40, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "tf": [0, 1, 8, 12, 13, 18, 19, 20, 26, 31, 35, 36, 37, 38, 43, 50, 60, 61, 62, 63, 64, 65, 69, 70, 72, 73, 77], "contrast": [0, 1, 20, 21, 28], "linear": [0, 1, 6, 10, 11, 21, 36, 40, 47, 53, 62, 64, 75], "tree": [0, 1, 13, 21, 28], "accept": 0, "transform": [0, 1, 3, 5, 6, 9, 10, 14, 17, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76], "between": [0, 4, 34, 37, 41], "toolkit": 0, "literatur": 0, "eli5": 0, "captum": 0, "l2x": [0, 5, 10, 17, 28, 36, 40], "you": [0, 1, 30, 33, 35, 36, 37, 39, 44, 50, 65, 66, 67, 68], "can": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 26, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "pypi": [0, 1], "call": [0, 1, 2, 29, 31, 32, 35, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 75, 77], "pip": [0, 1, 50], "mai": [0, 1, 2, 26, 30, 37, 41, 42, 44, 45, 46, 47, 48, 49, 52, 54, 65, 66, 67, 68, 75], "sourc": [0, 1], "clone": [0, 1], "repo": [0, 1], "navig": [0, 1], "root": [0, 1, 30, 62, 64, 75], "directori": [0, 1, 26], "edit": [0, 1], "mode": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 52, 54, 55, 56, 57, 58, 59, 69, 70, 72, 73, 75], "addit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 27, 29, 54, 55, 56], "plot": [0, 1, 11, 18, 21, 22, 23, 24, 25, 27, 28, 41, 45, 46, 48, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 75, 77], "To": [0, 1, 3, 29, 30, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77], "recommend": [0, 1, 3, 42, 44, 45, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 72, 73, 75, 76, 77], "link": [0, 1], "tutori": [0, 1, 3, 41], "exampl": [0, 2, 3, 4, 7, 12, 16, 22, 23, 25, 26, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "In": [0, 1, 3, 29, 30, 32, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 69, 70, 72, 73, 75, 77], "tabularexplain": [0, 1, 3, 4, 10, 11, 12, 13, 28, 32, 40, 41, 59], "visionexplain": [0, 1, 3, 17, 28], "nlpexplain": [0, 1, 3, 5, 28], "timeseriesexplain": [0, 1, 3, 14, 28], "respect": [0, 1, 2, 3, 4, 30, 56], "dataanalyz": [0, 1, 3, 4, 27, 28, 41], "predictionanalyz": [0, 1, 3, 9, 27, 41, 54, 55], "result": [0, 3, 4, 9, 19, 20, 22, 23, 24, 25, 27, 32, 34, 40, 41, 50, 54, 55, 56, 59], "specifi": [0, 1, 2, 3, 9, 26, 29, 30, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 65, 66, 67, 68, 75], "function": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "pre": [0, 1, 3, 8, 13, 20, 26, 35, 36], "convert": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 26, 30, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 76, 77], "raw": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 17, 18, 19, 20, 22, 23, 29, 30, 32, 35, 36, 40, 54, 55, 56, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 77], "input": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 32, 34, 35, 36, 40, 42, 43, 44, 45, 46, 48, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77], "post": [0, 1, 3, 37, 38], "option": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 22, 23, 24, 25, 34, 54, 55, 56, 59], "output": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "probabl": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 17, 18, 21, 32, 33, 37, 38, 40, 42, 44, 45, 46, 48, 49, 52, 54, 55, 59, 75, 76], "appli": [0, 1, 2, 3, 10, 11, 12, 13, 26, 29, 31, 32, 35, 36, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 69, 72, 76], "mace": [0, 1, 3, 10, 14, 28, 41, 44, 45, 54, 55, 56], "let": [0, 1, 31, 34, 37, 41, 50, 65, 66, 68, 69, 72, 76], "take": [0, 1, 30, 32, 37, 40, 42, 44, 45, 46, 48, 49, 52, 54, 55, 59, 60, 61, 62, 63, 64, 69, 70, 72, 73, 75, 77], "incom": [0, 1, 28, 29, 41, 42, 49], "dataset": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 18, 26, 27, 28, 29, 30, 31, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 75, 77], "http": [0, 1, 6, 7, 8, 11, 12, 13, 15, 18, 19, 20, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "archiv": [0, 1, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54], "ic": [0, 1, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54], "uci": [0, 1, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54], "edu": [0, 1, 29, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54], "adult": [0, 1, 3, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "repres": [0, 1, 2, 15, 16, 30, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77], "creat": [0, 1, 2, 3, 29, 30, 34, 37, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 65, 66], "instanc": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77], "given": [0, 1, 2, 3, 4, 10, 13, 26, 29, 30, 31, 32, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59], "panda": [0, 1, 2, 23, 25, 26, 29, 30, 31, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "datafram": [0, 1, 2, 11, 12, 13, 23, 25, 26, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "categor": [0, 1, 2, 4, 10, 11, 12, 13, 26, 29, 30, 31, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "name": [0, 1, 2, 3, 4, 5, 10, 14, 17, 21, 22, 23, 24, 26, 27, 29, 32, 35, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 69, 70, 72, 73, 75, 76], "target": [0, 1, 2, 4, 9, 10, 12, 13, 20, 26, 29, 30, 31, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75], "label": [0, 1, 2, 3, 6, 8, 9, 10, 11, 12, 13, 18, 20, 22, 23, 24, 26, 27, 29, 30, 31, 33, 35, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 69, 70, 72, 73, 75, 76], "column": [0, 1, 2, 3, 9, 23, 26, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "import": [0, 1, 2, 4, 6, 8, 11, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "load": [0, 1, 3, 21, 26, 29, 32, 34, 35, 36, 37, 38, 40, 41, 43, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77], "feature_nam": [0, 1, 3, 23, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "ag": [0, 1, 3, 4, 27, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54], "workclass": [0, 1, 3, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "fnlwgt": [0, 1, 3, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "educ": [0, 1, 3, 27, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "num": [0, 1, 3, 27, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "marit": [0, 1, 3, 27, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "statu": [0, 1, 3, 27, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "occup": [0, 1, 3, 27, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "relationship": [0, 1, 3, 10, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "race": [0, 1, 3, 10, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "sex": [0, 1, 3, 10, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "capit": [0, 1, 3, 10, 27, 29, 37, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "gain": [0, 1, 3, 4, 27, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "loss": [0, 1, 3, 6, 10, 11, 12, 16, 18, 19, 20, 27, 29, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 61, 62, 63, 64, 71, 74, 75, 77], "hour": [0, 1, 3, 27, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "per": [0, 1, 3, 12, 27, 29, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54], "week": [0, 1, 3, 27, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "countri": [0, 1, 3, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "df": [0, 1, 2, 30, 31, 41, 51, 54, 55, 56, 57, 58], "pd": [0, 1, 2, 11, 12, 13, 26, 30, 31, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "np": [0, 1, 2, 3, 10, 11, 12, 13, 16, 20, 26, 29, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 69, 71, 72, 74, 77], "genfromtxt": [0, 1, 3, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "delimit": [0, 1, 3, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "dtype": [0, 1, 3, 29, 35, 36, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 59, 60, 69, 70, 72, 73, 76], "tabular_data": [0, 1, 3, 26, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "categorical_column": [0, 1, 2, 3, 26, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "1": [0, 1, 2, 3, 12, 16, 17, 19, 20, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "3": [0, 1, 2, 3, 10, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "5": [0, 1, 3, 6, 7, 11, 12, 16, 18, 19, 20, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "6": [0, 1, 3, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 72, 74, 75, 77], "7": [0, 1, 3, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 71, 72, 74, 75, 76, 77], "8": [0, 1, 3, 10, 11, 13, 29, 30, 31, 35, 36, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 69, 75, 77], "9": [0, 1, 3, 23, 29, 30, 31, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 61, 62, 63, 64, 71, 74, 75, 76, 77], "13": [0, 1, 3, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 66], "target_column": [0, 1, 2, 3, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "packag": [0, 1, 31, 32, 35, 36, 37, 38, 40, 50, 51, 54, 55, 56, 59, 71, 74, 77], "preprocess": [0, 3, 5, 9, 10, 13, 14, 17, 18, 19, 20, 28, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77], "sever": [0, 1, 30, 31, 37, 41, 47, 53, 54, 55], "tabulartransform": [0, 1, 3, 26, 31, 41, 42, 44, 45, 46, 48, 49, 51, 52, 54, 55], "special": [0, 1, 16, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55], "design": [0, 16, 18, 32, 40, 42, 44, 45, 46, 48, 49, 52, 54, 55, 56, 59], "By": [0, 1, 42, 44, 45, 46, 48, 49, 52, 54, 55, 59], "default": [0, 1, 2, 6, 11, 12, 18, 29, 32, 33, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "hot": [0, 1, 26, 31, 42, 44, 45, 46, 48, 49, 52, 54, 55], "encod": [0, 1, 10, 13, 20, 31, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55, 71], "keep": [0, 1, 26, 42, 44, 45, 46, 48, 49, 52, 54, 55], "valu": [0, 1, 2, 3, 4, 6, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 26, 30, 31, 32, 33, 35, 36, 37, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 63, 71, 74, 75, 77], "numpi": [0, 1, 2, 9, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77], "arrai": [0, 1, 2, 9, 26, 29, 30, 31, 32, 33, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77], "If": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 26, 29, 30, 31, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55, 58, 60, 61, 62, 63, 64, 69, 70, 72, 73, 75, 76, 77], "last": [0, 1, 2, 3, 26, 29, 30, 31, 42, 44, 45, 46, 48, 49, 52, 54, 55, 59], "after": [0, 1, 37, 41, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55, 75, 77], "train": [0, 1, 3, 4, 5, 6, 10, 11, 12, 13, 14, 17, 18, 23, 26, 30, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 75, 77], "xgboost": [0, 1, 3, 13, 41, 42, 44, 45, 46, 48, 49, 52, 54], "classifi": [0, 1, 12, 13, 37, 38, 41, 42, 44, 45, 46, 48, 49, 52, 54], "fit": [0, 1, 3, 10, 13, 26, 31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 61, 63, 77], "class_nam": [0, 1, 10, 21, 22, 23, 24, 26, 27, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 52, 54, 59, 60, 62, 64, 69, 70, 72, 73, 75, 76], "x": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 62, 63, 64, 71, 74, 75, 77], "split": [0, 1, 2, 10, 13, 34, 56, 57, 58], "test": [0, 1, 9, 10, 13, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77], "train_label": [0, 1, 41, 42, 54, 61, 63, 75, 77], "test_label": [0, 1, 9, 41, 42, 54, 61, 63, 75, 77], "sklearn": [0, 1, 13, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "model_select": [0, 1, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55], "train_test_split": [0, 1, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55], "train_siz": [0, 1, 10, 13, 41, 42, 44, 45, 46, 48, 49, 51, 52, 54, 55], "0": [0, 1, 2, 3, 6, 10, 11, 12, 13, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77], "80": [0, 1, 41, 42, 44, 45, 46, 48, 49, 51, 52, 54, 55], "xgbclassifi": [0, 1, 3, 41, 42, 44, 45, 46, 48, 49, 52, 54], "n_estim": [0, 1, 3, 37, 38, 41, 42, 44, 45, 46, 48, 49, 51, 52, 54, 55], "300": [0, 1, 3, 41, 42, 44, 45, 46, 48, 49, 52, 54, 67, 68], "max_depth": [0, 1, 3, 41, 42, 44, 45, 46, 48, 49, 52, 53, 54], "back": [0, 1, 41, 44, 46, 50, 52, 54, 55], "train_data": [0, 1, 35, 36, 40, 41, 54, 55, 62, 64, 75], "invert": [0, 1, 26, 31, 41, 44, 46, 52, 54, 55], "test_data": [0, 1, 9, 30, 41, 54, 55, 62, 64, 75], "initi": [0, 1, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77], "set": [0, 1, 2, 11, 12, 16, 24, 27, 29, 30, 32, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77], "pdp": [0, 1, 3, 4, 10, 17, 21, 27, 41, 49, 54, 55], "too": [0, 1, 37, 42, 44, 46, 48, 49, 51, 52, 54, 55, 71, 74], "larg": [0, 1, 10, 11, 12, 13, 41, 42, 43, 44, 46, 48, 49, 51, 52, 54, 55], "subset": [0, 1, 2, 10, 11, 12, 13, 26, 30, 37, 38, 42, 43, 44, 46, 48, 49, 51, 52, 54, 55], "sampler": [0, 1, 10, 11, 12, 13, 42, 43, 44, 46, 48, 49, 51, 52, 54, 55], "subsampl": [0, 1, 10, 11, 12, 13, 26, 42, 43, 44, 46, 48, 49, 51, 52, 54, 55], "postprocess": [0, 1, 3, 5, 9, 10, 14, 17, 18, 32, 40, 54, 55, 56, 59], "form": [0, 1, 3, 5, 9, 10, 14, 17, 32, 40, 54, 55, 56, 59], "each": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 32, 40, 41, 44, 54, 55, 56, 57, 58, 59, 67, 68, 69, 72], "should": [0, 1, 2, 6, 9, 11, 12, 13, 15, 16, 18, 29, 35, 36, 37, 44, 45, 54, 55, 57, 58, 75], "classif": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 60, 61, 62, 63, 64, 75, 77], "regress": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 26, 28, 32, 35, 36, 37, 40, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 59, 69, 70, 72, 73, 75], "consum": [0, 1, 32, 40, 54, 55, 59, 60, 61, 62, 63, 64, 69, 70, 72, 73, 77], "simpli": [0, 1, 32, 40, 42, 44, 45, 46, 48, 49, 52, 54, 55, 59, 60, 61, 62, 63, 64, 77], "some": [0, 1, 3, 26, 30, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 52, 54, 55], "custom": [0, 1], "format": [0, 1, 2, 3, 7, 22, 23, 24, 25, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 59, 62, 64, 75], "lambda": [0, 1, 3, 32, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 66, 70, 71, 73, 74, 75, 77], "z": [0, 1, 3, 26, 31, 41, 42, 44, 45, 46, 48, 49, 51, 52, 54, 55, 71, 74], "some_transform": [0, 1, 54, 55], "to_pd": [0, 1, 2, 30, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55], "param": [0, 1, 3, 4, 5, 10, 14, 17, 27, 29, 40, 41, 54, 55, 56, 59], "ignored_featur": [0, 1, 3, 10, 12, 41, 48, 50, 54], "while": [0, 1, 41, 44, 54, 55], "return": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 33, 34, 35, 36, 40, 43, 50, 53, 54, 55, 56, 57, 58, 62, 64, 65, 69, 71, 72, 74, 75, 76], "three": [0, 1, 6, 11, 26, 30, 41, 54, 59], "explain_glob": [0, 1, 3, 10, 29, 41, 54, 55], "hide": [0, 1, 54, 55], "all": [0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 37, 40, 41, 43, 50, 54, 55, 56, 59], "detail": [0, 1, 3, 37, 45, 54, 55, 60, 61, 62, 63, 64, 75], "behind": [0, 1, 54, 55], "so": [0, 1, 37, 41, 43, 54, 55], "two": [0, 1, 2, 3, 29, 30, 31, 35, 36, 37, 40, 41, 43, 54, 55, 61, 62, 63, 64, 75, 77], "test_inst": [0, 1, 41, 44, 46, 48, 52, 54, 55, 56], "local_explan": [0, 1, 3, 5, 10, 14, 17, 27, 32, 40, 41, 54, 55, 56, 59], "global_explan": [0, 1, 3, 10, 27, 29, 41, 54, 55], "similarli": [0, 1, 50, 54, 55], "comput": [0, 1, 4, 9, 13, 16, 20, 31, 37, 41, 54, 55, 71, 74], "perform": [0, 1, 30, 33, 35, 36, 39, 40, 41, 54, 55, 62, 64, 65, 75], "test_target": [0, 1, 9, 41, 54, 55], "integ": [0, 1, 2, 9, 26, 29, 54], "labelencod": [0, 1, 9, 10, 13, 26, 31, 54], "match": [0, 1, 9, 26, 54], "prediction_explan": [0, 1, 9, 27, 41, 54, 55], "launch": [0, 1, 29, 32, 40, 41, 54, 55, 56, 59], "dash": [0, 1, 21, 22, 23, 24, 25, 27, 29, 32, 40, 41, 54, 55, 56, 59], "app": [0, 1, 29, 32, 40, 41, 54, 55, 56, 59], "open": [0, 1, 2, 12, 19, 26, 30, 31, 37, 43, 50, 59, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 76], "browser": [0, 1], "see": [0, 1, 37, 41, 50, 75], "thank": [0, 1, 37], "your": [0, 1, 37, 71, 74, 77], "interest": [0, 1, 37], "befor": [0, 1, 37], "run": [0, 1, 29, 32, 37, 40, 41, 44, 54, 55, 56, 59], "commit": [0, 1], "ensur": [0, 1], "file": [0, 1, 21, 26, 50], "ar": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 61, 63, 66, 75, 76, 77], "correctli": [0, 1], "contain": [0, 1, 2, 3, 4, 5, 9, 10, 12, 14, 17, 21, 23, 27, 30, 31, 37, 47, 54, 55, 56, 57, 58, 61, 62, 63, 64, 75, 77], "appropri": [0, 1, 65], "licens": [0, 1], "header": [0, 1], "whenev": [0, 1], "add": [0, 1, 22, 23, 24, 25, 26, 37, 43, 61, 63, 77], "step": [0, 1, 8, 13, 16, 20, 26, 35, 41, 43, 44, 59, 60, 61, 62, 63, 64, 67, 68, 75, 77], "below": [0, 1, 37], "choos": [0, 1, 3, 4, 5, 10, 14, 17, 29, 41, 65, 66, 67, 68], "script": [0, 1, 50], "folder": [0, 1], "put": [0, 1], "under": [0, 1, 26], "inherit": [0, 1, 3, 26], "explainerbas": [0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 15, 16, 18, 19, 20], "constructor": [0, 1, 3], "__init__": [0, 1, 3, 35, 36, 40, 62, 64, 71, 74, 75], "self": [0, 1, 2, 3, 26, 35, 36, 40, 41, 44, 46, 48, 52, 54, 62, 64, 71, 75], "predict_funct": [0, 1, 3, 6, 7, 9, 10, 11, 12, 15, 16, 18, 33, 34, 37, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 75, 76], "kwarg": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 36, 40, 44], "preprocess_funct": [0, 1, 3, 5, 8, 9, 10, 13, 14, 17, 18, 19, 20, 35, 36, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77], "postprocess_funct": [0, 1, 3, 5, 17], "requir": [0, 1, 3, 5, 17, 56], "whether": [0, 1, 2, 3, 16, 23, 37, 41, 56, 57, 58], "differenti": [0, 1, 3], "resiz": [0, 1, 3, 26, 31, 59, 60, 65, 66, 69, 70, 71, 72, 73, 74, 76], "224": [0, 1, 3, 30, 31, 59, 60, 65, 66, 67, 68, 69, 70, 72, 73, 76], "normal": [0, 1, 3, 10, 13, 31, 37, 42, 44, 45, 46, 48, 49, 52, 54, 55, 59, 60, 61, 63, 66, 70, 73, 76, 77], "pixel": [0, 1, 3, 18, 20, 22, 26, 31, 61, 63, 77], "logit": [0, 1, 3, 13, 35, 40, 45, 48, 59, 75, 76], "explanation_typ": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20], "string": [0, 1, 2, 3, 21, 30, 32], "both": [0, 1, 2, 3, 13, 23, 25, 30, 47, 53], "alia": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "where": [0, 1, 21, 23, 24, 25, 37, 48, 67, 68], "py": [0, 1, 50, 71, 74, 77], "regist": [0, 1, 3], "automat": [0, 1, 2, 3, 11, 12, 13], "via": [0, 1, 2, 4, 6, 11, 18, 20, 59, 60, 62, 64, 69, 70, 72, 73], "defin": [0, 1, 4, 30, 31, 43, 50, 59, 60, 62, 64, 70, 71, 73, 74, 75], "toolbox": 0, "modul": [0, 30, 35, 36, 40, 49, 55, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 77], "fill": [0, 1, 31], "pipelin": [0, 1, 6, 32, 33, 34, 39, 44, 50], "categori": [0, 1, 26, 37, 38], "basic": [0, 12, 16, 43], "object": [0, 2, 3, 10, 12, 13, 16, 20, 21, 26, 27, 28, 31, 32, 35, 36, 37, 38, 40, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 72, 73, 75, 77], "hous": [0, 28], "price": [0, 28], "sentiment": [0, 1, 28, 33, 35, 36, 40], "imdb": [0, 1, 28], "anomali": [0, 1, 15, 16, 28], "detect": [0, 1, 15, 16, 28], "workflow": [0, 28], "accumul": [0, 28], "effect": [0, 28], "al": [0, 7, 12, 16, 20, 28, 33, 34, 48, 69, 70], "diabet": [0, 28], "gpt": [0, 28], "logist": [0, 13, 28], "pariti": [0, 28, 50], "rank": [0, 28], "expan": [0, 28], "demo": [0, 28], "morri": [0, 11, 23, 28], "imagenet": [0, 1, 28, 59, 69, 70, 72, 73, 76], "mnist": [0, 18, 28, 30], "map": [0, 8, 11, 28, 35, 36], "languag": [0, 28, 37], "question": [0, 7, 28, 37], "answer": [0, 7, 28, 37], "index": [0, 1, 2, 13, 21, 22, 23, 24, 25, 27, 30, 34, 38, 41, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77], "search": [0, 18], "page": 0, "capabl": 1, "featur": [1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 69, 70, 72, 73, 77], "five": [1, 6], "kei": [1, 23, 44, 50], "subpackag": [1, 3], "simpl": [1, 11, 35, 36, 40, 50, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 75, 77], "pillow": [1, 2, 30, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77], "One": [1, 26, 31, 32, 37, 40, 45, 47, 59, 75], "ordin": [1, 10, 13, 26, 31], "kbin": [1, 26], "standard": [1, 10, 13, 23, 26, 31, 41, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55], "min": [1, 12, 26, 31, 35, 36, 40], "max": [1, 12, 26, 31, 35, 36, 40, 62, 64, 75], "rescal": [1, 19, 20, 26], "nan": [1, 26, 31], "recal": 1, "idf": [1, 26, 31, 37, 38], "token": [1, 2, 6, 8, 24, 30, 31, 34, 35, 36, 40, 71, 74], "id": [1, 6, 8, 21, 26, 31, 35, 36, 40], "combin": [1, 67, 68], "togeth": [1, 26, 37], "conveni": [1, 26], "particular": [1, 18, 37, 59], "main": [1, 26], "group": [1, 37, 50], "It": [1, 2, 3, 4, 5, 6, 11, 12, 13, 17, 19, 20, 22, 23, 24, 25, 26, 43, 59, 77], "further": [1, 41], "handl": [1, 13], "without": [1, 2, 12, 19, 37, 43, 60, 61, 62], "know": [1, 37], "either": [1, 2, 12, 13, 32, 40, 48], "feature_import": [1, 21], "store": [1, 2, 3, 22, 23, 24, 25, 26, 30, 59], "matplotlib": [1, 21, 22, 23, 24, 25, 61, 62, 63, 64, 77], "plotly_plot": [1, 21, 22, 23, 24, 25], "ipython_plot": [1, 21, 22, 23, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "ipython": [1, 21, 22, 23, 24, 25, 29, 32, 33, 34, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "word": [1, 6, 8, 24, 26, 32, 35, 36, 37, 40], "plotli": [1, 21, 22, 23, 24, 25, 27, 29, 32, 33, 34, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "figur": [1, 21, 22, 23, 24, 25, 27], "demonstr": [1, 65, 66, 67, 68], "architectur": 1, "four": [1, 29], "autoexplainerbas": [1, 3, 4, 5, 10, 14, 17, 29], "act": [1, 3, 32, 40, 54, 55, 56, 59], "factori": [1, 3, 32, 40, 54, 55, 56, 59], "": [1, 2, 6, 11, 18, 31, 32, 37, 41, 44, 45, 50, 56, 57, 58, 65, 66, 68, 69, 72, 75, 76], "next": [1, 37, 41], "resnet": [1, 3, 59, 60, 65, 67, 68, 70, 73], "arxiv": [1, 6, 11, 12, 18, 19, 20, 37, 43, 45, 50, 60, 61, 62, 63, 64, 69, 70, 75], "org": [1, 6, 11, 12, 18, 19, 20, 37, 43, 45, 49, 50, 55, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75], "ab": [1, 6, 11, 12, 18, 19, 20, 37, 43, 45, 50, 60, 61, 62, 63, 64, 69, 70, 75], "1512": 1, "03385": 1, "pretrain": [1, 3, 34, 59, 60, 66, 68, 70, 71, 73, 74, 76], "www": [1, 71, 74], "net": [1, 37], "here": [1, 7, 11, 30, 32, 37, 43, 54, 55, 56, 57, 58, 59, 60, 65, 66, 67, 68, 70, 73, 76], "sampl": [1, 6, 10, 11, 13, 16, 18, 20, 26, 35, 36, 40, 44, 50], "ig": [1, 3, 5, 10, 17, 35, 36, 40, 59, 74], "gradcam": [1, 3, 17, 59, 69, 70, 71], "2": [1, 23, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "resnet50": [1, 3, 59, 60, 66, 70], "layer": [1, 6, 8, 11, 20, 35, 36, 40, 43, 50, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77], "target_lay": [1, 3, 17, 20, 59, 65, 66, 67, 68, 69, 70, 71, 74], "layer4": [1, 3, 17, 59, 70], "test_img": [1, 61, 63, 75, 77], "y": [1, 6, 8, 11, 12, 13, 18, 20, 26, 31, 34, 36, 40, 43, 44, 62, 64, 69, 72, 75], "281": [1, 69, 72], "correspond": [1, 2, 6, 7, 9, 10, 11, 12, 15, 16, 18, 20, 22, 23, 24, 25, 27, 37, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 75, 76], "tiger_cat": [1, 69, 72], "top": [1, 6, 8, 11, 13, 18, 20, 69, 70, 72, 73, 76], "bull_mastiff": [1, 69, 72], "These": [1, 30, 47, 50, 53], "highlight": 1, "region": 1, "note": [1, 19, 20, 26, 35, 36, 37, 40, 41], "besid": [1, 30], "same": [1, 3, 4, 5, 10, 14, 17, 29, 35, 37, 41, 45, 75], "gradcam0": 1, "gradcam3": 1, "first": [1, 2, 8, 22, 23, 24, 25, 29, 30, 35, 36, 37, 40, 41, 45, 46, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 75, 77], "second": [1, 2, 30, 48, 67, 68], "consid": [1, 4, 32, 41, 43, 44, 50, 59, 60, 67, 68, 70, 73], "goal": [1, 50], "review": [1, 35, 36, 40], "posit": [1, 20, 22, 26, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 63, 64], "neg": [1, 4, 13, 20, 22, 32, 33, 35, 36, 39, 40, 41, 43, 44, 63, 64], "cnn": [1, 35, 36, 37, 40, 62, 64, 65, 66, 67, 68, 75], "suppos": [1, 30, 31, 37], "want": [1, 29, 30, 37, 42, 44, 45, 46, 48, 49, 52, 54, 55], "do": [1, 29, 31, 32, 34, 37, 40, 41, 42, 44, 45, 46, 48, 49, 52, 54, 55, 56, 59], "polyjuic": [1, 5, 32, 33, 34, 40], "embed": [1, 8, 11, 35, 36, 40, 50, 74], "embedding_lay": [1, 8, 35, 36, 40, 74], "id2token": [1, 8, 35, 36, 40], "id_to_token": 1, "wa": [1, 30, 32, 33, 35, 36, 37, 39, 40], "fantast": [1, 30, 33, 35, 36, 39, 40], "clearli": [1, 41], "largest": 1, "score": [1, 8, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 32, 33, 41, 44, 47, 50, 56, 57, 58, 61, 63, 77], "impli": [1, 15, 16, 41, 57, 58], "sentenc": [1, 2, 26, 30, 31, 35, 36, 37, 38, 40, 71, 74], "becaus": [1, 2, 9, 26, 29, 32, 37, 40, 41], "horribl": [1, 30, 33, 35, 36, 39, 40], "help": 1, "u": [1, 37, 54, 55], "understand": [1, 37], "behavior": [1, 41, 44, 66, 75], "univari": [1, 2, 56, 57, 58], "statist": 1, "detector": [1, 56, 57, 58], "window": [1, 56, 57, 58], "accord": [1, 31, 37, 44], "threshold": [1, 16, 56, 57, 58], "estim": [1, 3, 4, 6, 10, 11, 12, 13, 18, 20, 26, 37, 42, 44, 45, 46, 48, 49, 52, 75], "have": [1, 2, 19, 20, 26, 30, 31, 33, 35, 36, 37, 39, 41, 44, 53], "train_df": [1, 56, 57, 58], "test_df": [1, 56, 57, 58], "anomaly_detect": [1, 14, 15, 16, 25, 56, 57, 58], "from_pd": [1, 2, 30, 56, 57, 58], "none": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 37, 43, 45, 56, 66, 75], "001": [1, 6, 11, 16, 18, 56, 57], "timestamp": [1, 2, 30, 56, 57, 58], "20": [1, 6, 18, 23, 30, 37, 41, 44, 46, 48, 50, 52, 54, 56, 57, 58, 62, 64, 68, 75], "00": [1, 32, 39, 56, 57, 58], "around": [1, 37, 56], "reason": 1, "why": [1, 37], "indic": [1, 2, 3, 23, 29, 30, 45, 46, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 75, 77], "explanationbas": [1, 21, 22, 23, 24, 25], "avail": 1, "cannot": [1, 21, 22, 23, 25], "fulfil": 1, "data_typ": [1, 2], "iloc": [1, 2, 56, 57, 58], "shape": [1, 2, 30, 31, 36, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 75, 77], "continuous_column": [1, 2, 30], "feature_column": [1, 2, 3, 29, 30, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53], "to_numpi": [1, 2, 30, 43, 59, 61, 63, 77], "copi": [1, 2, 50], "remove_target_column": [1, 2, 48], "get_target_column": [1, 2], "get_continuous_median": [1, 2], "get_continuous_bound": [1, 2], "image_shap": [1, 2, 30, 67, 68], "to_pil": [1, 2, 3, 30, 31, 59, 60, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76], "to_token": [1, 2, 30], "to_str": [1, 2], "ts_len": [1, 2, 16, 30], "batch_siz": [1, 2, 6, 11, 16, 18, 30, 35, 36, 40, 43, 59, 61, 62, 63, 64, 75, 77], "transformbas": [1, 10, 13, 26], "ident": [1, 10, 13, 26, 51, 55], "onehot": [1, 10, 13, 26, 31], "get_feature_nam": [1, 26, 31], "minmax": [1, 10, 13, 26, 31, 42, 44, 45, 46, 48, 49, 52, 54, 55], "scale": [1, 10, 13, 26, 31, 44], "fillnan": [1, 26], "fillnantabular": [1, 26, 31], "dump": [1, 21, 26, 29], "decompos": [1, 26], "round2int": [1, 26], "tfidf": [1, 26, 31, 35, 36, 37, 38, 40], "word2id": [1, 26, 31, 35, 36, 40], "pad": [1, 26, 35, 36, 40], "unk": [1, 26, 31], "vocab_s": [1, 26, 35, 36, 40], "undersampl": [1, 26], "oversampl": [1, 26], "explainerabcmeta": [1, 3], "explainer_nam": [1, 3], "list_explain": [1, 3, 4, 5, 10, 14, 17], "imbalanceanalyz": [1, 3, 4], "correlationanalyz": [1, 3, 4], "mutualinform": [1, 3, 4], "chisquar": [1, 3, 4], "auto": [1, 3, 20], "mutual_info": [1, 3], "chi_squar": [1, 3], "pixel_import": [1, 21], "mask": [1, 6, 21, 35, 36, 40], "word_import": [1, 21], "get_explan": [1, 21, 22, 23, 24, 25, 44, 50], "dashfigur": [1, 21], "to_html_div": [1, 21], "to_html": [1, 21], "predictedresult": [1, 21], "batch": [2, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 23, 30, 31, 32, 35, 36, 37, 38, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77], "height": [2, 30, 59], "width": [2, 30, 50, 59], "channel": [2, 26, 30, 59, 67, 68], "true": [2, 3, 4, 12, 16, 20, 22, 23, 24, 26, 30, 32, 33, 35, 36, 37, 39, 40, 43, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 73, 75, 76, 77], "channel_last": 2, "dimens": [2, 16], "fals": [2, 4, 22, 23, 24, 30, 35, 36, 40, 44, 50, 62, 64, 75, 77], "instead": [2, 29, 32, 37, 40, 41, 50, 54, 55, 56, 57, 58, 59, 66, 68, 77], "number": [2, 4, 6, 7, 11, 12, 13, 16, 18, 19, 20, 21, 23, 24, 25, 26, 30, 41, 50], "4": [2, 21, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "pil": [2, 26, 30, 31, 59, 60, 65, 66, 69, 70, 71, 72, 73, 74, 76], "pilimag": [2, 26, 30, 31, 59, 60, 65, 66, 69, 70, 71, 72, 73, 74, 76], "im": [2, 3, 30, 59, 60, 62, 64, 65, 66, 69, 70, 72, 73, 75], "an_imag": 2, "jpg": [2, 26, 30, 31, 59, 60, 70, 71, 74], "hello": [2, 26, 31, 37], "m": [2, 26, 31, 50], "And": [2, 26, 31, 50], "anoth": [2, 23, 26, 31, 37, 68, 69, 72], "veri": [2, 26, 31, 37], "allow": [2, 3, 4, 5, 10, 14, 17, 37, 54, 55, 59, 67, 68], "nltk": 2, "word_token": 2, "variabl": [2, 25, 30, 56, 57, 58], "num_vari": [2, 30], "construct": [2, 3, 13, 18, 29, 30, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77], "2017": [2, 30, 67, 68], "12": [2, 30, 31, 32, 37, 41, 44, 46, 48, 50, 52, 54, 71, 74], "27": [2, 30, 37, 41, 44, 46, 48, 50, 52, 54], "1263": [2, 30], "94091": [2, 30], "394": [2, 30], "507": [2, 30], "16": [2, 30, 43, 55, 56, 57, 58], "530": [2, 30], "28": [2, 30, 41, 44, 46, 48, 52, 54, 61, 63, 77], "1299": [2, 30], "86398": [2, 30], "506": [2, 30], "424": [2, 30], "14": [2, 30, 31, 65], "162": [2, 30], "date": [2, 30, 66], "consumpt": [2, 30], "wind": [2, 30], "solar": [2, 30], "set_index": [2, 30, 50, 56, 57, 58], "to_datetim": [2, 30, 56, 57, 58], "t": [2, 5, 16, 17, 35, 36, 37, 40, 41, 48, 56, 57, 58, 71, 74], "abstract": [2, 3, 21, 26], "differet": 2, "properti": [2, 3, 26], "union": [2, 12, 23, 24, 25, 26], "ndarrai": [2, 10, 11, 12, 13, 16, 20, 26], "num_sampl": [2, 76], "num_featur": [2, 11, 23], "when": [2, 6, 7, 8, 10, 11, 12, 13, 18, 20, 21, 22, 23, 24, 25, 30, 37, 41, 55, 75], "int": [2, 4, 6, 7, 11, 12, 18, 26, 35, 36, 40, 56, 57, 58], "row": [2, 30, 41, 44, 46, 48, 50, 52, 54, 55, 56, 57, 58], "slice": [2, 50], "tupl": [2, 26, 40, 69, 72, 76], "get": [2, 3, 21, 22, 23, 24, 25, 26, 30, 35, 36, 40, 50, 66], "except": 2, "sequenc": [2, 4, 26, 50], "otherwis": 2, "remov": [2, 31, 41, 50, 51, 66, 68, 77], "absolut": [2, 37], "median": [2, 12, 26, 31, 43], "dict": [2, 3, 4, 5, 8, 9, 10, 14, 17, 21, 22, 23, 24, 25, 27, 34, 54, 55], "upper": [2, 12, 16], "lower": [2, 12, 16], "bound": [2, 12, 16], "grayscal": 2, "rgb": [2, 30, 31, 59, 60, 65, 66, 69, 70, 71, 72, 73, 74, 76], "h": [2, 26, 41, 44, 46, 48, 52, 54], "w": [2, 26, 71, 74], "ignor": [2, 3, 8, 9, 11, 12, 13, 18, 20, 22, 23, 24, 41, 48], "bool": [2, 6, 11, 18], "size": [2, 6, 11, 18, 23, 26, 30, 31, 71, 74], "color": [2, 30], "argument": [2, 37, 66, 77], "hwc": [2, 30], "keepdim": [2, 30], "kept": [2, 37], "squeez": [2, 36, 40, 50], "callabl": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 43], "sep": [2, 7, 34, 35, 36, 40, 74], "maxsplit": 2, "variable_nam": 2, "multivari": [2, 56, 57, 58], "whose": [2, 8, 12, 13, 18, 20, 23, 31, 35, 36], "length": [2, 16, 30, 32, 33, 34, 40], "datetimeindex": 2, "classmethod": 2, "rtype": 2, "kernel_width": [3, 10, 11, 41, 54, 55], "nsampl": [3, 10, 11, 18, 41, 52, 54, 55], "100": [3, 10, 11, 35, 36, 37, 40, 41, 45, 52, 54, 55, 59, 60, 62, 64, 67, 68, 75], "similar": [3, 26, 32, 40, 43, 53, 59], "img": [3, 17, 26, 30, 31, 59, 60, 65, 66, 69, 70, 72, 73, 76], "mainli": 3, "gbtree": [3, 41, 42, 44, 45, 46, 48, 49, 52, 54], "predict_proba": [3, 10, 37, 38, 42, 44, 45, 46, 48, 49, 52], "shaptabular": [3, 11, 52, 77], "training_data": [3, 4, 6, 10, 11, 12, 13, 15, 16, 18, 37, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 75], "compos": [3, 59, 60, 62, 64, 66, 70, 73, 75, 76], "256": [3, 6, 11, 18, 35, 36, 40, 43, 50, 59, 60, 66, 70, 73, 76], "centercrop": [3, 59, 60, 66, 70, 73, 76], "totensor": [3, 59, 60, 62, 64, 66, 70, 73, 75, 76], "mean": [3, 13, 22, 23, 24, 26, 27, 30, 31, 36, 37, 40, 44, 45, 46, 48, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 70, 73, 75, 76, 77], "485": [3, 59, 60, 66, 70, 73, 76], "456": [3, 59, 60, 66, 70, 73, 76], "406": [3, 59, 60, 66, 70, 73, 76], "std": [3, 23, 26, 36, 40, 59, 60, 66, 70, 73, 76], "229": [3, 59, 60, 66, 70, 73, 76], "225": [3, 59, 60, 66, 70, 73, 76], "stack": [3, 59, 60, 62, 64, 66, 70, 71, 73, 74, 75, 76], "found": [3, 16, 71, 74], "classnam": 3, "cls_dict": 3, "autodocabcmeta": 3, "meta": 3, "_explain": 3, "collect": [3, 4, 5, 10, 14, 17], "empti": [3, 5, 17, 20], "ani": [3, 5, 9, 10, 13, 14, 17, 37], "param_1": [3, 4, 5, 10, 14, 17], "lime_explan": 3, "shap_explan": 3, "ordereddict": [3, 4], "pdp_explan": [3, 4], "static": [3, 4, 5, 10, 13, 14, 17, 26], "mutual": [4, 29, 37, 41], "n_bin": [4, 26], "10": [4, 6, 11, 12, 16, 18, 19, 20, 22, 23, 30, 31, 35, 36, 40, 41, 50, 51, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 72, 75, 77], "overrid": 4, "count": [4, 23], "appear": [4, 23], "gender": [4, 43], "male": [4, 30, 31, 41, 43, 44, 46, 48, 52, 54], "femal": [4, 30, 31, 41, 43, 44, 46, 48, 52, 54], "separ": [4, 37, 45, 75], "cross": [4, 23, 29], "bin": [4, 16, 26], "discret": [4, 11, 26], "imbalanceexplan": [4, 23], "matrix": [4, 23], "scipi": 4, "stat": [4, 41], "spearmanr": 4, "correlationexplan": [4, 23], "globalfeatureimport": [4, 23], "chi": [4, 29, 41], "squar": [4, 29, 41], "non": 4, "chi2": [4, 29, 41], "qa": [5, 7, 32, 34], "those": [5, 17, 31, 48], "don": [5, 17, 41, 48], "limetext": [6, 38], "pleas": [6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "cite": [6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 33, 34, 35, 36, 37, 38, 39, 43, 45, 46, 48, 51, 52, 58, 60, 61, 62, 63, 64, 69, 70, 72, 73, 75, 76, 77], "origin": [6, 8, 11, 13, 15, 18, 19, 20, 23, 25, 26, 35, 36, 37, 38, 39, 45, 46, 52, 58, 63, 64, 72, 73, 75, 76, 77], "work": [6, 7, 8, 11, 13, 15, 18, 20, 33, 34, 35, 36, 37, 38, 39, 41, 45, 46, 52, 58, 63, 64, 72, 73, 75, 76, 77], "github": [6, 7, 8, 11, 13, 15, 18, 20, 33, 34, 35, 36, 38, 39, 46, 51, 52, 58, 72, 73, 76, 77], "com": [6, 7, 8, 11, 13, 15, 18, 20, 33, 34, 35, 36, 38, 39, 46, 51, 52, 58, 71, 72, 73, 74, 76, 77], "marcotcr": [6, 11, 18, 38, 46, 76], "lime_text": 6, "limetextexplain": 6, "refer": [6, 11, 12, 18, 37, 45, 49, 50, 60, 61, 62, 63, 64, 75], "doc": [6, 11, 18, 29, 32, 33, 34, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "explain_inst": [6, 11, 18], "wordimport": [6, 8, 24], "shaptext": [6, 39], "slundberg": [6, 11, 13, 15, 18, 39, 52, 58, 77], "textclassificationpipelin": [6, 39], "text_classif": 6, "defaultselectionmodel": [6, 11, 18, 37, 45, 75], "_defaultmodelbas": [6, 11, 18], "consist": [6, 41], "1d": 6, "convolut": [6, 20, 59, 61, 62, 63, 64, 69, 70, 75, 77], "l2xtext": [6, 37], "hidden_s": [6, 11, 35, 36, 40], "hidden": [6, 11, 43, 61, 62, 63, 64, 75, 77], "kernel_s": [6, 35, 36, 40, 61, 62, 63, 64, 75, 77], "kernel": 6, "forward": [6, 11, 18, 36, 40, 62, 64, 75], "defaultpredictionmodel": [6, 11, 18, 37, 45, 75], "weight": [6, 11, 12, 16, 18, 19, 20, 36, 37, 40, 43, 66, 67, 68, 69, 72], "gumbel": [6, 11, 18], "softmax": [6, 11, 18, 40, 59, 76], "tau": [6, 11, 18, 50], "k": [6, 11, 18, 35, 36, 40, 44, 50, 59, 60, 69, 70, 72, 73, 76], "selection_model": [6, 11, 18, 37, 45, 75], "prediction_model": [6, 11, 18, 37, 45, 75], "loss_funct": [6, 11, 18, 71, 74], "optim": [6, 11, 12, 16, 18, 19, 20, 35, 36, 40, 43, 50, 57, 60, 61, 62, 63, 64, 65, 67, 68, 75, 77], "learning_r": [6, 11, 12, 16, 18, 19, 20, 35, 36, 40, 43, 62, 64, 75], "num_epoch": [6, 11, 18, 35, 36, 40, 50, 62, 64, 75], "theoret": [6, 11, 18, 37, 45, 75], "perspect": [6, 11, 18, 37, 45, 75], "jianbo": [6, 11, 18, 37, 45, 75], "chen": [6, 11, 18, 37, 45, 75], "le": [6, 11, 18, 37, 45, 75], "song": [6, 11, 18, 37, 45, 75], "martin": [6, 11, 18, 37, 45, 75], "j": [6, 11, 18, 37, 45, 50, 75], "wainwright": [6, 11, 18, 37, 45, 75], "michael": [6, 11, 18, 37, 45, 75], "jordan": [6, 11, 18, 37, 45, 75], "1802": [6, 11, 18, 20, 37, 45, 63, 64, 75], "07814": [6, 11, 18, 37, 45, 75], "float": [6, 10, 11, 13, 16, 18, 26, 35, 50, 62, 64, 75], "maximum": [6, 7, 11, 12, 16, 18, 19, 20, 21, 23, 24, 25, 32, 33, 34, 40, 50], "p": [6, 11, 18, 37, 45, 75, 76], "q": [6, 11, 18, 37, 45, 50, 75], "x_": [6, 11, 18, 37, 45, 75], "nn": [6, 8, 11, 12, 13, 18, 19, 20, 35, 36, 40, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77], "crossentropyloss": [6, 11, 18, 36, 40, 62, 64, 75], "adamw": [6, 36, 40], "rate": [6, 11, 12, 16, 18, 19, 20, 50], "pick": [6, 11, 18], "32": [6, 11, 18, 36, 40, 55, 61, 63, 75, 77], "64": [6, 11, 18, 43, 50, 61, 63, 77], "128": [6, 11, 18, 35, 36, 40, 43, 61, 62, 63, 64, 77], "epoch": [6, 11, 18, 35, 43, 61, 62, 63, 64, 75, 77], "develop": [7, 12, 16, 29, 32, 33, 34, 40, 41, 48, 54, 55, 56, 59], "wu": [7, 33, 34], "et": [7, 12, 16, 20, 33, 34, 48, 69, 70], "tongshuangwu": [7, 33, 34], "pr": 7, "model_path": 7, "cuda": [7, 36, 40, 59, 62, 64, 68, 71, 73, 74, 75, 76], "max_number_exampl": [7, 12], "context": [7, 34, 50], "concaten": [7, 26, 36, 40, 51, 55, 59, 65, 69, 72], "seper": [7, 34], "ce_typ": 7, "perturb": 7, "blank": 7, "cfexplan": [7, 12, 16, 19, 22, 23, 25], "integratedgradienttext": [8, 35, 36], "ankurtali": [8, 13, 20, 35, 36, 72, 73], "kera": [8, 12, 13, 18, 19, 20, 35, 36, 43, 50, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 73, 77], "must": [8, 35, 36, 40, 41], "integrated_gradi": [8, 13, 20], "integratedgradi": [8, 13, 17, 20, 74], "compute_integrated_gradi": [8, 13, 20], "curv": 9, "sklearnbas": [10, 13], "cate_encod": [10, 13], "cont_encod": [10, 13], "target_encod": [10, 13], "baseestim": 10, "proport": [10, 13], "ce": [10, 14, 17, 59], "decision_tre": [10, 53], "shap_tre": 10, "limetabular": [11, 46], "lime_tabular": 11, "limetabularexplain": 11, "featureimport": [11, 13, 15, 23, 25], "kernelexplain": [11, 15], "shap_valu": [11, 15], "partialdependencetabular": [11, 49], "stabl": [11, 49, 50, 55], "partial_depend": [11, 18, 49], "html": [11, 49, 50, 55], "grid_resolut": [11, 18], "candid": 11, "dure": [11, 12, 16, 19, 20], "pdpexplan": [11, 23], "sensitivityanalysistabular": [11, 51], "salib": [11, 51], "sa": 11, "sensitivityexplan": [11, 23], "feedforward": [11, 43], "neural": [11, 61, 62, 63, 64, 65, 75, 77], "network": [11, 20, 37, 43, 45, 61, 62, 63, 64, 65, 69, 70, 75, 77], "l2xtabular": [11, 45], "adam": [11, 18, 35, 61, 62, 63, 64, 75, 77], "Not": [11, 13, 19, 41, 44, 46, 48, 52, 54], "maceexplain": [12, 16, 48, 57], "yang": [12, 16, 48], "paper": [12, 16, 19, 20, 43, 48, 60, 61, 62], "effici": [12, 16, 48], "framework": [12, 16, 34, 48], "cfretriev": 12, "gld": 12, "retriev": 12, "desir": [12, 26, 75], "counterfactualoptim": [12, 16], "x0": [12, 16, 20], "c": [12, 16, 19, 20, 26, 29, 30, 31, 32, 37, 40, 41, 54, 55, 56, 59, 76], "kappa": [12, 16, 19, 20], "binary_search_step": [12, 16, 19, 20, 59, 60, 61, 62, 63, 64], "01": [12, 16, 19, 20, 36, 40, 56, 57, 58], "num_iter": [12, 16, 19, 20, 59, 60, 61, 62, 63, 64, 67, 68], "1000": [12, 16, 19, 20, 51, 69, 72, 76], "grad_clip": [12, 16, 19, 20], "gamma": [12, 16, 20], "autom": [12, 19, 43, 60, 61, 62], "gdpr": [12, 19, 43, 60, 61, 62], "sandra": [12, 19, 43, 60, 61, 62], "wachter": [12, 19, 43, 60, 61, 62], "brent": [12, 19, 43, 60, 61, 62], "mittelstadt": [12, 19, 43, 60, 61, 62], "chri": [12, 19, 43, 60, 61, 62], "russel": [12, 19, 43, 60, 61, 62], "1711": [12, 19, 43, 60, 61, 62], "00399": [12, 19, 43, 60, 61, 62], "hing": [12, 16, 19, 20], "term": [12, 16, 19, 20], "iter": [12, 16, 19, 20], "adjust": [12, 16, 19, 20], "clip": [12, 16, 19, 20], "denomin": [12, 16], "regular": [12, 16, 20], "verbos": [12, 16, 20, 36, 40, 43, 61, 63, 77], "counterfactualexplain": [12, 16, 19, 43, 60, 61, 62, 64], "extract": [12, 22, 23, 26, 43], "inp": 13, "baselin": [13, 20], "output_index": 13, "50": [13, 35, 36, 40, 41, 44, 46, 48, 52, 54, 62, 64, 75], "integratedgradienttabular": 13, "num_random_tri": [13, 20], "trial": [13, 20], "_sample_baselin": 13, "linearbas": 13, "coeffici": [13, 23, 47], "linearexplan": [13, 23], "linearregress": [13, 47], "lasso": 13, "linear_regress": 13, "logisticregress": [13, 47], "logistic_regress": 13, "treebas": 13, "random": [13, 26, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "forest": [13, 37, 38, 51, 55], "structur": [13, 23, 32, 37, 45, 53, 61, 63, 75], "path": [13, 23, 29, 37, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58], "treeexplan": [13, 23], "treeregressor": [13, 53], "regressor": [13, 55], "decisiontreeregressor": 13, "tree_regressor": 13, "treeclassifi": [13, 53], "decisiontreeclassifi": 13, "tree_classifi": 13, "shaptreetabular": 13, "forecast": [14, 15, 16, 25, 56, 58], "shaptimeseri": [15, 58], "higher": [15, 16, 41, 56, 57, 58], "anomal": [15, 16, 56, 57, 58], "smooth_weight": 16, "grid_siz": 16, "reshap": [16, 51, 55, 61, 63, 77], "determin": [16, 37, 50, 56, 57, 58], "smooth": 16, "numer": [16, 50], "revis": 16, "version": [16, 32, 37, 40, 44, 71, 74], "rl": 16, "cem": 17, "limeimag": [18, 76], "top_label": 18, "limeimageexplain": 18, "maskexplan": [18, 22], "shapimag": [18, 77], "background_data": [18, 20], "background": [18, 20, 44], "pixelimport": [18, 20, 22], "partialdependenceimag": 18, "segment": 18, "quickshift": 18, "measur": 18, "averag": [18, 23, 35, 36, 37, 38, 40, 67, 68], "replac": [18, 43], "grid": [18, 23], "resolut": 18, "n_segment": 18, "l2ximag": [18, 75], "upsampl": [18, 75], "been": [19, 20, 37, 71, 74], "255": [19, 20, 31, 61, 63, 77], "integratedgradientimag": [20, 72, 73], "randomli": 20, "selvaraju": [20, 69, 70], "1610": [20, 69, 70], "02391": [20, 69, 70], "gradcamplu": 20, "chattopadhyai": 20, "pdf": 20, "1710": 20, "11063": 20, "cemoptim": 20, "beta": 20, "ae_model": 20, "07623": [20, 63, 64], "l1": 20, "ae": 20, "pn_optim": 20, "pertin": [20, 22, 63, 64], "pp_optim": 20, "contrastiveexplain": [20, 63, 64], "contrastiveexplan": [20, 22], "compon": [21, 37], "pickl": 21, "unpickl": 21, "byte": 21, "byte_str": 21, "classfic": 21, "max_num_subplot": [21, 23, 24], "subplot": [21, 23, 24], "use_heatmap": 22, "item": [22, 23, 24, 25, 41, 54, 55, 62, 64, 75], "entri": [22, 23, 24], "target_label": [22, 23, 24], "heatmap": 22, "importance_scor": [22, 23, 24, 25], "dog": [22, 23, 24, 27, 59, 71, 74], "cat": [22, 23, 24, 27, 36, 37, 40], "boundari": 22, "pn": 22, "pn_label": 22, "pp": 22, "pp_label": 22, "cf": [22, 23, 25], "cf_label": 22, "counterfactualexplan": 22, "feature_valu": 23, "sort": [23, 24, 31], "queri": [23, 25, 50], "font_siz": 23, "font": 23, "tabl": 23, "deviat": [23, 26], "pdp_mean": 23, "pdp_std": 23, "plot_std": 23, "mu": 23, "mu_star": 23, "sigma": 23, "mu_star_conf": 23, "plot_coeffici": 23, "tick": 23, "binari": [23, 35, 36, 37, 38, 40, 43, 59, 60, 61, 62, 63, 64, 65], "add_glob": 23, "whole": [23, 37], "add_loc": 23, "decision_path": 23, "node_ind": 23, "node": 23, "figsiz": 23, "15": [23, 30, 37, 41, 44, 46, 48, 52, 54, 56, 57, 58, 66, 67], "fontsiz": 23, "num_tokens_per_class": 24, "shown": 24, "max_length": [24, 32, 33, 34, 35, 36, 40], "512": [24, 68], "figure_typ": 25, "max_num_variables_to_plot": 25, "25": [25, 50, 55], "bar": 25, "invers": [26, 31, 44, 46, 52], "b": [26, 30, 31], "d": [26, 30, 31, 33], "cate_transform": [26, 31], "cont_transform": [26, 31, 42, 44, 45, 46, 48, 49, 52, 54, 55], "pseudo": 26, "recov": 26, "some_imag": 26, "360": 26, "240": [26, 31, 76], "vector": [26, 31, 37, 38], "drop": [26, 41, 43, 51, 56, 57, 58], "input_featur": 26, "zero": [26, 35, 36, 40], "unit": [26, 41, 43, 44, 46, 48, 50, 52, 54, 56, 57, 58], "varianc": 26, "ratio": 26, "miss": 26, "chosen": 26, "itself": 26, "save": [26, 50], "target_transform": [26, 31, 51, 55], "hold": [26, 37], "expect": 26, "ith": 26, "00392156862745098": 26, "round": 26, "resampl": 26, "smaller": 26, "edg": 26, "strategi": 26, "remove_punctu": 26, "start": [26, 37, 50], "re": [26, 37, 38], "sub": 26, "over": 26, "fraction": 26, "random_st": [26, 43], "guarante": 26, "seed": [26, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54], "balanc": 26, "minor": 26, "decreas": [26, 41, 44], "major": 26, "increas": [26, 37, 41, 44], "data_explan": [27, 41], "predic": 27, "host": [27, 38], "127": [27, 29, 32, 40, 41, 54, 55, 56, 59], "port": 27, "8050": [27, 29, 32, 40, 41, 54, 55, 56, 59], "omnixai": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "render": [29, 32, 33, 34, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "sphinx": [29, 32, 33, 34, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "delet": [29, 32, 33, 34, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "cell": [29, 32, 33, 34, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "io": [29, 32, 33, 34, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "pio": [29, 32, 33, 34, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "png": [29, 32, 33, 34, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "o": [29, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 65, 66, 71, 74], "join": [29, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58], "now": [29, 35, 36, 37, 40, 41, 44, 50, 54, 55, 59, 62, 64, 75], "than": [29, 34, 37, 66], "onc": [29, 37], "n": [29, 30, 35, 36, 40, 50], "append": [29, 33, 36, 40, 56, 57, 58, 65, 69, 72], "print": [29, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 72, 75, 76, 77], "serv": [29, 32, 40, 41, 54, 55, 56, 59], "flask": [29, 32, 40, 41, 54, 55, 56, 59], "34": [29, 30, 31, 32, 40, 41, 44, 54, 55, 56, 59], "lazi": [29, 32, 40, 41, 54, 55, 56, 59], "environ": [29, 32, 34, 40, 41, 50, 54, 55, 56, 59], "product": [29, 32, 40, 41, 54, 55, 56, 59], "warn": [29, 32, 37, 40, 41, 54, 55, 56, 59, 77], "server": [29, 32, 40, 41, 54, 55, 56, 59], "deploy": [29, 32, 40, 41, 54, 55, 56, 59], "wsgi": [29, 32, 40, 41, 54, 55, 56, 59], "debug": [29, 32, 40, 41, 54, 55, 56, 59], "off": [29, 32, 37, 40, 41, 54, 55, 56, 59], "press": [29, 32, 40, 41, 54, 55, 56, 59], "ctrl": [29, 32, 40, 41, 54, 55, 56, 59], "quit": [29, 32, 40, 41, 54, 55, 56, 59], "notebook": [30, 50], "how": [30, 37, 41, 50], "f": [30, 31, 35, 41, 50, 54, 55], "39": [30, 31, 41, 44, 46, 48, 50, 52, 54, 55, 66, 69, 72, 76], "ye": [30, 31, 37, 43], "swap": 30, "digit": [30, 61, 62, 63, 64, 75, 77], "torchvis": [30, 59, 60, 62, 64, 66, 68, 70, 73, 75, 76], "download": [30, 62, 64, 71, 74, 75], "10000": [30, 56, 57, 58], "11": [30, 31, 37, 41, 50, 51, 77], "displai": [30, 31], "loop": 30, "camera": [30, 31, 59, 60, 70], "what": [30, 32, 33, 34, 35, 36, 37, 39], "great": [30, 32, 33, 35, 36, 37, 39, 40], "movi": [30, 32, 33, 35, 36, 39, 40], "tast": [30, 33, 35, 36, 39], "best": [30, 33, 35, 36, 39, 40], "film": [30, 33, 35, 36, 39, 40], "ever": [30, 33, 35, 36, 39, 40], "ve": [30, 33, 35, 36, 39, 40], "never": [30, 33, 35, 36, 39, 40, 41, 44, 46, 48, 52, 54], "watch": [30, 33, 35, 36, 39, 40], "someth": [30, 33, 35, 36, 37, 39, 40], "bad": [30, 33, 35, 36, 37, 39, 40], "len": [30, 35, 36, 40, 59, 60, 65, 69, 70, 72, 73, 76], "17": [30, 39, 55, 56, 57, 58], "18": [30, 37, 50, 55], "29": 30, "1319": 30, "76541": 30, "610": 30, "314": 30, "173": 30, "19": [30, 37, 50], "ts_a": 30, "ts_b": 30, "try": [31, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55, 68], "22474487": 31, "120": 31, "6227660078332259": 31, "4736296010332684": 31, "5178561161676974": 31, "680918560398684": 31, "7265094189091538": 31, "3632547094545769": 31, "2762645695949752": 31, "unknown": 31, "xxx": [31, 44], "lt": [31, 41, 44, 46, 48, 52, 54], "gt": [31, 41, 44, 46, 48, 52, 54], "limit": [32, 40], "interview": 32, "neither": 32, "funni": 32, "nor": 32, "witti": 32, "even": [32, 37], "like": [32, 37, 44], "overal": [32, 37], "distilbert": [32, 33, 39], "uncas": [32, 33, 39], "finetun": [32, 33, 39], "sst": [32, 33, 39], "english": [32, 33, 39], "return_all_scor": [32, 33, 39], "ss": 32, "There": [32, 40, 59], "partit": [32, 37, 39], "3it": 32, "70": 32, "info": [32, 33, 34, 40, 50], "polyjuice_wrapp": [32, 33, 34, 40], "setup": [32, 33, 34, 40], "spaci": [32, 33, 34, 40], "processor": [32, 33, 34, 40, 71, 74], "perplex": [32, 33, 34, 40], "scorer": [32, 33, 34, 40], "ask": [32, 33, 34, 37, 40], "truncat": [32, 33, 34, 40], "predefin": [32, 33, 34, 40], "werkzeug": [32, 40], "idx2label": [33, 59, 60, 69, 70, 72, 73, 76], "build": [33, 34, 41, 62, 64, 71, 74], "def": [33, 34, 35, 36, 40, 43, 50, 56, 57, 58, 62, 64, 65, 69, 71, 72, 74, 75, 76], "_predict": [33, 34], "pred": 33, "els": [33, 35, 36, 37, 40, 59, 61, 62, 63, 64, 68, 73, 75, 76, 77], "unittest": [34, 35, 47, 71, 74, 76], "model_nam": 34, "deepset": 34, "roberta": 34, "squad2": 34, "isinst": [34, 50], "farm": 34, "give": [34, 37], "freedom": 34, "peopl": [34, 37], "switch": 34, "covers": 34, "electr": 34, "vehicl": 34, "emit": 34, "less": [34, 37], "harm": 34, "pollut": 34, "convent": 34, "ultim": 34, "cleaner": [34, 41, 44, 46, 48, 52, 54], "human": [34, 37], "beings": 34, "eletr": 34, "fetch_20newsgroup": [35, 36, 37, 38, 40], "textmodel": [35, 36, 40], "num_embed": [35, 36, 40], "num_class": [35, 36, 40, 61, 63, 77], "super": [35, 36, 40, 62, 64, 75], "embedding_s": [35, 36, 40], "embeddings_initi": 35, "randomuniform": 35, "minval": 35, "maxval": 35, "conv_lay": [35, 36, 40, 62, 64, 75], "conv1d": [35, 36, 40], "activ": [35, 36, 37, 40, 43, 50, 61, 63, 77], "relu": [35, 36, 40, 50, 61, 62, 63, 64, 75, 77], "dropout": [35, 36, 40, 50, 61, 62, 63, 64, 75, 77], "output_lay": [35, 36, 40], "dens": [35, 43, 50, 61, 62, 63, 64, 75, 77], "expand_dim": [35, 50, 61, 63, 65, 69, 72, 77], "axi": [35, 36, 40, 43, 50, 51, 55, 61, 63, 65, 69, 72, 77], "reduce_max": 35, "concat": 35, "relat": [35, 36, 37, 38, 40], "read_csv": [35, 36, 40, 43, 50, 56, 57, 58], "home": [35, 36, 40, 71, 74, 77], "ywz": [35, 36, 40, 71, 74, 77], "labeledtraindata": [35, 36, 40], "tsv": [35, 36, 40], "x_train": [35, 36, 37, 38, 40, 43, 51, 55, 61, 62, 63, 64, 77], "y_train": [35, 36, 37, 38, 40, 43, 51, 55, 61, 62, 63, 64, 77], "astyp": [35, 36, 40, 43, 56, 57, 58, 61, 63, 77], "x_test": [35, 36, 37, 38, 40, 43, 51, 55, 61, 62, 63, 64, 77], "y_test": [35, 36, 37, 38, 40, 43, 51, 55, 61, 62, 63, 64, 77], "max_len": [35, 36, 40], "float32": [35, 36, 40, 43, 50, 61, 63, 77], "evalu": [35, 36, 40, 43, 61, 62, 63, 64, 75, 77], "1e": [35, 36, 40, 62, 64, 75], "loss_fn": 35, "sparsecategoricalcrossentropi": 35, "from_logit": [35, 43, 61, 63, 77], "train_dataset": 35, "from_tensor_slic": 35, "shuffl": [35, 36, 40, 62, 64, 75], "buffer_s": 35, "1024": 35, "enumer": [35, 62, 64, 75], "gradienttap": 35, "tape": 35, "trainable_weight": 35, "apply_gradi": 35, "zip": [35, 62, 64, 75, 76], "200": [35, 43, 55], "6866752505302429": 35, "4109169542789459": 35, "21237820386886597": 35, "1540527492761612": 35, "08126655220985413": 35, "02999718114733696": 35, "008433952927589417": 35, "009998280555009842": 35, "0030068857595324516": 35, "001554026734083891": 35, "argmax": [35, 36, 40], "accuraci": [35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 61, 62, 63, 64, 75, 77], "f1_score": [35, 36, 37, 38, 40], "8560798903465829": 35, "id_to_word": [35, 36, 40], "util": [36, 40, 43, 61, 62, 63, 64, 75, 77], "trainer": [36, 40], "inputdata": [36, 40, 62, 64, 75], "dataload": [36, 40, 62, 64, 75], "normal_": [36, 40], "modulelist": [36, 40], "unsqueez": [36, 40, 76], "dim": [36, 40, 59, 76], "permut": [36, 40], "devic": [36, 40, 59, 62, 64, 68, 73, 75, 76], "is_avail": [36, 40, 59, 62, 64, 68, 73, 75, 76], "cpu": [36, 40, 59, 62, 64, 65, 68, 73, 75, 76], "optimizer_class": [36, 40], "loss_func": [36, 40, 62, 64, 75], "train_x": [36, 40], "train_i": [36, 40], "complet": [36, 37, 40, 45, 75], "0008": 36, "eval": [36, 40, 62, 64, 75, 76], "data_load": [36, 40], "collate_fn": [36, 40], "collate_func": [36, 40], "detach": [36, 40, 75, 76], "8458027386386188": 36, "advantag": [37, 45, 75], "fast": [37, 45, 75], "disadvantag": [37, 45, 75], "qualiti": [37, 45, 75], "highli": [37, 41, 45, 75], "affect": [37, 45, 75], "factor": [37, 45, 75], "hyperparamet": [37, 45], "ensembl": [37, 38, 47, 51, 54, 55], "alt": [37, 38], "atheism": [37, 38], "soc": [37, 38], "religion": [37, 38], "christian": [37, 38], "newsgroups_train": [37, 38], "newsgroups_test": [37, 38], "tfdif": [37, 38], "train_vector": [37, 38], "test_vector": [37, 38], "randomforestclassifi": [37, 38], "500": [37, 38], "925233644859813": 37, "idx": [37, 38], "83": [37, 38, 71, 74], "0039": 37, "8674698795180723": 37, "subject": [37, 38], "request": 37, "darwin": 37, "fish": 37, "organ": [37, 38], "univers": 37, "mexico": 37, "albuquerqu": 37, "recent": 37, "seen": 37, "anyon": [37, 38], "contact": 37, "email": 37, "me": 37, "john": 37, "dan": 37, "rose": 37, "aros": 37, "nation": [37, 38], "repent": 37, "my": 37, "own": [37, 41, 44, 46, 48, 52, 54], "view": [37, 50], "63": 37, "mcovingt": 37, "covington": 37, "heard": 37, "radio": 37, "todai": 37, "student": 37, "confer": 37, "were": 37, "america": 37, "sin": [37, 38], "sexual": 37, "promiscu": 37, "repli": 37, "ca": 37, "claim": 37, "someon": 37, "am": 37, "fact": 37, "him": 37, "jesu": 37, "equip": 37, "judg": 37, "lewi": 37, "essai": 37, "world": 37, "war": 37, "ii": 37, "leader": 37, "britain": 37, "urg": 37, "horror": 37, "strongli": [37, 44], "disagre": 37, "turn": 37, "behav": 37, "incredibli": 37, "toward": 37, "god": 37, "encourag": 37, "forc": 37, "folk": 37, "particip": 37, "directli": [37, 47], "oppos": 37, "written": 37, "far": 37, "abov": [37, 41, 43, 62, 64, 75], "luxuri": 37, "live": 37, "land": 37, "slaughter": 37, "children": 37, "million": 37, "stricken": 37, "out": 37, "honor": 37, "due": 37, "everi": 37, "ow": 37, "apologi": 37, "bit": [37, 41], "public": 37, "said": [37, 38], "decai": 37, "bibl": 37, "quiz": 37, "distribut": 37, "articl": 37, "healta": 37, "tammi": 37, "r": [37, 59, 60, 69, 70, 71, 72, 73, 74, 76], "heali": 37, "coven": 37, "he": 37, "idol": 37, "worship": 37, "high": [37, 44], "priest": 37, "could": [37, 44], "enter": 37, "holi": 37, "year": 37, "dai": 37, "aton": 37, "familiar": 37, "knowledg": 37, "believ": 37, "translat": 37, "would": 37, "had": 37, "think": 37, "wrong": 37, "again": 37, "just": 37, "suggest": [37, 44], "correct": 37, "dean": 37, "danb": 37, "babcock": 37, "thought": 37, "commun": 37, "compani": 37, "voic": 37, "bil": 37, "bill": 37, "conner": 37, "jame": 37, "felder": 37, "spbach": 37, "wrote": 37, "logic": 37, "alert": 37, "incredul": 37, "hard": 37, "doe": 37, "liar": 37, "pursuas": 37, "look": [37, 50], "koresh": 37, "yourself": 37, "basi": 37, "reject": 37, "account": 37, "thing": 37, "madalyn": 37, "face": 37, "silli": 37, "okai": 37, "disbeliev": 37, "admit": 37, "fallaci": 37, "awar": 37, "reader": 37, "assert": 37, "mam": 37, "mike": 37, "mcangu": 37, "american": 37, "evolut": 37, "mat": 37, "tin": 37, "pl9": 37, "53": [37, 41, 44, 46, 48, 52, 54], "tue": 37, "apr": 37, "1993": 37, "gmt": 37, "robert": 37, "singleton": 37, "bob": 37, "sure": 37, "exclus": 37, "lend": 37, "notion": 37, "posterior": 37, "atheist": 37, "pitch": 37, "thu": 37, "necessarili": 37, "reduc": 37, "quantiti": 37, "theist": 37, "divin": 37, "fall": 37, "prei": 37, "ockham": 37, "razor": 37, "phenomenon": 37, "being": 37, "satisfactorili": 37, "independ": 37, "evid": 37, "occam": 37, "law": 37, "natur": 37, "often": 37, "end": 37, "seem": 37, "odd": 37, "simultan": 37, "condemn": 37, "primit": 37, "unscientif": 37, "childish": 37, "yet": [37, 50], "complex": 37, "scientif": 37, "straightforeward": 37, "appar": 37, "cute": 37, "character": 37, "howev": 37, "inconsist": 37, "statement": 37, "still": 37, "unnecessari": 37, "level": 37, "idea": 37, "themselv": 37, "thei": [37, 41], "unnecessarili": 37, "descript": 37, "part": 37, "sfp": 37, "sheila": 37, "patterson": 37, "mari": 37, "assumpt": 37, "cornel": 37, "cit": 37, "22": [37, 41, 44, 46, 48, 52, 54, 55], "mpaul": 37, "marxhausen": 37, "paul": 37, "feel": 37, "better": 37, "phrase": 37, "sai": 37, "parent": 37, "sanctifi": 37, "beyond": 37, "sound": 37, "inabl": 37, "grasp": 37, "grace": 37, "incarn": 37, "through": 37, "alwai": [37, 50], "impress": 37, "chose": 37, "woman": 37, "bring": 37, "himself": 37, "prove": 37, "down": 37, "hi": 37, "perfect": 37, "touch": 37, "ah": 37, "wonder": 37, "ithaca": 37, "ny": 37, "mark": 37, "boston": [37, 51], "asid": 37, "moder": 37, "rick": 37, "granberri": 37, "wo": 37, "quot": 37, "error": 37, "opinion": 37, "writer": 37, "plain": 37, "confus": 37, "come": [37, 50], "lexington": 37, "church": 37, "brought": 37, "team": 37, "actual": 37, "il": 37, "up": [37, 50, 66], "friend": 37, "tell": 37, "go": [37, 71, 74], "northeast": 37, "wast": 37, "talent": 37, "realli": 37, "kind": [37, 54, 55], "insid": 37, "joke": 37, "took": 37, "well": [37, 67, 68], "inde": 37, "misinform": 37, "sun": 37, "ok": 37, "mail": 37, "marshal": 37, "kevin": 37, "death": 37, "penalti": 37, "polit": 37, "virginia": 37, "tech": [37, 41, 44, 46, 48, 52, 54], "scienc": 37, "dept": 37, "blacksburg": 37, "va": 37, "46": 37, "fascin": 37, "argu": 37, "abort": 37, "defend": 37, "homosexu": 37, "popul": [37, 55], "control": 37, "insist": 37, "biolog": 37, "punish": 37, "benedikt": 37, "contardictori": 37, "case": [37, 50], "excel": 37, "growth": 37, "sorri": 37, "escap": 37, "assum": 37, "alik": 37, "vari": 37, "greatli": 37, "attack": 37, "presum": 37, "present": 37, "person": 37, "right": 37, "regardless": 37, "arrog": 37, "individu": 37, "bodi": 37, "domain": 37, "jcj": 37, "becom": [37, 41], "huh": 37, "whuzzat": 37, "muirm": 37, "maxwel": 37, "muir": 37, "candor": 37, "happi": 37, "proven": 37, "problem": 37, "broken": 37, "went": 37, "journei": 37, "lukewarm": 37, "agnostic": 37, "although": 37, "faith": 37, "jeff": 37, "johnson": 37, "9230769230769231": 38, "nntp": 38, "murder": 38, "7it": 39, "51": [39, 41, 43], "0010": 40, "8492442322991249": 40, "tensor": [40, 59, 60, 62, 64, 70, 73], "preprocess_func": [40, 61, 63, 77], "postprocess_func": 40, "state": [41, 44, 46, 48, 52, 54], "gov": [41, 44, 46, 48, 52, 54], "77516": [41, 44, 46, 48, 52, 54], "bachelor": [41, 44, 46, 48, 52, 54], "emp": [41, 44, 46, 48, 52, 54], "inc": [41, 44, 46, 48, 52, 54], "83311": [41, 44, 46, 48, 52, 54], "38": [41, 44, 46, 48, 52, 54], "privat": [41, 44, 46, 48, 52, 54], "215646": [41, 44, 46, 48, 52, 54], "234721": [41, 44, 46, 48, 52, 54], "11th": [41, 44, 46, 48, 52, 54], "338409": [41, 44, 46, 48, 52, 54], "32556": [41, 44, 46, 48, 52, 54], "257302": [41, 44, 46, 48, 52, 54], "assoc": [41, 44, 46, 48, 52, 54], "acdm": [41, 44, 46, 48, 52, 54], "32557": [41, 44, 46, 48, 52, 54], "40": [41, 44, 46, 48, 52, 54], "154374": [41, 44, 46, 48, 52, 54], "32558": [41, 44, 46, 48, 52, 54], "58": [41, 44, 46, 48, 52, 54], "151910": [41, 44, 46, 48, 52, 54], "32559": [41, 44, 46, 48, 52, 54], "201490": [41, 44, 46, 48, 52, 54], "32560": [41, 44, 46, 48, 52, 54], "52": [41, 44, 46, 48, 52, 54, 55], "287927": [41, 44, 46, 48, 52, 54], "marri": [41, 44, 46, 48, 52, 54], "adm": [41, 44, 46, 48, 52, 54], "cleric": [41, 44, 46, 48, 52, 54], "white": [41, 44, 46, 48, 52, 54], "civ": [41, 44, 46, 48, 52, 54], "spous": [41, 44, 46, 48, 52, 54], "exec": [41, 44, 46, 48, 52, 54], "manageri": [41, 44, 46, 48, 52, 54], "husband": [41, 44, 46, 48, 52, 54], "divorc": [41, 44, 46, 48, 52, 54], "handler": [41, 44, 46, 48, 50, 52, 54], "prof": [41, 44, 46, 48, 52, 54], "specialti": [41, 44, 46, 48, 52, 54], "wife": [41, 44, 46, 48, 52, 54], "op": [41, 44, 46, 48, 52, 54], "inspct": [41, 44, 46, 48, 52, 54], "widow": [41, 44, 46, 48, 52, 54], "unmarri": [41, 44, 46, 48, 52, 54], "child": [41, 44, 46, 48, 52, 54], "2174": [41, 44, 46, 48, 52, 54], "50k": [41, 44, 46, 48, 52, 54], "cuba": [41, 44, 46, 48, 52, 54], "15024": [41, 44, 46, 48, 52, 54], "32561": [41, 44, 46, 48, 52, 54], "lead": 41, "potenti": 41, "sociolog": 41, "bia": 41, "observ": [41, 55], "strong": 41, "matrit": 41, "imbalanc": 41, "among": 41, "therefor": 41, "avoid": 41, "rough": 41, "educt": 41, "least": 41, "them": [41, 59, 65, 69, 72], "rel": 41, "low": 41, "12345": 41, "accuracy_scor": [41, 42, 44, 45, 46, 48, 49, 52, 54], "26048": [41, 42, 44, 45, 46, 48, 49, 52, 54], "6513": [41, 42, 44, 45, 46, 48, 49, 52, 54], "8593582066635959": 41, "describ": 41, "longer": [41, 77], "But": 41, "causal": 41, "caus": [41, 44], "unclear": 41, "1653": [41, 44, 45, 46, 52, 53, 54], "1658": [41, 54], "ocup": 41, "confusion_matrix": [41, 54], "roc": [41, 54], "precision_recal": [41, 54], "cumulative_gain": [41, 54], "lift_curv": [41, 54], "108": [42, 44, 45, 46, 48, 49, 52, 54], "8668816213726394": [42, 44, 45, 46, 48, 49, 52, 54], "standardscal": [43, 44], "diabetes_data": 43, "file_path": 43, "to_replac": 43, "No": 43, "polyuria": 43, "polydipsia": 43, "sudden": 43, "weak": 43, "polyphagia": 43, "genit": 43, "thrush": 43, "blur": 43, "itch": 43, "irrit": 43, "delai": 43, "heal": 43, "paresi": 43, "muscl": 43, "stiff": 43, "alopecia": 43, "obes": 43, "x_train_un": 43, "x_test_un": 43, "test_siz": 43, "stratifi": 43, "sc": 43, "fit_transform": 43, "train_tf_model": 43, "to_categor": [43, 61, 63, 77], "sequenti": [43, 61, 62, 63, 64, 75, 77], "softplu": 43, "schedul": 43, "exponentialdecai": 43, "initial_learning_r": 43, "decay_step": 43, "decay_r": 43, "99": [43, 50, 59, 60, 61, 62, 64, 75], "staircas": 43, "sgd": 43, "momentum": 43, "nesterov": 43, "categoricalcrossentropi": [43, 61, 63, 77], "compil": [43, 50, 61, 63, 65, 71, 74, 77], "train_loss": 43, "train_accuraci": 43, "test_loss": 43, "test_accuraci": 43, "4f": 43, "csv": [43, 50, 56, 57, 58], "416": 43, "104": 43, "0631": 43, "9856": [43, 61], "0568": 43, "9808": 43, "gptexplain": 44, "labels_train": [44, 45, 46, 48, 49, 52], "labels_test": [44, 45, 46, 48, 49, 52], "apikei": 44, "openai": 44, "api": 44, "sk": 44, "test_x": [44, 45, 46, 47, 52, 53, 57, 58], "150": 44, "slower": 44, "kmean": 44, "summar": 44, "readi": [44, 50, 54, 55], "deprec": [44, 66, 68, 77], "wish": [44, 50], "reproduc": 44, "previou": 44, "make_pipelin": 44, "with_mean": 44, "lassolars": 44, "pass": [44, 66, 77], "sample_weight": 44, "__sample_weight": 44, "alpha": 44, "original_alpha": 44, "sqrt": 44, "n_sampl": 44, "label_1": 44, "6503": 44, "associ": 44, "addition": 44, "impact": 44, "label_0": 44, "3756": 44, "125": 44, "necessari": [45, 46, 48, 54, 55], "1953": 45, "8647768803169436": 45, "1655": [46, 52], "pprint": 47, "valid": [47, 50, 53], "8518347919545525": 47, "fix": 48, "pdo": 49, "takeawai": 50, "instal": [50, 71, 74], "ml4ir": 50, "ltr": 50, "order": 50, "document": [50, 75], "pointwis": 50, "listwis": 50, "record": 50, "infer": 50, "validityrankingexplain": 50, "singh": 50, "khosla": 50, "anand": 50, "2020": [50, 77], "2004": 50, "13972": 50, "upgrad": 50, "nbformat": 50, "df_train": 50, "file_0": 50, "head": 50, "query_id": 50, "query_text": 50, "text_match_scor": 50, "page_views_scor": 50, "quality_scor": 50, "click": 50, "domain_id": 50, "domain_nam": 50, "name_match": 50, "query_2": 50, "mhs7a7rjb1y4bjt": 50, "473730": 50, "000000": 50, "00000": 50, "domain_2": 50, "063190": 50, "205381": 50, "30103": 50, "query_5": 50, "knjnwv": 50, "368108": 50, "030636": 50, "domain_0": 50, "370628": 50, "041261": 50, "366700": 50, "082535": 50, "333836": 50, "042572": 50, "325021": 50, "046478": 50, "featureconfig": 50, "yaml": 50, "config": 50, "activate_2020": 50, "feature_config": 50, "tfrecord": 50, "usag": 50, "charact": 50, "bilstm": 50, "vocablookup": 50, "modelconfig": 50, "model_config": 50, "read": 50, "architecture_kei": 50, "dnn": 50, "first_dens": 50, "first_dropout": 50, "second_dens": 50, "final_dens": 50, "null": 50, "data_format": 50, "data_dir": 50, "execution_mod": 50, "train_inference_evalu": 50, "loss_kei": 50, "softmax_cross_entropi": 50, "models_dir": 50, "explain_demo_2022": 50, "logs_dir": 50, "log": 50, "run_id": 50, "activate_demo": 50, "model_dir": 50, "local_io": 50, "localio": 50, "file_io": 50, "fileio": 50, "sequenceexamplefeatureconfig": 50, "relevance_model": 50, "relevancemodel": 50, "tfrecordtypekei": 50, "logger": 50, "getlogg": 50, "get_logg": 50, "setlevel": 50, "autograph": 50, "set_verbos": 50, "tf_cpp_min_log_level": 50, "get_inst": 50, "tfrecord_typ": 50, "sequence_exampl": 50, "feature_config_dict": 50, "read_yaml": 50, "get_train_featur": 50, "saniti": 50, "model_fil": 50, "final": 50, "output_nam": 50, "relevance_scor": 50, "is_compil": 50, "retrain": 50, "kmodel": 50, "load_model": 50, "infer_fn": 50, "signatur": 50, "serving_tfrecord": 50, "tfrecord_help": 50, "get_sequence_example_proto": 50, "features_df": 50, "fillna": 50, "renam": [50, 56, 57, 58], "serving_info": 50, "context_featur": 50, "sequence_featur": 50, "context_feature_nam": 50, "proto": 50, "groupbi": 50, "ranking_scor": 50, "se": 50, "constant": 50, "serializetostr": 50, "predicted_scor": 50, "reset_index": 50, "362720": 50, "tlaud": 50, "venv": 50, "lib": [50, 71, 74, 77], "python3": [50, 71, 74, 77], "site": [50, 71, 74, 77], "ipykernel_launch": 50, "settingwithcopywarn": 50, "loc": 50, "row_index": 50, "col_index": 50, "caveat": 50, "pydata": 50, "user_guid": 50, "versu": 50, "cwd": 50, "sy": 50, "11998416": 50, "19389412": 50, "20375773": 50, "17943792": 50, "11195529": 50, "1909707": 50, "5671": 50, "query_1487": 50, "qcz4xhln": 50, "227694": 50, "5672": 50, "016954": 50, "5673": 50, "query_1490": 50, "wynff89": 50, "474600": 50, "190735": 50, "5674": 50, "620355": 50, "143310": 50, "5675": 50, "508362": 50, "5676": 50, "sample_queri": 50, "trainabl": 50, "ranking_explain": 50, "21": [50, 55], "23": [50, 55], "top_featur": 50, "dict_kei": 50, "kendalltauresult": 50, "9999999999999999": 50, "pvalu": 50, "002777777777777778": 50, "kendal": 50, "grade": 50, "fig": 50, "ipython_figur": 50, "update_layout": 50, "autos": 50, "1800": 50, "load_boston": 51, "rf": [51, 55], "randomforestregressor": [51, 55], "mserror": [51, 55], "404": 51, "102": 51, "215751067843145": 51, "8446184553968985": 53, "fetch_california_h": 55, "medinc": 55, "houseag": 55, "averoom": 55, "avebedrm": 55, "aveoccup": 55, "latitud": 55, "3252": 55, "41": 55, "984127": 55, "023810": 55, "322": 55, "555556": 55, "37": 55, "88": 55, "3014": 55, "238137": 55, "971880": 55, "2401": 55, "109842": 55, "86": 55, "2574": 55, "288136": 55, "073446": 55, "496": 55, "802260": 55, "85": 55, "6431": 55, "817352": 55, "073059": 55, "558": 55, "547945": 55, "8462": 55, "281853": 55, "081081": 55, "565": 55, "181467": 55, "20635": 55, "5603": 55, "045455": 55, "133333": 55, "845": 55, "560606": 55, "48": [55, 65], "20636": 55, "5568": 55, "114035": 55, "315789": 55, "356": 55, "122807": 55, "49": 55, "20637": 55, "7000": 55, "205543": 55, "120092": 55, "1007": 55, "325635": 55, "43": 55, "20638": 55, "8672": 55, "329513": 55, "171920": 55, "741": 55, "123209": 55, "20639": 55, "3886": 55, "254717": 55, "162264": 55, "1387": 55, "616981": 55, "longitud": 55, "122": 55, "526": 55, "585": 55, "24": 55, "521": 55, "413": 55, "422": 55, "121": 55, "09": [55, 65], "781": 55, "771": 55, "923": 55, "847": 55, "894": 55, "20640": 55, "16512": 55, "4128": 55, "338793822760024": 55, "26970328040007546": 55, "residu": 55, "sythent": [56, 57, 58], "horizont": [56, 57, 58], "1970": [56, 57, 58], "928031": [56, 57, 58], "05": [56, 57, 58], "156620": [56, 57, 58], "390650": [56, 57, 58], "400804": [56, 57, 58], "874490": [56, 57, 58], "02": [56, 57, 58], "04": [56, 57, 58], "55": [56, 57, 58], "362724": [56, 57, 58], "657373": [56, 57, 58], "472341": [56, 57, 58], "033154": [56, 57, 58], "950466": [56, 57, 58], "9150": [56, 57, 58], "9300": [56, 57, 58], "percentil": [56, 57, 58], "90": [56, 57, 58], "anomaly_scor": [56, 57, 58], "sum": [56, 57, 58, 71, 74], "98": [56, 57, 62, 64, 75], "json": [59, 60, 69, 70, 72, 73, 76], "img_1": 59, "dog_cat": [59, 66, 73, 76], "img_2": 59, "img_3": 59, "visul": 59, "imagenet_class_index": [59, 60, 69, 70, 72, 73, 76], "read_fil": [59, 60, 69, 70, 72, 73, 76], "class_idx": [59, 60, 69, 70, 72, 73, 76], "sent": 59, "purpos": 60, "pyplot": [61, 62, 63, 64, 77], "plt": [61, 62, 63, 64, 77], "img_row": [61, 63, 77], "img_col": [61, 63, 77], "load_data": [61, 63, 77], "backend": [61, 63, 77], "image_data_format": [61, 63, 77], "channels_first": [61, 63, 77], "input_shap": [61, 63, 77], "train_img": [61, 63, 75, 77], "conv2d": [61, 62, 63, 64, 75, 77], "maxpooling2d": [61, 63, 77], "pool_siz": [61, 63, 77], "flatten": [61, 62, 63, 64, 75, 77], "validation_data": [61, 63, 77], "469": [61, 63, 77], "5m": [61, 63, 77], "1696": 61, "9492": 61, "val_loss": [61, 63, 77], "0436": 61, "val_accuraci": [61, 63, 77], "9855": [61, 77], "0478": 61, "0352": 61, "9882": 61, "0324": 61, "9896": [61, 63], "0315": 61, "9892": [61, 63], "0223": 61, "9929": 61, "0320": 61, "9887": [61, 63], "0179": 61, "9940": 61, "0314": 61, "9901": 61, "0141": 61, "9952": 61, "0365": 61, "9888": 61, "0113": 61, "9960": 61, "9903": [61, 77], "0109": [61, 63, 77], "9965": 61, "0297": [61, 63], "9918": 61, "0083": 61, "9972": 61, "0337": 61, "0072": [61, 77], "9976": 61, "0382": 61, "9895": [61, 63], "03824701905250549": 61, "9894999861717224": 61, "__len__": [62, 64, 75], "__getitem__": [62, 64, 75], "mnistnet": [62, 64, 75], "maxpool2d": [62, 64, 75], "fc_layer": [62, 64, 75], "320": [62, 64, 75], "train_load": [62, 64, 75], "test_load": [62, 64, 75], "lr": [62, 64, 75], "zero_grad": [62, 64, 75], "backward": [62, 64, 75], "correct_pr": [62, 64, 75], "total_pr": [62, 64, 75], "_": [62, 64, 75], "correct_count": [62, 64, 75], "1f": [62, 64, 75], "97": [62, 64], "1712": 63, "9493": 63, "0509": 63, "9837": 63, "0467": 63, "9857": 63, "0364": 63, "9880": 63, "0331": 63, "0323": [63, 77], "9884": 63, "0226": 63, "9927": 63, "0345": 63, "9890": 63, "0171": 63, "9942": 63, "0371": 63, "0150": 63, "9949": [63, 77], "9906": [63, 77], "9966": 63, "0428": 63, "0101": 63, "9967": 63, "0356": 63, "0086": 63, "9969": 63, "0393": 63, "0065": [63, 77], "9977": 63, "0399": 63, "9898": 63, "03988948091864586": 63, "989799976348877": 63, "vgg16": [65, 67, 68], "feature_visu": [65, 66, 67, 68], "featuremapvisu": [65, 66], "dog_cat_2": [65, 69, 72], "img_to_arrai": [65, 69, 72], "preprocess_input": [65, 69, 72], "2022": 65, "08": 65, "038022": 65, "core": 65, "platform": 65, "cpu_feature_guard": 65, "cc": 65, "193": 65, "oneapi": 65, "onednn": 65, "instruct": [65, 77], "critic": 65, "oper": 65, "avx2": 65, "fma": 65, "enabl": 65, "rebuild": 65, "flag": 65, "vgg": 66, "sinc": [66, 75], "enum": 66, "equival": 66, "resnet50_weight": 66, "imagenet1k_v1": 66, "layer2": 66, "neuron": [67, 68], "direct": [67, 68], "visit": [67, 68], "distil": [67, 68], "pub": [67, 68], "featurevisu": [67, 68], "maxim": [67, 68], "fft": 68, "precondit": 68, "use_fft": 68, "irfft": 68, "releas": [68, 71, 74], "ifft": 68, "trigger": [68, 71, 74], "intern": [68, 71, 74], "aten": 68, "src": 68, "nativ": 68, "spectralop": 68, "cpp": [68, 71, 74], "602": 68, "mobilenet_v2": [69, 72], "mobilenetv2": [69, 72], "include_top": [69, 72], "input_img": [69, 76], "top_indic": [69, 72], "argsort": [69, 72], "243": [69, 72], "242": [69, 72], "boxer": [69, 72], "282": [69, 72], "tabbi": [69, 72], "292": [69, 72], "tiger": [69, 72], "lavi": [71, 74], "soon": [71, 74], "multi_input": [71, 74], "multiinput": [71, 74], "vision_languag": [71, 74], "blipitm": [71, 74], "load_processor": [71, 74], "anaconda3": [71, 74, 77], "env": [71, 74], "conda_env_py3": [71, 74], "userwarn": [71, 74], "nvidia": [71, 74], "driver": [71, 74], "system": [71, 74], "old": [71, 74, 75], "10010": [71, 74], "updat": [71, 74, 77], "gpu": [71, 74], "url": [71, 74], "aspx": [71, 74], "altern": [71, 74], "c10": [71, 74], "cudafunct": [71, 74], "109": [71, 74], "480": [71, 74], "girl_dog": [71, 74], "girl": [71, 74], "plai": [71, 74], "her": [71, 74], "beach": [71, 74], "blip": [71, 74], "pretrained_path": [71, 74], "storag": [71, 74], "googleapi": [71, 74], "sfr": [71, 74], "model_base_retrieval_coco": [71, 74], "pth": [71, 74], "vit": [71, 74], "image_processor": [71, 74], "blip_image_ev": [71, 74], "image_s": [71, 74], "384": [71, 74], "text_processor": [71, 74], "blip_capt": [71, 74], "init_token": [71, 74], "text_encod": [71, 74], "base_model": 71, "crossattent": 71, "attention_probs_lay": 71, "inception_v3": [73, 76], "word_embed": 74, "cl": 74, "96": 75, "bilinear": 75, "align_corn": 75, "2665": 75, "8901166666666667": 75, "incept": 76, "probs_top_5": 76, "topk": 76, "93592954": 76, "239": [76, 77], "bernese_mountain_dog": 76, "038448237": 76, "241": 76, "entlebuch": 76, "023756476": 76, "appenzel": 76, "0018181928": 76, "238": 76, "greater_swiss_mountain_dog": 76, "113302e": 76, "06": 76, "214": 76, "gordon_sett": 76, "batch_predict": 76, "prob": 76, "hide_color": 76, "1724": 77, "9487": 77, "0458": 77, "0466": 77, "9852": 77, "0333": 77, "9885": 77, "0298": 77, "9891": 77, "0207": 77, "9933": 77, "0286": 77, "0158": 77, "0295": 77, "9907": 77, "0125": 77, "9962": 77, "0290": 77, "9904": 77, "9963": 77, "0283": 77, "9902": 77, "0090": 77, "9970": 77, "9978": 77, "0317": 77, "9912": 77, "9974": 77, "0359": 77, "9915": 77, "03591015189886093": 77, "9915000200271606": 77, "_deep": 77, "deep_tf": 77, "set_learning_phas": 77, "__call__": 77}, "objects": {"": [[1, 0, 0, "-", "omnixai"]], "omnixai": [[2, 0, 0, "-", "data"], [3, 0, 0, "-", "explainers"], [21, 0, 0, "-", "explanations"], [26, 0, 0, "-", "preprocessing"], [27, 0, 0, "-", "visualization"]], "omnixai.data": [[2, 0, 0, "-", "base"], [2, 0, 0, "-", "image"], [2, 0, 0, "-", "tabular"], [2, 0, 0, "-", "text"], [2, 0, 0, "-", "timeseries"]], "omnixai.data.base": [[2, 1, 1, "", "Data"]], "omnixai.data.base.Data": [[2, 2, 1, "", "data_type"], [2, 3, 1, "", "values"]], "omnixai.data.image": [[2, 1, 1, "", "Image"]], "omnixai.data.image.Image": [[2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 2, 1, "", "image_shape"], [2, 2, 1, "", "shape"], [2, 3, 1, "", "to_numpy"], [2, 3, 1, "", "to_pil"], [2, 2, 1, "", "values"]], "omnixai.data.tabular": [[2, 1, 1, "", "Tabular"]], "omnixai.data.tabular.Tabular": [[2, 2, 1, "", "categorical_columns"], [2, 2, 1, "", "columns"], [2, 2, 1, "", "continuous_columns"], [2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 2, 1, "", "feature_columns"], [2, 3, 1, "", "get_continuous_bounds"], [2, 3, 1, "", "get_continuous_medians"], [2, 3, 1, "", "get_target_column"], [2, 3, 1, "", "iloc"], [2, 3, 1, "", "remove_target_column"], [2, 2, 1, "", "shape"], [2, 2, 1, "", "target_column"], [2, 3, 1, "", "to_numpy"], [2, 3, 1, "", "to_pd"], [2, 2, 1, "", "values"]], "omnixai.data.text": [[2, 1, 1, "", "Text"]], "omnixai.data.text.Text": [[2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 3, 1, "", "split"], [2, 3, 1, "", "to_str"], [2, 3, 1, "", "to_tokens"], [2, 2, 1, "", "values"]], "omnixai.data.timeseries": [[2, 1, 1, "", "Timeseries"]], "omnixai.data.timeseries.Timeseries": [[2, 2, 1, "", "batch_size"], [2, 2, 1, "", "columns"], [2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 3, 1, "", "from_pd"], [2, 2, 1, "", "index"], [2, 2, 1, "", "shape"], [2, 3, 1, "", "to_numpy"], [2, 3, 1, "", "to_pd"], [2, 2, 1, "", "ts_len"], [2, 2, 1, "", "values"]], "omnixai.explainers": [[3, 0, 0, "-", "base"], [4, 0, 0, "-", "data"], [9, 0, 0, "-", "prediction"]], "omnixai.explainers.base": [[3, 1, 1, "", "AutoExplainerBase"], [3, 1, 1, "", "ExplainerABCMeta"], [3, 1, 1, "", "ExplainerBase"]], "omnixai.explainers.base.AutoExplainerBase": [[3, 3, 1, "", "explain"], [3, 3, 1, "", "explain_global"], [3, 2, 1, "", "explainer_names"], [3, 3, 1, "", "list_explainers"]], "omnixai.explainers.base.ExplainerBase": [[3, 3, 1, "", "explain"], [3, 2, 1, "", "explanation_type"]], "omnixai.explainers.data": [[4, 1, 1, "", "ChiSquare"], [4, 1, 1, "", "CorrelationAnalyzer"], [4, 1, 1, "", "DataAnalyzer"], [4, 1, 1, "", "ImbalanceAnalyzer"], [4, 1, 1, "", "MutualInformation"], [4, 0, 0, "-", "auto"], [4, 0, 0, "-", "chi_square"], [4, 0, 0, "-", "correlation"], [4, 0, 0, "-", "imbalance"], [4, 0, 0, "-", "mutual_info"]], "omnixai.explainers.data.ChiSquare": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.CorrelationAnalyzer": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.DataAnalyzer": [[4, 3, 1, "", "explain"], [4, 3, 1, "", "list_explainers"]], "omnixai.explainers.data.ImbalanceAnalyzer": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.MutualInformation": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.auto": [[4, 1, 1, "", "DataAnalyzer"]], "omnixai.explainers.data.auto.DataAnalyzer": [[4, 3, 1, "", "explain"], [4, 3, 1, "", "list_explainers"]], "omnixai.explainers.data.chi_square": [[4, 1, 1, "", "ChiSquare"]], "omnixai.explainers.data.chi_square.ChiSquare": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.correlation": [[4, 1, 1, "", "CorrelationAnalyzer"]], "omnixai.explainers.data.correlation.CorrelationAnalyzer": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.imbalance": [[4, 1, 1, "", "ImbalanceAnalyzer"]], "omnixai.explainers.data.imbalance.ImbalanceAnalyzer": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.mutual_info": [[4, 1, 1, "", "MutualInformation"]], "omnixai.explainers.data.mutual_info.MutualInformation": [[4, 4, 1, "", "alias"], [4, 3, 1, "", "explain"], [4, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp": [[6, 0, 0, "-", "agnostic"], [5, 0, 0, "-", "auto"], [7, 0, 0, "-", "counterfactual"], [8, 0, 0, "-", "specific"]], "omnixai.explainers.nlp.agnostic": [[6, 0, 0, "-", "l2x"], [6, 0, 0, "-", "lime"], [6, 0, 0, "-", "shap"]], "omnixai.explainers.nlp.agnostic.l2x": [[6, 1, 1, "", "DefaultPredictionModel"], [6, 1, 1, "", "DefaultSelectionModel"], [6, 1, 1, "", "L2XText"]], "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "omnixai.explainers.nlp.agnostic.l2x.L2XText": [[6, 4, 1, "", "alias"], [6, 3, 1, "", "explain"], [6, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp.agnostic.lime": [[6, 1, 1, "", "LimeText"]], "omnixai.explainers.nlp.agnostic.lime.LimeText": [[6, 4, 1, "", "alias"], [6, 3, 1, "", "explain"], [6, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp.agnostic.shap": [[6, 1, 1, "", "ShapText"]], "omnixai.explainers.nlp.agnostic.shap.ShapText": [[6, 4, 1, "", "alias"], [6, 3, 1, "", "explain"], [6, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp.auto": [[5, 1, 1, "", "NLPExplainer"]], "omnixai.explainers.nlp.auto.NLPExplainer": [[5, 3, 1, "", "list_explainers"]], "omnixai.explainers.nlp.counterfactual": [[7, 0, 0, "-", "polyjuice"]], "omnixai.explainers.nlp.counterfactual.polyjuice": [[7, 1, 1, "", "Polyjuice"]], "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice": [[7, 4, 1, "", "alias"], [7, 3, 1, "", "explain"], [7, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp.specific": [[8, 0, 0, "-", "ig"]], "omnixai.explainers.nlp.specific.ig": [[8, 1, 1, "", "IntegratedGradientText"]], "omnixai.explainers.nlp.specific.ig.IntegratedGradientText": [[8, 4, 1, "", "alias"], [8, 3, 1, "", "explain"], [8, 4, 1, "", "explanation_type"]], "omnixai.explainers.prediction": [[9, 1, 1, "", "PredictionAnalyzer"]], "omnixai.explainers.prediction.PredictionAnalyzer": [[9, 4, 1, "", "alias"], [9, 3, 1, "", "explain"], [9, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular": [[11, 0, 0, "-", "agnostic"], [10, 0, 0, "-", "auto"], [10, 0, 0, "-", "base"], [12, 0, 0, "-", "counterfactual"], [13, 0, 0, "-", "specific"]], "omnixai.explainers.tabular.agnostic.L2X": [[11, 0, 0, "-", "l2x"]], "omnixai.explainers.tabular.agnostic.L2X.l2x": [[11, 1, 1, "", "DefaultPredictionModel"], [11, 1, 1, "", "DefaultSelectionModel"], [11, 1, 1, "", "L2XTabular"]], "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel": [[11, 3, 1, "", "forward"], [11, 4, 1, "", "training"]], "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel": [[11, 3, 1, "", "forward"], [11, 4, 1, "", "training"]], "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular": [[11, 4, 1, "", "alias"], [11, 3, 1, "", "explain"], [11, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic": [[11, 0, 0, "-", "lime"], [11, 0, 0, "-", "pdp"], [11, 0, 0, "-", "sensitivity"], [11, 0, 0, "-", "shap"]], "omnixai.explainers.tabular.agnostic.lime": [[11, 1, 1, "", "LimeTabular"]], "omnixai.explainers.tabular.agnostic.lime.LimeTabular": [[11, 4, 1, "", "alias"], [11, 3, 1, "", "explain"], [11, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic.pdp": [[11, 1, 1, "", "PartialDependenceTabular"]], "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular": [[11, 4, 1, "", "alias"], [11, 3, 1, "", "explain"], [11, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic.sensitivity": [[11, 1, 1, "", "SensitivityAnalysisTabular"]], "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular": [[11, 4, 1, "", "alias"], [11, 3, 1, "", "explain"], [11, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic.shap": [[11, 1, 1, "", "ShapTabular"]], "omnixai.explainers.tabular.agnostic.shap.ShapTabular": [[11, 4, 1, "", "alias"], [11, 3, 1, "", "explain"], [11, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.auto": [[10, 1, 1, "", "TabularExplainer"]], "omnixai.explainers.tabular.auto.TabularExplainer": [[10, 3, 1, "", "list_explainers"]], "omnixai.explainers.tabular.base": [[10, 1, 1, "", "SklearnBase"], [10, 1, 1, "", "TabularExplainer"]], "omnixai.explainers.tabular.base.SklearnBase": [[10, 3, 1, "", "class_names"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_proba"]], "omnixai.explainers.tabular.counterfactual": [[12, 0, 0, "-", "ce"]], "omnixai.explainers.tabular.counterfactual.ce": [[12, 1, 1, "", "CounterfactualExplainer"], [12, 1, 1, "", "CounterfactualOptimizer"]], "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer": [[12, 4, 1, "", "alias"], [12, 3, 1, "", "explain"], [12, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.counterfactual.ce.CounterfactualOptimizer": [[12, 3, 1, "", "optimize"]], "omnixai.explainers.tabular.counterfactual.mace": [[12, 0, 0, "-", "mace"]], "omnixai.explainers.tabular.counterfactual.mace.mace": [[12, 1, 1, "", "MACEExplainer"]], "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer": [[12, 4, 1, "", "alias"], [12, 3, 1, "", "explain"], [12, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.specific": [[13, 0, 0, "-", "decision_tree"], [13, 0, 0, "-", "ig"], [13, 0, 0, "-", "linear"], [13, 0, 0, "-", "shap_tree"]], "omnixai.explainers.tabular.specific.decision_tree": [[13, 1, 1, "", "TreeBase"], [13, 1, 1, "", "TreeClassifier"], [13, 1, 1, "", "TreeRegressor"]], "omnixai.explainers.tabular.specific.decision_tree.TreeBase": [[13, 3, 1, "", "explain"], [13, 4, 1, "", "explanation_type"], [13, 3, 1, "", "fit"]], "omnixai.explainers.tabular.specific.decision_tree.TreeClassifier": [[13, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.decision_tree.TreeRegressor": [[13, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.ig": [[13, 1, 1, "", "IntegratedGradient"], [13, 1, 1, "", "IntegratedGradientTabular"]], "omnixai.explainers.tabular.specific.ig.IntegratedGradient": [[13, 3, 1, "", "compute_integrated_gradients"]], "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular": [[13, 4, 1, "", "alias"], [13, 3, 1, "", "explain"], [13, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.specific.linear": [[13, 1, 1, "", "LinearBase"], [13, 1, 1, "", "LinearRegression"], [13, 1, 1, "", "LogisticRegression"]], "omnixai.explainers.tabular.specific.linear.LinearBase": [[13, 3, 1, "", "explain"], [13, 4, 1, "", "explanation_type"], [13, 3, 1, "", "fit"]], "omnixai.explainers.tabular.specific.linear.LinearRegression": [[13, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.linear.LogisticRegression": [[13, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.shap_tree": [[13, 1, 1, "", "ShapTreeTabular"]], "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular": [[13, 4, 1, "", "alias"], [13, 3, 1, "", "explain"], [13, 4, 1, "", "explanation_type"], [13, 3, 1, "", "fit"]], "omnixai.explainers.timeseries": [[15, 0, 0, "-", "agnostic"], [14, 0, 0, "-", "auto"], [16, 0, 0, "-", "counterfactual"]], "omnixai.explainers.timeseries.agnostic": [[15, 0, 0, "-", "shap"]], "omnixai.explainers.timeseries.agnostic.shap": [[15, 1, 1, "", "ShapTimeseries"]], "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries": [[15, 4, 1, "", "alias"], [15, 3, 1, "", "explain"], [15, 4, 1, "", "explanation_type"]], "omnixai.explainers.timeseries.auto": [[14, 1, 1, "", "TimeseriesExplainer"]], "omnixai.explainers.timeseries.auto.TimeseriesExplainer": [[14, 3, 1, "", "list_explainers"]], "omnixai.explainers.timeseries.counterfactual": [[16, 0, 0, "-", "ce"], [16, 0, 0, "-", "mace"]], "omnixai.explainers.timeseries.counterfactual.ce": [[16, 1, 1, "", "CounterfactualExplainer"], [16, 1, 1, "", "CounterfactualOptimizer"]], "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer": [[16, 4, 1, "", "alias"], [16, 3, 1, "", "explain"], [16, 4, 1, "", "explanation_type"]], "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualOptimizer": [[16, 3, 1, "", "optimize"]], "omnixai.explainers.timeseries.counterfactual.mace": [[16, 1, 1, "", "MACEExplainer"]], "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer": [[16, 4, 1, "", "alias"], [16, 3, 1, "", "explain"], [16, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision": [[18, 0, 0, "-", "agnostic"], [17, 0, 0, "-", "auto"], [19, 0, 0, "-", "counterfactual"], [20, 0, 0, "-", "specific"]], "omnixai.explainers.vision.agnostic": [[18, 0, 0, "-", "l2x"], [18, 0, 0, "-", "lime"], [18, 0, 0, "-", "pdp"], [18, 0, 0, "-", "shap"]], "omnixai.explainers.vision.agnostic.l2x": [[18, 1, 1, "", "DefaultPredictionModel"], [18, 1, 1, "", "DefaultSelectionModel"], [18, 1, 1, "", "L2XImage"]], "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel": [[18, 3, 1, "", "forward"], [18, 4, 1, "", "training"]], "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel": [[18, 3, 1, "", "forward"], [18, 3, 1, "", "postprocess"], [18, 4, 1, "", "training"]], "omnixai.explainers.vision.agnostic.l2x.L2XImage": [[18, 4, 1, "", "alias"], [18, 3, 1, "", "explain"], [18, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.agnostic.lime": [[18, 1, 1, "", "LimeImage"]], "omnixai.explainers.vision.agnostic.lime.LimeImage": [[18, 4, 1, "", "alias"], [18, 3, 1, "", "explain"], [18, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.agnostic.pdp": [[18, 1, 1, "", "PartialDependenceImage"]], "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage": [[18, 4, 1, "", "alias"], [18, 3, 1, "", "explain"], [18, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.agnostic.shap": [[18, 1, 1, "", "ShapImage"]], "omnixai.explainers.vision.agnostic.shap.ShapImage": [[18, 4, 1, "", "alias"], [18, 3, 1, "", "explain"], [18, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.auto": [[17, 1, 1, "", "VisionExplainer"]], "omnixai.explainers.vision.auto.VisionExplainer": [[17, 3, 1, "", "list_explainers"]], "omnixai.explainers.vision.counterfactual": [[19, 0, 0, "-", "ce"]], "omnixai.explainers.vision.counterfactual.ce": [[19, 1, 1, "", "CounterfactualExplainer"]], "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer": [[19, 4, 1, "", "alias"], [19, 3, 1, "", "explain"], [19, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific": [[20, 0, 0, "-", "cem"], [20, 0, 0, "-", "ig"]], "omnixai.explainers.vision.specific.cem": [[20, 1, 1, "", "CEMOptimizer"], [20, 1, 1, "", "ContrastiveExplainer"]], "omnixai.explainers.vision.specific.cem.CEMOptimizer": [[20, 3, 1, "", "pn_optimize"], [20, 3, 1, "", "pp_optimize"]], "omnixai.explainers.vision.specific.cem.ContrastiveExplainer": [[20, 4, 1, "", "alias"], [20, 3, 1, "", "explain"], [20, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.gradcam": [[20, 0, 0, "-", "gradcam"]], "omnixai.explainers.vision.specific.gradcam.gradcam": [[20, 1, 1, "", "GradCAM"], [20, 1, 1, "", "GradCAMPlus"]], "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM": [[20, 4, 1, "", "alias"], [20, 3, 1, "", "explain"], [20, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus": [[20, 4, 1, "", "alias"], [20, 3, 1, "", "explain"], [20, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.ig": [[20, 1, 1, "", "IntegratedGradientImage"]], "omnixai.explainers.vision.specific.ig.IntegratedGradientImage": [[20, 4, 1, "", "alias"], [20, 3, 1, "", "explain"], [20, 4, 1, "", "explanation_type"]], "omnixai.explanations": [[21, 0, 0, "-", "base"], [22, 0, 0, "-", "image"], [23, 0, 0, "-", "tabular"], [24, 0, 0, "-", "text"], [25, 0, 0, "-", "timeseries"]], "omnixai.explanations.base": [[21, 1, 1, "", "DashFigure"], [21, 1, 1, "", "ExplanationBase"], [21, 1, 1, "", "PredictedResults"]], "omnixai.explanations.base.DashFigure": [[21, 3, 1, "", "show"], [21, 3, 1, "", "to_html"], [21, 3, 1, "", "to_html_div"]], "omnixai.explanations.base.ExplanationBase": [[21, 3, 1, "", "dump"], [21, 3, 1, "", "dumps"], [21, 3, 1, "", "get_explanations"], [21, 3, 1, "", "ipython_plot"], [21, 3, 1, "", "load"], [21, 3, 1, "", "loads"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "plotly_plot"]], "omnixai.explanations.base.PredictedResults": [[21, 3, 1, "", "get_explanations"], [21, 3, 1, "", "ipython_plot"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image": [[22, 0, 0, "-", "contrast"], [22, 0, 0, "-", "counterfactual"], [22, 0, 0, "-", "mask"], [22, 0, 0, "-", "pixel_importance"]], "omnixai.explanations.image.contrast": [[22, 1, 1, "", "ContrastiveExplanation"]], "omnixai.explanations.image.contrast.ContrastiveExplanation": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image.counterfactual": [[22, 1, 1, "", "CFExplanation"]], "omnixai.explanations.image.counterfactual.CFExplanation": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image.mask": [[22, 1, 1, "", "MaskExplanation"]], "omnixai.explanations.image.mask.MaskExplanation": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image.pixel_importance": [[22, 1, 1, "", "PixelImportance"]], "omnixai.explanations.image.pixel_importance.PixelImportance": [[22, 3, 1, "", "add"], [22, 3, 1, "", "get_explanations"], [22, 3, 1, "", "ipython_plot"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular": [[23, 0, 0, "-", "correlation"], [23, 0, 0, "-", "counterfactual"], [23, 0, 0, "-", "feature_importance"], [23, 0, 0, "-", "imbalance"], [23, 0, 0, "-", "linear"], [23, 0, 0, "-", "pdp"], [23, 0, 0, "-", "sensitivity"], [23, 0, 0, "-", "tree"]], "omnixai.explanations.tabular.correlation": [[23, 1, 1, "", "CorrelationExplanation"]], "omnixai.explanations.tabular.correlation.CorrelationExplanation": [[23, 3, 1, "", "add"], [23, 3, 1, "", "get_explanations"], [23, 3, 1, "", "ipython_plot"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.counterfactual": [[23, 1, 1, "", "CFExplanation"]], "omnixai.explanations.tabular.counterfactual.CFExplanation": [[23, 3, 1, "", "add"], [23, 3, 1, "", "get_explanations"], [23, 3, 1, "", "ipython_plot"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.feature_importance": [[23, 1, 1, "", "FeatureImportance"], [23, 1, 1, "", "GlobalFeatureImportance"]], "omnixai.explanations.tabular.feature_importance.FeatureImportance": [[23, 3, 1, "", "add"], [23, 3, 1, "", "get_explanations"], [23, 3, 1, "", "ipython_plot"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance": [[23, 3, 1, "", "add"], [23, 3, 1, "", "get_explanations"], [23, 3, 1, "", "ipython_plot"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.imbalance": [[23, 1, 1, "", "ImbalanceExplanation"]], "omnixai.explanations.tabular.imbalance.ImbalanceExplanation": [[23, 3, 1, "", "add"], [23, 3, 1, "", "get_explanations"], [23, 3, 1, "", "ipython_plot"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.linear": [[23, 1, 1, "", "LinearExplanation"]], "omnixai.explanations.tabular.linear.LinearExplanation": [[23, 3, 1, "", "add"], [23, 3, 1, "", "get_explanations"], [23, 3, 1, "", "ipython_plot"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.pdp": [[23, 1, 1, "", "PDPExplanation"]], "omnixai.explanations.tabular.pdp.PDPExplanation": [[23, 3, 1, "", "add"], [23, 3, 1, "", "get_explanations"], [23, 3, 1, "", "ipython_plot"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.sensitivity": [[23, 1, 1, "", "SensitivityExplanation"]], "omnixai.explanations.tabular.sensitivity.SensitivityExplanation": [[23, 3, 1, "", "add"], [23, 3, 1, "", "get_explanations"], [23, 3, 1, "", "ipython_plot"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.tree": [[23, 1, 1, "", "TreeExplanation"]], "omnixai.explanations.tabular.tree.TreeExplanation": [[23, 3, 1, "", "add_global"], [23, 3, 1, "", "add_local"], [23, 3, 1, "", "get_explanations"], [23, 3, 1, "", "ipython_plot"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "plotly_plot"]], "omnixai.explanations.text": [[24, 0, 0, "-", "word_importance"]], "omnixai.explanations.text.word_importance": [[24, 1, 1, "", "WordImportance"]], "omnixai.explanations.text.word_importance.WordImportance": [[24, 3, 1, "", "add"], [24, 3, 1, "", "get_explanations"], [24, 3, 1, "", "ipython_plot"], [24, 3, 1, "", "plot"], [24, 3, 1, "", "plotly_plot"]], "omnixai.explanations.timeseries": [[25, 0, 0, "-", "counterfactual"], [25, 0, 0, "-", "feature_importance"]], "omnixai.explanations.timeseries.counterfactual": [[25, 1, 1, "", "CFExplanation"]], "omnixai.explanations.timeseries.counterfactual.CFExplanation": [[25, 3, 1, "", "add"], [25, 3, 1, "", "get_explanations"], [25, 3, 1, "", "ipython_plot"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "plotly_plot"]], "omnixai.explanations.timeseries.feature_importance": [[25, 1, 1, "", "FeatureImportance"]], "omnixai.explanations.timeseries.feature_importance.FeatureImportance": [[25, 3, 1, "", "add"], [25, 3, 1, "", "get_explanations"], [25, 3, 1, "", "ipython_plot"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "plotly_plot"]], "omnixai.preprocessing": [[26, 0, 0, "-", "base"], [26, 0, 0, "-", "encode"], [26, 0, 0, "-", "fill"], [26, 0, 0, "-", "image"], [26, 0, 0, "-", "normalize"], [26, 0, 0, "-", "pipeline"], [26, 0, 0, "-", "tabular"], [26, 0, 0, "-", "text"]], "omnixai.preprocessing.base": [[26, 1, 1, "", "Identity"], [26, 1, 1, "", "TransformBase"]], "omnixai.preprocessing.base.Identity": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.base.TransformBase": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.encode": [[26, 1, 1, "", "KBins"], [26, 1, 1, "", "LabelEncoder"], [26, 1, 1, "", "OneHot"], [26, 1, 1, "", "Ordinal"]], "omnixai.preprocessing.encode.KBins": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.encode.LabelEncoder": [[26, 2, 1, "", "categories"], [26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.encode.OneHot": [[26, 2, 1, "", "categories"], [26, 3, 1, "", "fit"], [26, 3, 1, "", "get_feature_names"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.encode.Ordinal": [[26, 2, 1, "", "categories"], [26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.fill": [[26, 1, 1, "", "FillNaN"], [26, 1, 1, "", "FillNaNTabular"]], "omnixai.preprocessing.fill.FillNaN": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.fill.FillNaNTabular": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.image": [[26, 1, 1, "", "Normalize"], [26, 1, 1, "", "Resize"], [26, 1, 1, "", "Round2Int"], [26, 1, 1, "", "Scale"]], "omnixai.preprocessing.image.Normalize": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.image.Resize": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.image.Round2Int": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.image.Scale": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.normalize": [[26, 1, 1, "", "MinMax"], [26, 1, 1, "", "Scale"], [26, 1, 1, "", "Standard"]], "omnixai.preprocessing.normalize.MinMax": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.normalize.Scale": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.normalize.Standard": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.pipeline": [[26, 1, 1, "", "Pipeline"]], "omnixai.preprocessing.pipeline.Pipeline": [[26, 3, 1, "", "dump"], [26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "load"], [26, 4, 1, "", "name"], [26, 3, 1, "", "step"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.tabular": [[26, 1, 1, "", "TabularTransform"]], "omnixai.preprocessing.tabular.TabularTransform": [[26, 2, 1, "", "categories"], [26, 2, 1, "", "class_names"], [26, 3, 1, "", "decompose"], [26, 3, 1, "", "fit"], [26, 3, 1, "", "get_feature_names"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.text": [[26, 1, 1, "", "Tfidf"], [26, 1, 1, "", "Word2Id"]], "omnixai.preprocessing.text.Tfidf": [[26, 3, 1, "", "fit"], [26, 3, 1, "", "get_feature_names"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"]], "omnixai.preprocessing.text.Word2Id": [[26, 4, 1, "", "PAD"], [26, 4, 1, "", "START"], [26, 4, 1, "", "UNK"], [26, 3, 1, "", "fit"], [26, 3, 1, "", "invert"], [26, 3, 1, "", "transform"], [26, 2, 1, "", "vocab_size"]], "omnixai.sampler": [[26, 0, 0, "-", "tabular"]], "omnixai.sampler.tabular": [[26, 1, 1, "", "Sampler"]], "omnixai.sampler.tabular.Sampler": [[26, 3, 1, "", "oversample"], [26, 3, 1, "", "subsample"], [26, 3, 1, "", "undersample"]], "omnixai.visualization": [[27, 0, 0, "-", "dashboard"]], "omnixai.visualization.dashboard": [[27, 1, 1, "", "Dashboard"]], "omnixai.visualization.dashboard.Dashboard": [[27, 3, 1, "", "show"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "omnixai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 41], "": 0, "document": 0, "introduct": [0, 1], "capabl": 0, "featur": [0, 29, 65, 66, 67, 68], "comparison": 0, "competitor": 0, "instal": [0, 1], "get": [0, 1], "start": [0, 1], "how": [0, 1], "contribut": [0, 1], "content": 0, "indic": 0, "tabl": 0, "an": 1, "explan": [1, 21, 22, 23, 24, 25, 33, 34, 43, 48, 57, 60, 61, 62, 63, 64], "toolbox": 1, "librari": 1, "design": 1, "more": 1, "exampl": [1, 28, 30, 31], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "differ": [1, 3], "data": [1, 2, 4, 30, 31], "type": 1, "preprocess": [1, 26, 31], "function": 1, "support": 1, "method": 1, "result": [1, 21], "dashboard": [1, 27], "visual": [1, 27, 65, 66, 67, 68, 71, 74], "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "base": [2, 3, 10, 21, 26], "tabular": [2, 10, 11, 12, 13, 23, 26, 28, 30, 31], "imag": [2, 22, 26, 30, 31, 59, 69, 70, 72, 73, 76], "text": [2, 24, 26, 30, 31, 33, 37, 38], "timeseri": [2, 14, 15, 16, 25, 28], "explain": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28, 37, 44, 45, 75], "task": [3, 71, 74], "auto": [4, 5, 10, 14, 17], "correl": [4, 23], "imbal": [4, 23], "mutual_info": 4, "chi_squar": 4, "nlp": [5, 6, 7, 8, 28], "subpackag": [5, 10, 14, 17], "agnost": [6, 11, 15, 18], "lime": [6, 11, 18, 38, 46, 76], "shap": [6, 11, 15, 18, 39, 52, 58, 77], "l2x": [6, 11, 18, 37, 45, 75], "counterfactu": [7, 12, 16, 19, 22, 23, 25, 33, 34, 43, 48, 57, 60, 61, 62], "polyjuic": 7, "specif": [8, 13, 20], "ig": [8, 13, 20], "predict": [9, 44, 45, 46, 47, 48, 52, 53, 54, 55], "pdp": [11, 18, 23], "sensit": [11, 23, 51], "mace": [12, 16, 48], "ce": [12, 16, 19], "linear": [13, 23], "decision_tre": 13, "shap_tre": 13, "vision": [17, 18, 19, 20, 28], "gradcam": 20, "cem": 20, "three": 21, "categori": 21, "pixel_import": 22, "mask": 22, "contrast": [22, 63, 64], "feature_import": [23, 25], "tree": [23, 53], "word_import": 24, "encod": 26, "normal": 26, "fill": 26, "pipelin": 26, "sampler": 26, "tutori": 28, "code": 28, "basic": 28, "applic": 28, "dataanalyz": 29, "analysi": [29, 32, 39, 51], "object": 30, "time": [30, 56, 57, 58], "seri": [30, 56, 57, 58], "nlpexplain": [32, 40], "sentiment": [32, 39], "classif": [33, 37, 38, 54, 59, 69, 70, 72, 73, 76], "question": 34, "answer": 34, "integr": [35, 36, 72, 73, 74], "gradient": [35, 36, 72, 73, 74], "imdb": [35, 36, 40], "dataset": [35, 36, 40, 43], "tensorflow": [35, 61, 63, 65, 67, 69, 72], "pytorch": [36, 62, 64, 66, 68, 70, 73], "learn": [37, 45, 50, 75], "ml": 41, "workflow": 41, "accumul": 42, "local": 42, "effect": 42, "al": 42, "diabet": 43, "gpt": 44, "incom": [44, 45, 46, 47, 48, 52, 53, 54], "logist": 47, "regress": [47, 55], "pariti": 49, "depend": 49, "plot": 49, "rank": 50, "expan": 50, "demo": 50, "morri": 51, "decis": 53, "tabularexplain": [54, 55], "hous": 55, "price": 55, "timeseriesexplain": 56, "anomali": [56, 57, 58], "detect": [56, 57, 58], "visionexplain": 59, "imagenet": 60, "mnist": [61, 62, 63, 64, 75, 77], "map": [65, 66], "grad": [69, 70, 71], "cam": [69, 70, 71], "languag": [71, 74]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 3, "sphinx": 57}, "alltitles": {"Welcome to OmniXAI\u2019s documentation!": [[0, "welcome-to-omnixai-s-documentation"]], "Introduction": [[0, "introduction"], [1, "introduction"]], "Capabilities and Features": [[0, "capabilities-and-features"]], "Comparison with Competitors": [[0, "comparison-with-competitors"]], "Installation": [[0, "installation"], [1, "installation"]], "Getting Started": [[0, "getting-started"], [1, "getting-started"]], "How to Contribute": [[0, "how-to-contribute"], [1, "how-to-contribute"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "OmniXAI: An Explanation Toolbox": [[1, "omnixai-an-explanation-toolbox"]], "Library Design": [[1, "library-design"]], "More Examples": [[1, "more-examples"]], "Modules for Different Data Types": [[1, "modules-for-different-data-types"]], "Preprocessing Functions": [[1, "preprocessing-functions"]], "Supported Explanation Methods": [[1, "supported-explanation-methods"]], "Modules for Explanation Results": [[1, "modules-for-explanation-results"]], "Dashboard for Visualization": [[1, "dashboard-for-visualization"]], "omnixai.data package": [[2, "module-omnixai.data"]], "omnixai.data.base module": [[2, "module-omnixai.data.base"]], "omnixai.data.tabular module": [[2, "module-omnixai.data.tabular"]], "omnixai.data.image module": [[2, "module-omnixai.data.image"]], "omnixai.data.text module": [[2, "module-omnixai.data.text"]], "omnixai.data.timeseries module": [[2, "module-omnixai.data.timeseries"]], "omnixai.explainers package": [[3, "omnixai-explainers-package"]], "omnixai.explainers.base module": [[3, "module-omnixai.explainers.base"]], "Explainers for different tasks": [[3, "explainers-for-different-tasks"]], "omnixai.explainers.data package": [[4, "module-omnixai.explainers.data"]], "omnixai.explainers.data.auto module": [[4, "module-omnixai.explainers.data.auto"]], "omnixai.explainers.data.correlation module": [[4, "module-omnixai.explainers.data.correlation"]], "omnixai.explainers.data.imbalance module": [[4, "module-omnixai.explainers.data.imbalance"]], "omnixai.explainers.data.mutual_info module": [[4, "module-omnixai.explainers.data.mutual_info"]], "omnixai.explainers.data.chi_square module": [[4, "module-omnixai.explainers.data.chi_square"]], "omnixai.explainers.nlp package": [[5, "omnixai-explainers-nlp-package"]], "omnixai.explainers.nlp.auto module": [[5, "module-omnixai.explainers.nlp.auto"]], "Subpackages": [[5, "subpackages"], [10, "subpackages"], [14, "subpackages"], [17, "subpackages"]], "omnixai.explainers.nlp.agnostic package": [[6, "module-omnixai.explainers.nlp.agnostic"]], "omnixai.explainers.nlp.agnostic.lime module": [[6, "module-omnixai.explainers.nlp.agnostic.lime"]], "omnixai.explainers.nlp.agnostic.shap module": [[6, "module-omnixai.explainers.nlp.agnostic.shap"]], "omnixai.explainers.nlp.agnostic.l2x module": [[6, "module-omnixai.explainers.nlp.agnostic.l2x"]], "omnixai.explainers.nlp.counterfactual package": [[7, "module-omnixai.explainers.nlp.counterfactual"]], "omnixai.explainers.nlp.counterfactual.polyjuice module": [[7, "module-omnixai.explainers.nlp.counterfactual.polyjuice"]], "omnixai.explainers.nlp.specific package": [[8, "module-omnixai.explainers.nlp.specific"]], "omnixai.explainers.nlp.specific.ig module": [[8, "module-omnixai.explainers.nlp.specific.ig"]], "omnixai.explainers.prediction package": [[9, "module-omnixai.explainers.prediction"]], "omnixai.explainers.tabular package": [[10, "omnixai-explainers-tabular-package"]], "omnixai.explainers.tabular.base module": [[10, "module-omnixai.explainers.tabular.base"]], "omnixai.explainers.tabular.auto module": [[10, "module-omnixai.explainers.tabular.auto"]], "omnixai.explainers.tabular.agnostic package": [[11, "module-omnixai.explainers.tabular.agnostic"]], "omnixai.explainers.tabular.agnostic.lime module": [[11, "module-omnixai.explainers.tabular.agnostic.lime"]], "omnixai.explainers.tabular.agnostic.shap module": [[11, "module-omnixai.explainers.tabular.agnostic.shap"]], "omnixai.explainers.tabular.agnostic.pdp module": [[11, "module-omnixai.explainers.tabular.agnostic.pdp"]], "omnixai.explainers.tabular.agnostic.sensitivity module": [[11, "module-omnixai.explainers.tabular.agnostic.sensitivity"]], "omnixai.explainers.tabular.agnostic.L2X.l2x module": [[11, "module-omnixai.explainers.tabular.agnostic.L2X.l2x"]], "omnixai.explainers.tabular.counterfactual package": [[12, "module-omnixai.explainers.tabular.counterfactual"]], "omnixai.explainers.tabular.counterfactual.mace.mace module": [[12, "module-omnixai.explainers.tabular.counterfactual.mace.mace"]], "omnixai.explainers.tabular.counterfactual.ce module": [[12, "module-omnixai.explainers.tabular.counterfactual.ce"]], "omnixai.explainers.tabular.specific package": [[13, "module-omnixai.explainers.tabular.specific"]], "omnixai.explainers.tabular.specific.ig module": [[13, "module-omnixai.explainers.tabular.specific.ig"]], "omnixai.explainers.tabular.specific.linear module": [[13, "module-omnixai.explainers.tabular.specific.linear"]], "omnixai.explainers.tabular.specific.decision_tree module": [[13, "module-omnixai.explainers.tabular.specific.decision_tree"]], "omnixai.explainers.tabular.specific.shap_tree module": [[13, "module-omnixai.explainers.tabular.specific.shap_tree"]], "omnixai.explainers.timeseries package": [[14, "omnixai-explainers-timeseries-package"]], "omnixai.explainers.timeseries.auto module": [[14, "module-omnixai.explainers.timeseries.auto"]], "omnixai.explainers.timeseries.agnostic package": [[15, "module-omnixai.explainers.timeseries.agnostic"]], "omnixai.explainers.timeseries.agnostic.shap module": [[15, "module-omnixai.explainers.timeseries.agnostic.shap"]], "omnixai.explainers.timeseries.counterfactual package": [[16, "module-omnixai.explainers.timeseries.counterfactual"]], "omnixai.explainers.timeseries.counterfactual.ce module": [[16, "module-omnixai.explainers.timeseries.counterfactual.ce"]], "omnixai.explainers.timeseries.counterfactual.mace module": [[16, "module-omnixai.explainers.timeseries.counterfactual.mace"]], "omnixai.explainers.vision package": [[17, "omnixai-explainers-vision-package"]], "omnixai.explainers.vision.auto module": [[17, "module-omnixai.explainers.vision.auto"]], "omnixai.explainers.vision.agnostic package": [[18, "module-omnixai.explainers.vision.agnostic"]], "omnixai.explainers.vision.agnostic.lime module": [[18, "module-omnixai.explainers.vision.agnostic.lime"]], "omnixai.explainers.vision.agnostic.shap module": [[18, "module-omnixai.explainers.vision.agnostic.shap"]], "omnixai.explainers.vision.agnostic.pdp module": [[18, "module-omnixai.explainers.vision.agnostic.pdp"]], "omnixai.explainers.vision.agnostic.l2x module": [[18, "module-omnixai.explainers.vision.agnostic.l2x"]], "omnixai.explainers.vision.counterfactual package": [[19, "module-omnixai.explainers.vision.counterfactual"]], "omnixai.explainers.vision.counterfactual.ce module": [[19, "module-omnixai.explainers.vision.counterfactual.ce"]], "omnixai.explainers.vision.specific package": [[20, "module-omnixai.explainers.vision.specific"]], "omnixai.explainers.vision.specific.ig module": [[20, "module-omnixai.explainers.vision.specific.ig"]], "omnixai.explainers.vision.specific.gradcam.gradcam module": [[20, "module-omnixai.explainers.vision.specific.gradcam.gradcam"]], "omnixai.explainers.vision.specific.cem module": [[20, "module-omnixai.explainers.vision.specific.cem"]], "omnixai.explanations package": [[21, "module-omnixai.explanations"]], "Three categories of explanation results": [[21, "three-categories-of-explanation-results"]], "omnixai.explanations.base module": [[21, "module-omnixai.explanations.base"]], "omnixai.explanations.image package": [[22, "module-omnixai.explanations.image"]], "omnixai.explanations.image.pixel_importance module": [[22, "module-omnixai.explanations.image.pixel_importance"]], "omnixai.explanations.image.mask module": [[22, "module-omnixai.explanations.image.mask"]], "omnixai.explanations.image.contrast module": [[22, "module-omnixai.explanations.image.contrast"]], "omnixai.explanations.image.counterfactual module": [[22, "module-omnixai.explanations.image.counterfactual"]], "omnixai.explanations.tabular package": [[23, "module-omnixai.explanations.tabular"]], "omnixai.explanations.tabular.feature_importance module": [[23, "module-omnixai.explanations.tabular.feature_importance"]], "omnixai.explanations.tabular.counterfactual module": [[23, "module-omnixai.explanations.tabular.counterfactual"]], "omnixai.explanations.tabular.pdp module": [[23, "module-omnixai.explanations.tabular.pdp"]], "omnixai.explanations.tabular.sensitivity module": [[23, "module-omnixai.explanations.tabular.sensitivity"]], "omnixai.explanations.tabular.linear module": [[23, "module-omnixai.explanations.tabular.linear"]], "omnixai.explanations.tabular.tree module": [[23, "module-omnixai.explanations.tabular.tree"]], "omnixai.explanations.tabular.correlation module": [[23, "module-omnixai.explanations.tabular.correlation"]], "omnixai.explanations.tabular.imbalance module": [[23, "module-omnixai.explanations.tabular.imbalance"]], "omnixai.explanations.text package": [[24, "module-omnixai.explanations.text"]], "omnixai.explanations.text.word_importance module": [[24, "module-omnixai.explanations.text.word_importance"]], "omnixai.explanations.timeseries package": [[25, "module-omnixai.explanations.timeseries"]], "omnixai.explanations.timeseries.feature_importance module": [[25, "module-omnixai.explanations.timeseries.feature_importance"]], "omnixai.explanations.timeseries.counterfactual module": [[25, "module-omnixai.explanations.timeseries.counterfactual"]], "omnixai.preprocessing package": [[26, "module-omnixai.preprocessing"]], "omnixai.preprocessing.base module": [[26, "module-omnixai.preprocessing.base"]], "omnixai.preprocessing.encode module": [[26, "module-omnixai.preprocessing.encode"]], "omnixai.preprocessing.normalize module": [[26, "module-omnixai.preprocessing.normalize"]], "omnixai.preprocessing.fill module": [[26, "module-omnixai.preprocessing.fill"]], "omnixai.preprocessing.pipeline module": [[26, "module-omnixai.preprocessing.pipeline"]], "omnixai.preprocessing.tabular module": [[26, "module-omnixai.preprocessing.tabular"]], "omnixai.preprocessing.image module": [[26, "module-omnixai.preprocessing.image"]], "omnixai.preprocessing.text module": [[26, "module-omnixai.preprocessing.text"]], "omnixai.sampler.tabular module": [[26, "module-omnixai.sampler.tabular"]], "omnixai.visualization package": [[27, "module-omnixai.visualization"]], "omnixai.visualization.dashboard module": [[27, "module-omnixai.visualization.dashboard"]], "Tutorials & Example Code": [[28, "tutorials-example-code"]], "Basics": [[28, "basics"]], "Applications": [[28, "applications"]], "Tabular Explainers": [[28, "tabular-explainers"]], "Vision Explainers": [[28, "vision-explainers"]], "NLP Explainers": [[28, "nlp-explainers"]], "Timeseries Explainers": [[28, "timeseries-explainers"]], "DataAnalyzer for feature analysis": [[29, "DataAnalyzer-for-feature-analysis"]], "Examples of data objects": [[30, "Examples-of-data-objects"]], "Tabular data": [[30, "Tabular-data"], [31, "Tabular-data"]], "Image data": [[30, "Image-data"], [31, "Image-data"]], "Text data": [[30, "Text-data"], [31, "Text-data"]], "Time series data": [[30, "Time-series-data"]], "Examples of data preprocessing": [[31, "Examples-of-data-preprocessing"]], "NLPExplainer for sentiment analysis": [[32, "NLPExplainer-for-sentiment-analysis"]], "Counterfactual explanation for text classification": [[33, "Counterfactual-explanation-for-text-classification"]], "Counterfactual explanation for question answering": [[34, "Counterfactual-explanation-for-question-answering"]], "Integrated-gradient on IMDB dataset (Tensorflow)": [[35, "Integrated-gradient-on-IMDB-dataset-(Tensorflow)"]], "Integrated-gradient on IMDB dataset (PyTorch)": [[36, "Integrated-gradient-on-IMDB-dataset-(PyTorch)"]], "L2X (learning to explain) for text classification": [[37, "L2X-(learning-to-explain)-for-text-classification"]], "LIME for text classification": [[38, "LIME-for-text-classification"]], "SHAP for sentiment analysis": [[39, "SHAP-for-sentiment-analysis"]], "NLPExplainer on IMDB dataset": [[40, "NLPExplainer-on-IMDB-dataset"]], "OmniXAI in a ML workflow": [[41, "OmniXAI-in-a-ML-workflow"]], "Accumulated local effects (ALE)": [[42, "Accumulated-local-effects-(ALE)"]], "Counterfactual explanation on Diabetes dataset": [[43, "Counterfactual-explanation-on-Diabetes-dataset"]], "GPT explainer for income prediction": [[44, "GPT-explainer-for-income-prediction"]], "L2X (learning to explain) for income prediction": [[45, "L2X-(learning-to-explain)-for-income-prediction"]], "LIME for income prediction": [[46, "LIME-for-income-prediction"]], "Logistic regression for income prediction": [[47, "Logistic-regression-for-income-prediction"]], "MACE counterfactual explanation for income prediction": [[48, "MACE-counterfactual-explanation-for-income-prediction"]], "Paritial dependence plots": [[49, "Paritial-dependence-plots"]], "Learning to Rank Expanations Demo": [[50, "Learning-to-Rank-Expanations-Demo"]], "Morris sensitivity analysis": [[51, "Morris-sensitivity-analysis"]], "SHAP for income prediction": [[52, "SHAP-for-income-prediction"]], "Decision tree for income prediction": [[53, "Decision-tree-for-income-prediction"]], "TabularExplainer for income prediction (classification)": [[54, "TabularExplainer-for-income-prediction-(classification)"]], "TabularExplainer for house-price prediction (regression)": [[55, "TabularExplainer-for-house-price-prediction-(regression)"]], "TimeseriesExplainer for time series anomaly detection": [[56, "TimeseriesExplainer-for-time-series-anomaly-detection"]], "Counterfactual explanation on time series anomaly detection": [[57, "Counterfactual-explanation-on-time-series-anomaly-detection"]], "SHAP for time series anomaly detection": [[58, "SHAP-for-time-series-anomaly-detection"]], "VisionExplainer for image classification": [[59, "VisionExplainer-for-image-classification"]], "Counterfactual explanation on ImageNet": [[60, "Counterfactual-explanation-on-ImageNet"]], "Counterfactual explanation on MNIST (Tensorflow)": [[61, "Counterfactual-explanation-on-MNIST-(Tensorflow)"]], "Counterfactual explanation on MNIST (PyTorch)": [[62, "Counterfactual-explanation-on-MNIST-(PyTorch)"]], "Contrastive explanation on MNIST (Tensorflow)": [[63, "Contrastive-explanation-on-MNIST-(Tensorflow)"]], "Contrastive explanation on MNIST (PyTorch)": [[64, "Contrastive-explanation-on-MNIST-(PyTorch)"]], "Feature map visualization (Tensorflow)": [[65, "Feature-map-visualization-(Tensorflow)"]], "Feature map visualization (PyTorch)": [[66, "Feature-map-visualization-(PyTorch)"]], "Feature visualization (Tensorflow)": [[67, "Feature-visualization-(Tensorflow)"]], "Feature visualization (PyTorch)": [[68, "Feature-visualization-(PyTorch)"]], "Grad-CAM for image classification (Tensorflow)": [[69, "Grad-CAM-for-image-classification-(Tensorflow)"]], "Grad-CAM for image classification (PyTorch)": [[70, "Grad-CAM-for-image-classification-(PyTorch)"]], "Grad-CAM for visual language tasks": [[71, "Grad-CAM-for-visual-language-tasks"]], "Integrated-gradient for image classification (Tensorflow)": [[72, "Integrated-gradient-for-image-classification-(Tensorflow)"]], "Integrated-gradient for image classification (PyTorch)": [[73, "Integrated-gradient-for-image-classification-(PyTorch)"]], "Integrated-gradient for visual language tasks": [[74, "Integrated-gradient-for-visual-language-tasks"]], "L2X (learning to explain) on MNIST": [[75, "L2X-(learning-to-explain)-on-MNIST"]], "LIME for image classification": [[76, "LIME-for-image-classification"]], "SHAP on MNIST": [[77, "SHAP-on-MNIST"]]}, "indexentries": {"module": [[1, "module-omnixai"], [2, "module-omnixai.data"], [2, "module-omnixai.data.base"], [2, "module-omnixai.data.image"], [2, "module-omnixai.data.tabular"], [2, "module-omnixai.data.text"], [2, "module-omnixai.data.timeseries"], [3, "module-omnixai.explainers"], [3, "module-omnixai.explainers.base"], [4, "module-omnixai.explainers.data"], [4, "module-omnixai.explainers.data.auto"], [4, "module-omnixai.explainers.data.chi_square"], [4, "module-omnixai.explainers.data.correlation"], [4, "module-omnixai.explainers.data.imbalance"], [4, "module-omnixai.explainers.data.mutual_info"], [5, "module-omnixai.explainers.nlp.auto"], [6, "module-omnixai.explainers.nlp.agnostic"], [6, "module-omnixai.explainers.nlp.agnostic.l2x"], [6, "module-omnixai.explainers.nlp.agnostic.lime"], [6, "module-omnixai.explainers.nlp.agnostic.shap"], [7, "module-omnixai.explainers.nlp.counterfactual"], [7, "module-omnixai.explainers.nlp.counterfactual.polyjuice"], [8, "module-omnixai.explainers.nlp.specific"], [8, "module-omnixai.explainers.nlp.specific.ig"], [9, "module-omnixai.explainers.prediction"], [10, "module-omnixai.explainers.tabular.auto"], [10, "module-omnixai.explainers.tabular.base"], [11, "module-omnixai.explainers.tabular.agnostic"], [11, "module-omnixai.explainers.tabular.agnostic.L2X.l2x"], [11, "module-omnixai.explainers.tabular.agnostic.lime"], [11, "module-omnixai.explainers.tabular.agnostic.pdp"], [11, "module-omnixai.explainers.tabular.agnostic.sensitivity"], [11, "module-omnixai.explainers.tabular.agnostic.shap"], [12, "module-omnixai.explainers.tabular.counterfactual"], [12, "module-omnixai.explainers.tabular.counterfactual.ce"], [12, "module-omnixai.explainers.tabular.counterfactual.mace.mace"], [13, "module-omnixai.explainers.tabular.specific"], [13, "module-omnixai.explainers.tabular.specific.decision_tree"], [13, "module-omnixai.explainers.tabular.specific.ig"], [13, "module-omnixai.explainers.tabular.specific.linear"], [13, "module-omnixai.explainers.tabular.specific.shap_tree"], [14, "module-omnixai.explainers.timeseries.auto"], [15, "module-omnixai.explainers.timeseries.agnostic"], [15, "module-omnixai.explainers.timeseries.agnostic.shap"], [16, "module-omnixai.explainers.timeseries.counterfactual"], [16, "module-omnixai.explainers.timeseries.counterfactual.ce"], [16, "module-omnixai.explainers.timeseries.counterfactual.mace"], [17, "module-omnixai.explainers.vision.auto"], [18, "module-omnixai.explainers.vision.agnostic"], [18, "module-omnixai.explainers.vision.agnostic.l2x"], [18, "module-omnixai.explainers.vision.agnostic.lime"], [18, "module-omnixai.explainers.vision.agnostic.pdp"], [18, "module-omnixai.explainers.vision.agnostic.shap"], [19, "module-omnixai.explainers.vision.counterfactual"], [19, "module-omnixai.explainers.vision.counterfactual.ce"], [20, "module-omnixai.explainers.vision.specific"], [20, "module-omnixai.explainers.vision.specific.cem"], [20, "module-omnixai.explainers.vision.specific.gradcam.gradcam"], [20, "module-omnixai.explainers.vision.specific.ig"], [21, "module-omnixai.explanations"], [21, "module-omnixai.explanations.base"], [22, "module-omnixai.explanations.image"], [22, "module-omnixai.explanations.image.contrast"], [22, "module-omnixai.explanations.image.counterfactual"], [22, "module-omnixai.explanations.image.mask"], [22, "module-omnixai.explanations.image.pixel_importance"], [23, "module-omnixai.explanations.tabular"], [23, "module-omnixai.explanations.tabular.correlation"], [23, "module-omnixai.explanations.tabular.counterfactual"], [23, "module-omnixai.explanations.tabular.feature_importance"], [23, "module-omnixai.explanations.tabular.imbalance"], [23, "module-omnixai.explanations.tabular.linear"], [23, "module-omnixai.explanations.tabular.pdp"], [23, "module-omnixai.explanations.tabular.sensitivity"], [23, "module-omnixai.explanations.tabular.tree"], [24, "module-omnixai.explanations.text"], [24, "module-omnixai.explanations.text.word_importance"], [25, "module-omnixai.explanations.timeseries"], [25, "module-omnixai.explanations.timeseries.counterfactual"], [25, "module-omnixai.explanations.timeseries.feature_importance"], [26, "module-omnixai.preprocessing"], [26, "module-omnixai.preprocessing.base"], [26, "module-omnixai.preprocessing.encode"], [26, "module-omnixai.preprocessing.fill"], [26, "module-omnixai.preprocessing.image"], [26, "module-omnixai.preprocessing.normalize"], [26, "module-omnixai.preprocessing.pipeline"], [26, "module-omnixai.preprocessing.tabular"], [26, "module-omnixai.preprocessing.text"], [26, "module-omnixai.sampler.tabular"], [27, "module-omnixai.visualization"], [27, "module-omnixai.visualization.dashboard"]], "omnixai": [[1, "module-omnixai"]], "data (class in omnixai.data.base)": [[2, "omnixai.data.base.Data"]], "image (class in omnixai.data.image)": [[2, "omnixai.data.image.Image"]], "tabular (class in omnixai.data.tabular)": [[2, "omnixai.data.tabular.Tabular"]], "text (class in omnixai.data.text)": [[2, "omnixai.data.text.Text"]], "timeseries (class in omnixai.data.timeseries)": [[2, "omnixai.data.timeseries.Timeseries"]], "batch_size (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.batch_size"]], "categorical_columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.categorical_columns"]], "columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.columns"]], "columns (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.columns"]], "continuous_columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.continuous_columns"]], "copy() (omnixai.data.image.image method)": [[2, "omnixai.data.image.Image.copy"]], "copy() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.copy"]], "copy() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.copy"]], "copy() (omnixai.data.timeseries.timeseries method)": [[2, "omnixai.data.timeseries.Timeseries.copy"]], "data_type (omnixai.data.base.data property)": [[2, "omnixai.data.base.Data.data_type"]], "data_type (omnixai.data.image.image attribute)": [[2, "omnixai.data.image.Image.data_type"]], "data_type (omnixai.data.tabular.tabular attribute)": [[2, "omnixai.data.tabular.Tabular.data_type"]], "data_type (omnixai.data.text.text attribute)": [[2, "omnixai.data.text.Text.data_type"]], "data_type (omnixai.data.timeseries.timeseries attribute)": [[2, "omnixai.data.timeseries.Timeseries.data_type"]], "feature_columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.feature_columns"]], "from_pd() (omnixai.data.timeseries.timeseries class method)": [[2, "omnixai.data.timeseries.Timeseries.from_pd"]], "get_continuous_bounds() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.get_continuous_bounds"]], "get_continuous_medians() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.get_continuous_medians"]], "get_target_column() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.get_target_column"]], "iloc() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.iloc"]], "image_shape (omnixai.data.image.image property)": [[2, "omnixai.data.image.Image.image_shape"]], "index (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.index"]], "omnixai.data": [[2, "module-omnixai.data"]], "omnixai.data.base": [[2, "module-omnixai.data.base"]], "omnixai.data.image": [[2, "module-omnixai.data.image"]], "omnixai.data.tabular": [[2, "module-omnixai.data.tabular"]], "omnixai.data.text": [[2, "module-omnixai.data.text"]], "omnixai.data.timeseries": [[2, "module-omnixai.data.timeseries"]], "remove_target_column() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.remove_target_column"]], "shape (omnixai.data.image.image property)": [[2, "omnixai.data.image.Image.shape"]], "shape (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.shape"]], "shape (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.shape"]], "split() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.split"]], "target_column (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.target_column"]], "to_numpy() (omnixai.data.image.image method)": [[2, "omnixai.data.image.Image.to_numpy"]], "to_numpy() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.to_numpy"]], "to_numpy() (omnixai.data.timeseries.timeseries method)": [[2, "omnixai.data.timeseries.Timeseries.to_numpy"]], "to_pd() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.to_pd"]], "to_pd() (omnixai.data.timeseries.timeseries method)": [[2, "omnixai.data.timeseries.Timeseries.to_pd"]], "to_pil() (omnixai.data.image.image method)": [[2, "omnixai.data.image.Image.to_pil"]], "to_str() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.to_str"]], "to_tokens() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.to_tokens"]], "ts_len (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.ts_len"]], "values (omnixai.data.image.image property)": [[2, "omnixai.data.image.Image.values"]], "values (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.values"]], "values (omnixai.data.text.text property)": [[2, "omnixai.data.text.Text.values"]], "values (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.values"]], "values() (omnixai.data.base.data method)": [[2, "omnixai.data.base.Data.values"]], "autoexplainerbase (class in omnixai.explainers.base)": [[3, "omnixai.explainers.base.AutoExplainerBase"]], "explainerabcmeta (class in omnixai.explainers.base)": [[3, "omnixai.explainers.base.ExplainerABCMeta"]], "explainerbase (class in omnixai.explainers.base)": [[3, "omnixai.explainers.base.ExplainerBase"]], "explain() (omnixai.explainers.base.autoexplainerbase method)": [[3, "omnixai.explainers.base.AutoExplainerBase.explain"]], "explain() (omnixai.explainers.base.explainerbase method)": [[3, "omnixai.explainers.base.ExplainerBase.explain"]], "explain_global() (omnixai.explainers.base.autoexplainerbase method)": [[3, "omnixai.explainers.base.AutoExplainerBase.explain_global"]], "explainer_names (omnixai.explainers.base.autoexplainerbase property)": [[3, "omnixai.explainers.base.AutoExplainerBase.explainer_names"]], "explanation_type (omnixai.explainers.base.explainerbase property)": [[3, "omnixai.explainers.base.ExplainerBase.explanation_type"]], "list_explainers() (omnixai.explainers.base.autoexplainerbase static method)": [[3, "omnixai.explainers.base.AutoExplainerBase.list_explainers"]], "omnixai.explainers": [[3, "module-omnixai.explainers"]], "omnixai.explainers.base": [[3, "module-omnixai.explainers.base"]], "chisquare (class in omnixai.explainers.data)": [[4, "omnixai.explainers.data.ChiSquare"]], "chisquare (class in omnixai.explainers.data.chi_square)": [[4, "omnixai.explainers.data.chi_square.ChiSquare"]], "correlationanalyzer (class in omnixai.explainers.data)": [[4, "omnixai.explainers.data.CorrelationAnalyzer"]], "correlationanalyzer (class in omnixai.explainers.data.correlation)": [[4, "omnixai.explainers.data.correlation.CorrelationAnalyzer"]], "dataanalyzer (class in omnixai.explainers.data)": [[4, "omnixai.explainers.data.DataAnalyzer"]], "dataanalyzer (class in omnixai.explainers.data.auto)": [[4, "omnixai.explainers.data.auto.DataAnalyzer"]], "imbalanceanalyzer (class in omnixai.explainers.data)": [[4, "omnixai.explainers.data.ImbalanceAnalyzer"]], "imbalanceanalyzer (class in omnixai.explainers.data.imbalance)": [[4, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer"]], "mutualinformation (class in omnixai.explainers.data)": [[4, "omnixai.explainers.data.MutualInformation"]], "mutualinformation (class in omnixai.explainers.data.mutual_info)": [[4, "omnixai.explainers.data.mutual_info.MutualInformation"]], "alias (omnixai.explainers.data.chisquare attribute)": [[4, "omnixai.explainers.data.ChiSquare.alias"]], "alias (omnixai.explainers.data.correlationanalyzer attribute)": [[4, "omnixai.explainers.data.CorrelationAnalyzer.alias"]], "alias (omnixai.explainers.data.imbalanceanalyzer attribute)": [[4, "omnixai.explainers.data.ImbalanceAnalyzer.alias"]], "alias (omnixai.explainers.data.mutualinformation attribute)": [[4, "omnixai.explainers.data.MutualInformation.alias"]], "alias (omnixai.explainers.data.chi_square.chisquare attribute)": [[4, "omnixai.explainers.data.chi_square.ChiSquare.alias"]], "alias (omnixai.explainers.data.correlation.correlationanalyzer attribute)": [[4, "omnixai.explainers.data.correlation.CorrelationAnalyzer.alias"]], "alias (omnixai.explainers.data.imbalance.imbalanceanalyzer attribute)": [[4, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer.alias"]], "alias (omnixai.explainers.data.mutual_info.mutualinformation attribute)": [[4, "omnixai.explainers.data.mutual_info.MutualInformation.alias"]], "explain() (omnixai.explainers.data.chisquare method)": [[4, "omnixai.explainers.data.ChiSquare.explain"]], "explain() (omnixai.explainers.data.correlationanalyzer method)": [[4, "omnixai.explainers.data.CorrelationAnalyzer.explain"]], "explain() (omnixai.explainers.data.dataanalyzer method)": [[4, "omnixai.explainers.data.DataAnalyzer.explain"]], "explain() (omnixai.explainers.data.imbalanceanalyzer method)": [[4, "omnixai.explainers.data.ImbalanceAnalyzer.explain"]], "explain() (omnixai.explainers.data.mutualinformation method)": [[4, "omnixai.explainers.data.MutualInformation.explain"]], "explain() (omnixai.explainers.data.auto.dataanalyzer method)": [[4, "omnixai.explainers.data.auto.DataAnalyzer.explain"]], "explain() (omnixai.explainers.data.chi_square.chisquare method)": [[4, "omnixai.explainers.data.chi_square.ChiSquare.explain"]], "explain() (omnixai.explainers.data.correlation.correlationanalyzer method)": [[4, "omnixai.explainers.data.correlation.CorrelationAnalyzer.explain"]], "explain() (omnixai.explainers.data.imbalance.imbalanceanalyzer method)": [[4, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer.explain"]], "explain() (omnixai.explainers.data.mutual_info.mutualinformation method)": [[4, "omnixai.explainers.data.mutual_info.MutualInformation.explain"]], "explanation_type (omnixai.explainers.data.chisquare attribute)": [[4, "omnixai.explainers.data.ChiSquare.explanation_type"]], "explanation_type (omnixai.explainers.data.correlationanalyzer attribute)": [[4, "omnixai.explainers.data.CorrelationAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.imbalanceanalyzer attribute)": [[4, "omnixai.explainers.data.ImbalanceAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.mutualinformation attribute)": [[4, "omnixai.explainers.data.MutualInformation.explanation_type"]], "explanation_type (omnixai.explainers.data.chi_square.chisquare attribute)": [[4, "omnixai.explainers.data.chi_square.ChiSquare.explanation_type"]], "explanation_type (omnixai.explainers.data.correlation.correlationanalyzer attribute)": [[4, "omnixai.explainers.data.correlation.CorrelationAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.imbalance.imbalanceanalyzer attribute)": [[4, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.mutual_info.mutualinformation attribute)": [[4, "omnixai.explainers.data.mutual_info.MutualInformation.explanation_type"]], "list_explainers() (omnixai.explainers.data.dataanalyzer static method)": [[4, "omnixai.explainers.data.DataAnalyzer.list_explainers"]], "list_explainers() (omnixai.explainers.data.auto.dataanalyzer static method)": [[4, "omnixai.explainers.data.auto.DataAnalyzer.list_explainers"]], "omnixai.explainers.data": [[4, "module-omnixai.explainers.data"]], "omnixai.explainers.data.auto": [[4, "module-omnixai.explainers.data.auto"]], "omnixai.explainers.data.chi_square": [[4, "module-omnixai.explainers.data.chi_square"]], "omnixai.explainers.data.correlation": [[4, "module-omnixai.explainers.data.correlation"]], "omnixai.explainers.data.imbalance": [[4, "module-omnixai.explainers.data.imbalance"]], "omnixai.explainers.data.mutual_info": [[4, "module-omnixai.explainers.data.mutual_info"]], "nlpexplainer (class in omnixai.explainers.nlp.auto)": [[5, "omnixai.explainers.nlp.auto.NLPExplainer"]], "list_explainers() (omnixai.explainers.nlp.auto.nlpexplainer static method)": [[5, "omnixai.explainers.nlp.auto.NLPExplainer.list_explainers"]], "omnixai.explainers.nlp.auto": [[5, "module-omnixai.explainers.nlp.auto"]], "defaultpredictionmodel (class in omnixai.explainers.nlp.agnostic.l2x)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel"]], "defaultselectionmodel (class in omnixai.explainers.nlp.agnostic.l2x)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel"]], "l2xtext (class in omnixai.explainers.nlp.agnostic.l2x)": [[6, "omnixai.explainers.nlp.agnostic.l2x.L2XText"]], "limetext (class in omnixai.explainers.nlp.agnostic.lime)": [[6, "omnixai.explainers.nlp.agnostic.lime.LimeText"]], "shaptext (class in omnixai.explainers.nlp.agnostic.shap)": [[6, "omnixai.explainers.nlp.agnostic.shap.ShapText"]], "alias (omnixai.explainers.nlp.agnostic.l2x.l2xtext attribute)": [[6, "omnixai.explainers.nlp.agnostic.l2x.L2XText.alias"]], "alias (omnixai.explainers.nlp.agnostic.lime.limetext attribute)": [[6, "omnixai.explainers.nlp.agnostic.lime.LimeText.alias"]], "alias (omnixai.explainers.nlp.agnostic.shap.shaptext attribute)": [[6, "omnixai.explainers.nlp.agnostic.shap.ShapText.alias"]], "explain() (omnixai.explainers.nlp.agnostic.l2x.l2xtext method)": [[6, "omnixai.explainers.nlp.agnostic.l2x.L2XText.explain"]], "explain() (omnixai.explainers.nlp.agnostic.lime.limetext method)": [[6, "omnixai.explainers.nlp.agnostic.lime.LimeText.explain"]], "explain() (omnixai.explainers.nlp.agnostic.shap.shaptext method)": [[6, "omnixai.explainers.nlp.agnostic.shap.ShapText.explain"]], "explanation_type (omnixai.explainers.nlp.agnostic.l2x.l2xtext attribute)": [[6, "omnixai.explainers.nlp.agnostic.l2x.L2XText.explanation_type"]], "explanation_type (omnixai.explainers.nlp.agnostic.lime.limetext attribute)": [[6, "omnixai.explainers.nlp.agnostic.lime.LimeText.explanation_type"]], "explanation_type (omnixai.explainers.nlp.agnostic.shap.shaptext attribute)": [[6, "omnixai.explainers.nlp.agnostic.shap.ShapText.explanation_type"]], "forward() (omnixai.explainers.nlp.agnostic.l2x.defaultpredictionmodel method)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel.forward"]], "forward() (omnixai.explainers.nlp.agnostic.l2x.defaultselectionmodel method)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel.forward"]], "omnixai.explainers.nlp.agnostic": [[6, "module-omnixai.explainers.nlp.agnostic"]], "omnixai.explainers.nlp.agnostic.l2x": [[6, "module-omnixai.explainers.nlp.agnostic.l2x"]], "omnixai.explainers.nlp.agnostic.lime": [[6, "module-omnixai.explainers.nlp.agnostic.lime"]], "omnixai.explainers.nlp.agnostic.shap": [[6, "module-omnixai.explainers.nlp.agnostic.shap"]], "training (omnixai.explainers.nlp.agnostic.l2x.defaultpredictionmodel attribute)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel.training"]], "training (omnixai.explainers.nlp.agnostic.l2x.defaultselectionmodel attribute)": [[6, "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel.training"]], "polyjuice (class in omnixai.explainers.nlp.counterfactual.polyjuice)": [[7, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice"]], "alias (omnixai.explainers.nlp.counterfactual.polyjuice.polyjuice attribute)": [[7, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice.alias"]], "explain() (omnixai.explainers.nlp.counterfactual.polyjuice.polyjuice method)": [[7, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice.explain"]], "explanation_type (omnixai.explainers.nlp.counterfactual.polyjuice.polyjuice attribute)": [[7, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice.explanation_type"]], "omnixai.explainers.nlp.counterfactual": [[7, "module-omnixai.explainers.nlp.counterfactual"]], "omnixai.explainers.nlp.counterfactual.polyjuice": [[7, "module-omnixai.explainers.nlp.counterfactual.polyjuice"]], "integratedgradienttext (class in omnixai.explainers.nlp.specific.ig)": [[8, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText"]], "alias (omnixai.explainers.nlp.specific.ig.integratedgradienttext attribute)": [[8, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText.alias"]], "explain() (omnixai.explainers.nlp.specific.ig.integratedgradienttext method)": [[8, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText.explain"]], "explanation_type (omnixai.explainers.nlp.specific.ig.integratedgradienttext attribute)": [[8, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText.explanation_type"]], "omnixai.explainers.nlp.specific": [[8, "module-omnixai.explainers.nlp.specific"]], "omnixai.explainers.nlp.specific.ig": [[8, "module-omnixai.explainers.nlp.specific.ig"]], "predictionanalyzer (class in omnixai.explainers.prediction)": [[9, "omnixai.explainers.prediction.PredictionAnalyzer"]], "alias (omnixai.explainers.prediction.predictionanalyzer attribute)": [[9, "omnixai.explainers.prediction.PredictionAnalyzer.alias"]], "explain() (omnixai.explainers.prediction.predictionanalyzer method)": [[9, "omnixai.explainers.prediction.PredictionAnalyzer.explain"]], "explanation_type (omnixai.explainers.prediction.predictionanalyzer attribute)": [[9, "omnixai.explainers.prediction.PredictionAnalyzer.explanation_type"]], "omnixai.explainers.prediction": [[9, "module-omnixai.explainers.prediction"]], "sklearnbase (class in omnixai.explainers.tabular.base)": [[10, "omnixai.explainers.tabular.base.SklearnBase"]], "tabularexplainer (class in omnixai.explainers.tabular.auto)": [[10, "omnixai.explainers.tabular.auto.TabularExplainer"]], "tabularexplainer (class in omnixai.explainers.tabular.base)": [[10, "omnixai.explainers.tabular.base.TabularExplainer"]], "class_names() (omnixai.explainers.tabular.base.sklearnbase method)": [[10, "omnixai.explainers.tabular.base.SklearnBase.class_names"]], "fit() (omnixai.explainers.tabular.base.sklearnbase method)": [[10, "omnixai.explainers.tabular.base.SklearnBase.fit"]], "list_explainers() (omnixai.explainers.tabular.auto.tabularexplainer static method)": [[10, "omnixai.explainers.tabular.auto.TabularExplainer.list_explainers"]], "omnixai.explainers.tabular.auto": [[10, "module-omnixai.explainers.tabular.auto"]], "omnixai.explainers.tabular.base": [[10, "module-omnixai.explainers.tabular.base"]], "predict() (omnixai.explainers.tabular.base.sklearnbase method)": [[10, "omnixai.explainers.tabular.base.SklearnBase.predict"]], "predict_proba() (omnixai.explainers.tabular.base.sklearnbase method)": [[10, "omnixai.explainers.tabular.base.SklearnBase.predict_proba"]], "defaultpredictionmodel (class in omnixai.explainers.tabular.agnostic.l2x.l2x)": [[11, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel"]], "defaultselectionmodel (class in omnixai.explainers.tabular.agnostic.l2x.l2x)": [[11, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel"]], "l2xtabular (class in omnixai.explainers.tabular.agnostic.l2x.l2x)": [[11, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular"]], "limetabular (class in omnixai.explainers.tabular.agnostic.lime)": [[11, "omnixai.explainers.tabular.agnostic.lime.LimeTabular"]], "partialdependencetabular (class in omnixai.explainers.tabular.agnostic.pdp)": [[11, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular"]], "sensitivityanalysistabular (class in omnixai.explainers.tabular.agnostic.sensitivity)": [[11, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular"]], "shaptabular (class in omnixai.explainers.tabular.agnostic.shap)": [[11, "omnixai.explainers.tabular.agnostic.shap.ShapTabular"]], "alias (omnixai.explainers.tabular.agnostic.l2x.l2x.l2xtabular attribute)": [[11, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.lime.limetabular attribute)": [[11, "omnixai.explainers.tabular.agnostic.lime.LimeTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.pdp.partialdependencetabular attribute)": [[11, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.sensitivity.sensitivityanalysistabular attribute)": [[11, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.shap.shaptabular attribute)": [[11, "omnixai.explainers.tabular.agnostic.shap.ShapTabular.alias"]], "explain() (omnixai.explainers.tabular.agnostic.l2x.l2x.l2xtabular method)": [[11, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.lime.limetabular method)": [[11, "omnixai.explainers.tabular.agnostic.lime.LimeTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.pdp.partialdependencetabular method)": [[11, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.sensitivity.sensitivityanalysistabular method)": [[11, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.shap.shaptabular method)": [[11, "omnixai.explainers.tabular.agnostic.shap.ShapTabular.explain"]], "explanation_type (omnixai.explainers.tabular.agnostic.l2x.l2x.l2xtabular attribute)": [[11, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.lime.limetabular attribute)": [[11, "omnixai.explainers.tabular.agnostic.lime.LimeTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.pdp.partialdependencetabular attribute)": [[11, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.sensitivity.sensitivityanalysistabular attribute)": [[11, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.shap.shaptabular attribute)": [[11, "omnixai.explainers.tabular.agnostic.shap.ShapTabular.explanation_type"]], "forward() (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultpredictionmodel method)": [[11, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel.forward"]], "forward() (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultselectionmodel method)": [[11, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel.forward"]], "omnixai.explainers.tabular.agnostic": [[11, "module-omnixai.explainers.tabular.agnostic"]], "omnixai.explainers.tabular.agnostic.l2x.l2x": [[11, "module-omnixai.explainers.tabular.agnostic.L2X.l2x"]], "omnixai.explainers.tabular.agnostic.lime": [[11, "module-omnixai.explainers.tabular.agnostic.lime"]], "omnixai.explainers.tabular.agnostic.pdp": [[11, "module-omnixai.explainers.tabular.agnostic.pdp"]], "omnixai.explainers.tabular.agnostic.sensitivity": [[11, "module-omnixai.explainers.tabular.agnostic.sensitivity"]], "omnixai.explainers.tabular.agnostic.shap": [[11, "module-omnixai.explainers.tabular.agnostic.shap"]], "training (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultpredictionmodel attribute)": [[11, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel.training"]], "training (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultselectionmodel attribute)": [[11, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel.training"]], "counterfactualexplainer (class in omnixai.explainers.tabular.counterfactual.ce)": [[12, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer"]], "counterfactualoptimizer (class in omnixai.explainers.tabular.counterfactual.ce)": [[12, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualOptimizer"]], "maceexplainer (class in omnixai.explainers.tabular.counterfactual.mace.mace)": [[12, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer"]], "alias (omnixai.explainers.tabular.counterfactual.ce.counterfactualexplainer attribute)": [[12, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer.alias"]], "alias (omnixai.explainers.tabular.counterfactual.mace.mace.maceexplainer attribute)": [[12, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer.alias"]], "explain() (omnixai.explainers.tabular.counterfactual.ce.counterfactualexplainer method)": [[12, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer.explain"]], "explain() (omnixai.explainers.tabular.counterfactual.mace.mace.maceexplainer method)": [[12, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer.explain"]], "explanation_type (omnixai.explainers.tabular.counterfactual.ce.counterfactualexplainer attribute)": [[12, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer.explanation_type"]], "explanation_type (omnixai.explainers.tabular.counterfactual.mace.mace.maceexplainer attribute)": [[12, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer.explanation_type"]], "omnixai.explainers.tabular.counterfactual": [[12, "module-omnixai.explainers.tabular.counterfactual"]], "omnixai.explainers.tabular.counterfactual.ce": [[12, "module-omnixai.explainers.tabular.counterfactual.ce"]], "omnixai.explainers.tabular.counterfactual.mace.mace": [[12, "module-omnixai.explainers.tabular.counterfactual.mace.mace"]], "optimize() (omnixai.explainers.tabular.counterfactual.ce.counterfactualoptimizer method)": [[12, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualOptimizer.optimize"]], "integratedgradient (class in omnixai.explainers.tabular.specific.ig)": [[13, "omnixai.explainers.tabular.specific.ig.IntegratedGradient"]], "integratedgradienttabular (class in omnixai.explainers.tabular.specific.ig)": [[13, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular"]], "linearbase (class in omnixai.explainers.tabular.specific.linear)": [[13, "omnixai.explainers.tabular.specific.linear.LinearBase"]], "linearregression (class in omnixai.explainers.tabular.specific.linear)": [[13, "omnixai.explainers.tabular.specific.linear.LinearRegression"]], "logisticregression (class in omnixai.explainers.tabular.specific.linear)": [[13, "omnixai.explainers.tabular.specific.linear.LogisticRegression"]], "shaptreetabular (class in omnixai.explainers.tabular.specific.shap_tree)": [[13, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular"]], "treebase (class in omnixai.explainers.tabular.specific.decision_tree)": [[13, "omnixai.explainers.tabular.specific.decision_tree.TreeBase"]], "treeclassifier (class in omnixai.explainers.tabular.specific.decision_tree)": [[13, "omnixai.explainers.tabular.specific.decision_tree.TreeClassifier"]], "treeregressor (class in omnixai.explainers.tabular.specific.decision_tree)": [[13, "omnixai.explainers.tabular.specific.decision_tree.TreeRegressor"]], "alias (omnixai.explainers.tabular.specific.decision_tree.treeclassifier attribute)": [[13, "omnixai.explainers.tabular.specific.decision_tree.TreeClassifier.alias"]], "alias (omnixai.explainers.tabular.specific.decision_tree.treeregressor attribute)": [[13, "omnixai.explainers.tabular.specific.decision_tree.TreeRegressor.alias"]], "alias (omnixai.explainers.tabular.specific.ig.integratedgradienttabular attribute)": [[13, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular.alias"]], "alias (omnixai.explainers.tabular.specific.linear.linearregression attribute)": [[13, "omnixai.explainers.tabular.specific.linear.LinearRegression.alias"]], "alias (omnixai.explainers.tabular.specific.linear.logisticregression attribute)": [[13, "omnixai.explainers.tabular.specific.linear.LogisticRegression.alias"]], "alias (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular attribute)": [[13, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.alias"]], "compute_integrated_gradients() (omnixai.explainers.tabular.specific.ig.integratedgradient static method)": [[13, "omnixai.explainers.tabular.specific.ig.IntegratedGradient.compute_integrated_gradients"]], "explain() (omnixai.explainers.tabular.specific.decision_tree.treebase method)": [[13, "omnixai.explainers.tabular.specific.decision_tree.TreeBase.explain"]], "explain() (omnixai.explainers.tabular.specific.ig.integratedgradienttabular method)": [[13, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular.explain"]], "explain() (omnixai.explainers.tabular.specific.linear.linearbase method)": [[13, "omnixai.explainers.tabular.specific.linear.LinearBase.explain"]], "explain() (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular method)": [[13, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.explain"]], "explanation_type (omnixai.explainers.tabular.specific.decision_tree.treebase attribute)": [[13, "omnixai.explainers.tabular.specific.decision_tree.TreeBase.explanation_type"]], "explanation_type (omnixai.explainers.tabular.specific.ig.integratedgradienttabular attribute)": [[13, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.specific.linear.linearbase attribute)": [[13, "omnixai.explainers.tabular.specific.linear.LinearBase.explanation_type"]], "explanation_type (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular attribute)": [[13, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.explanation_type"]], "fit() (omnixai.explainers.tabular.specific.decision_tree.treebase method)": [[13, "omnixai.explainers.tabular.specific.decision_tree.TreeBase.fit"]], "fit() (omnixai.explainers.tabular.specific.linear.linearbase method)": [[13, "omnixai.explainers.tabular.specific.linear.LinearBase.fit"]], "fit() (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular method)": [[13, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.fit"]], "omnixai.explainers.tabular.specific": [[13, "module-omnixai.explainers.tabular.specific"]], "omnixai.explainers.tabular.specific.decision_tree": [[13, "module-omnixai.explainers.tabular.specific.decision_tree"]], "omnixai.explainers.tabular.specific.ig": [[13, "module-omnixai.explainers.tabular.specific.ig"]], "omnixai.explainers.tabular.specific.linear": [[13, "module-omnixai.explainers.tabular.specific.linear"]], "omnixai.explainers.tabular.specific.shap_tree": [[13, "module-omnixai.explainers.tabular.specific.shap_tree"]], "timeseriesexplainer (class in omnixai.explainers.timeseries.auto)": [[14, "omnixai.explainers.timeseries.auto.TimeseriesExplainer"]], "list_explainers() (omnixai.explainers.timeseries.auto.timeseriesexplainer static method)": [[14, "omnixai.explainers.timeseries.auto.TimeseriesExplainer.list_explainers"]], "omnixai.explainers.timeseries.auto": [[14, "module-omnixai.explainers.timeseries.auto"]], "shaptimeseries (class in omnixai.explainers.timeseries.agnostic.shap)": [[15, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries"]], "alias (omnixai.explainers.timeseries.agnostic.shap.shaptimeseries attribute)": [[15, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries.alias"]], "explain() (omnixai.explainers.timeseries.agnostic.shap.shaptimeseries method)": [[15, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries.explain"]], "explanation_type (omnixai.explainers.timeseries.agnostic.shap.shaptimeseries attribute)": [[15, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries.explanation_type"]], "omnixai.explainers.timeseries.agnostic": [[15, "module-omnixai.explainers.timeseries.agnostic"]], "omnixai.explainers.timeseries.agnostic.shap": [[15, "module-omnixai.explainers.timeseries.agnostic.shap"]], "counterfactualexplainer (class in omnixai.explainers.timeseries.counterfactual.ce)": [[16, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer"]], "counterfactualoptimizer (class in omnixai.explainers.timeseries.counterfactual.ce)": [[16, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualOptimizer"]], "maceexplainer (class in omnixai.explainers.timeseries.counterfactual.mace)": [[16, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer"]], "alias (omnixai.explainers.timeseries.counterfactual.ce.counterfactualexplainer attribute)": [[16, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer.alias"]], "alias (omnixai.explainers.timeseries.counterfactual.mace.maceexplainer attribute)": [[16, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer.alias"]], "explain() (omnixai.explainers.timeseries.counterfactual.ce.counterfactualexplainer method)": [[16, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer.explain"]], "explain() (omnixai.explainers.timeseries.counterfactual.mace.maceexplainer method)": [[16, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer.explain"]], "explanation_type (omnixai.explainers.timeseries.counterfactual.ce.counterfactualexplainer attribute)": [[16, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer.explanation_type"]], "explanation_type (omnixai.explainers.timeseries.counterfactual.mace.maceexplainer attribute)": [[16, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer.explanation_type"]], "omnixai.explainers.timeseries.counterfactual": [[16, "module-omnixai.explainers.timeseries.counterfactual"]], "omnixai.explainers.timeseries.counterfactual.ce": [[16, "module-omnixai.explainers.timeseries.counterfactual.ce"]], "omnixai.explainers.timeseries.counterfactual.mace": [[16, "module-omnixai.explainers.timeseries.counterfactual.mace"]], "optimize() (omnixai.explainers.timeseries.counterfactual.ce.counterfactualoptimizer method)": [[16, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualOptimizer.optimize"]], "visionexplainer (class in omnixai.explainers.vision.auto)": [[17, "omnixai.explainers.vision.auto.VisionExplainer"]], "list_explainers() (omnixai.explainers.vision.auto.visionexplainer static method)": [[17, "omnixai.explainers.vision.auto.VisionExplainer.list_explainers"]], "omnixai.explainers.vision.auto": [[17, "module-omnixai.explainers.vision.auto"]], "defaultpredictionmodel (class in omnixai.explainers.vision.agnostic.l2x)": [[18, "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel"]], "defaultselectionmodel (class in omnixai.explainers.vision.agnostic.l2x)": [[18, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel"]], "l2ximage (class in omnixai.explainers.vision.agnostic.l2x)": [[18, "omnixai.explainers.vision.agnostic.l2x.L2XImage"]], "limeimage (class in omnixai.explainers.vision.agnostic.lime)": [[18, "omnixai.explainers.vision.agnostic.lime.LimeImage"]], "partialdependenceimage (class in omnixai.explainers.vision.agnostic.pdp)": [[18, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage"]], "shapimage (class in omnixai.explainers.vision.agnostic.shap)": [[18, "omnixai.explainers.vision.agnostic.shap.ShapImage"]], "alias (omnixai.explainers.vision.agnostic.l2x.l2ximage attribute)": [[18, "omnixai.explainers.vision.agnostic.l2x.L2XImage.alias"]], "alias (omnixai.explainers.vision.agnostic.lime.limeimage attribute)": [[18, "omnixai.explainers.vision.agnostic.lime.LimeImage.alias"]], "alias (omnixai.explainers.vision.agnostic.pdp.partialdependenceimage attribute)": [[18, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage.alias"]], "alias (omnixai.explainers.vision.agnostic.shap.shapimage attribute)": [[18, "omnixai.explainers.vision.agnostic.shap.ShapImage.alias"]], "explain() (omnixai.explainers.vision.agnostic.l2x.l2ximage method)": [[18, "omnixai.explainers.vision.agnostic.l2x.L2XImage.explain"]], "explain() (omnixai.explainers.vision.agnostic.lime.limeimage method)": [[18, "omnixai.explainers.vision.agnostic.lime.LimeImage.explain"]], "explain() (omnixai.explainers.vision.agnostic.pdp.partialdependenceimage method)": [[18, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage.explain"]], "explain() (omnixai.explainers.vision.agnostic.shap.shapimage method)": [[18, "omnixai.explainers.vision.agnostic.shap.ShapImage.explain"]], "explanation_type (omnixai.explainers.vision.agnostic.l2x.l2ximage attribute)": [[18, "omnixai.explainers.vision.agnostic.l2x.L2XImage.explanation_type"]], "explanation_type (omnixai.explainers.vision.agnostic.lime.limeimage attribute)": [[18, "omnixai.explainers.vision.agnostic.lime.LimeImage.explanation_type"]], "explanation_type (omnixai.explainers.vision.agnostic.pdp.partialdependenceimage attribute)": [[18, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage.explanation_type"]], "explanation_type (omnixai.explainers.vision.agnostic.shap.shapimage attribute)": [[18, "omnixai.explainers.vision.agnostic.shap.ShapImage.explanation_type"]], "forward() (omnixai.explainers.vision.agnostic.l2x.defaultpredictionmodel method)": [[18, "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel.forward"]], "forward() (omnixai.explainers.vision.agnostic.l2x.defaultselectionmodel method)": [[18, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel.forward"]], "omnixai.explainers.vision.agnostic": [[18, "module-omnixai.explainers.vision.agnostic"]], "omnixai.explainers.vision.agnostic.l2x": [[18, "module-omnixai.explainers.vision.agnostic.l2x"]], "omnixai.explainers.vision.agnostic.lime": [[18, "module-omnixai.explainers.vision.agnostic.lime"]], "omnixai.explainers.vision.agnostic.pdp": [[18, "module-omnixai.explainers.vision.agnostic.pdp"]], "omnixai.explainers.vision.agnostic.shap": [[18, "module-omnixai.explainers.vision.agnostic.shap"]], "postprocess() (omnixai.explainers.vision.agnostic.l2x.defaultselectionmodel method)": [[18, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel.postprocess"]], "training (omnixai.explainers.vision.agnostic.l2x.defaultpredictionmodel attribute)": [[18, "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel.training"]], "training (omnixai.explainers.vision.agnostic.l2x.defaultselectionmodel attribute)": [[18, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel.training"]], "counterfactualexplainer (class in omnixai.explainers.vision.counterfactual.ce)": [[19, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer"]], "alias (omnixai.explainers.vision.counterfactual.ce.counterfactualexplainer attribute)": [[19, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer.alias"]], "explain() (omnixai.explainers.vision.counterfactual.ce.counterfactualexplainer method)": [[19, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer.explain"]], "explanation_type (omnixai.explainers.vision.counterfactual.ce.counterfactualexplainer attribute)": [[19, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer.explanation_type"]], "omnixai.explainers.vision.counterfactual": [[19, "module-omnixai.explainers.vision.counterfactual"]], "omnixai.explainers.vision.counterfactual.ce": [[19, "module-omnixai.explainers.vision.counterfactual.ce"]], "cemoptimizer (class in omnixai.explainers.vision.specific.cem)": [[20, "omnixai.explainers.vision.specific.cem.CEMOptimizer"]], "contrastiveexplainer (class in omnixai.explainers.vision.specific.cem)": [[20, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer"]], "gradcam (class in omnixai.explainers.vision.specific.gradcam.gradcam)": [[20, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM"]], "gradcamplus (class in omnixai.explainers.vision.specific.gradcam.gradcam)": [[20, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus"]], "integratedgradientimage (class in omnixai.explainers.vision.specific.ig)": [[20, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage"]], "alias (omnixai.explainers.vision.specific.cem.contrastiveexplainer attribute)": [[20, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer.alias"]], "alias (omnixai.explainers.vision.specific.gradcam.gradcam.gradcam attribute)": [[20, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM.alias"]], "alias (omnixai.explainers.vision.specific.gradcam.gradcam.gradcamplus attribute)": [[20, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus.alias"]], "alias (omnixai.explainers.vision.specific.ig.integratedgradientimage attribute)": [[20, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage.alias"]], "explain() (omnixai.explainers.vision.specific.cem.contrastiveexplainer method)": [[20, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer.explain"]], "explain() (omnixai.explainers.vision.specific.gradcam.gradcam.gradcam method)": [[20, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM.explain"]], "explain() (omnixai.explainers.vision.specific.gradcam.gradcam.gradcamplus method)": [[20, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus.explain"]], "explain() (omnixai.explainers.vision.specific.ig.integratedgradientimage method)": [[20, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage.explain"]], "explanation_type (omnixai.explainers.vision.specific.cem.contrastiveexplainer attribute)": [[20, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.gradcam.gradcam.gradcam attribute)": [[20, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.gradcam.gradcam.gradcamplus attribute)": [[20, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.ig.integratedgradientimage attribute)": [[20, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage.explanation_type"]], "omnixai.explainers.vision.specific": [[20, "module-omnixai.explainers.vision.specific"]], "omnixai.explainers.vision.specific.cem": [[20, "module-omnixai.explainers.vision.specific.cem"]], "omnixai.explainers.vision.specific.gradcam.gradcam": [[20, "module-omnixai.explainers.vision.specific.gradcam.gradcam"]], "omnixai.explainers.vision.specific.ig": [[20, "module-omnixai.explainers.vision.specific.ig"]], "pn_optimize() (omnixai.explainers.vision.specific.cem.cemoptimizer method)": [[20, "omnixai.explainers.vision.specific.cem.CEMOptimizer.pn_optimize"]], "pp_optimize() (omnixai.explainers.vision.specific.cem.cemoptimizer method)": [[20, "omnixai.explainers.vision.specific.cem.CEMOptimizer.pp_optimize"]], "dashfigure (class in omnixai.explanations.base)": [[21, "omnixai.explanations.base.DashFigure"]], "explanationbase (class in omnixai.explanations.base)": [[21, "omnixai.explanations.base.ExplanationBase"]], "predictedresults (class in omnixai.explanations.base)": [[21, "omnixai.explanations.base.PredictedResults"]], "dump() (omnixai.explanations.base.explanationbase method)": [[21, "omnixai.explanations.base.ExplanationBase.dump"]], "dumps() (omnixai.explanations.base.explanationbase method)": [[21, "omnixai.explanations.base.ExplanationBase.dumps"]], "get_explanations() (omnixai.explanations.base.explanationbase method)": [[21, "omnixai.explanations.base.ExplanationBase.get_explanations"]], "get_explanations() (omnixai.explanations.base.predictedresults method)": [[21, "omnixai.explanations.base.PredictedResults.get_explanations"]], "ipython_plot() (omnixai.explanations.base.explanationbase method)": [[21, "omnixai.explanations.base.ExplanationBase.ipython_plot"]], "ipython_plot() (omnixai.explanations.base.predictedresults method)": [[21, "omnixai.explanations.base.PredictedResults.ipython_plot"]], "load() (omnixai.explanations.base.explanationbase method)": [[21, "omnixai.explanations.base.ExplanationBase.load"]], "loads() (omnixai.explanations.base.explanationbase method)": [[21, "omnixai.explanations.base.ExplanationBase.loads"]], "omnixai.explanations": [[21, "module-omnixai.explanations"]], "omnixai.explanations.base": [[21, "module-omnixai.explanations.base"]], "plot() (omnixai.explanations.base.explanationbase method)": [[21, "omnixai.explanations.base.ExplanationBase.plot"]], "plot() (omnixai.explanations.base.predictedresults method)": [[21, "omnixai.explanations.base.PredictedResults.plot"]], "plotly_plot() (omnixai.explanations.base.explanationbase method)": [[21, "omnixai.explanations.base.ExplanationBase.plotly_plot"]], "plotly_plot() (omnixai.explanations.base.predictedresults method)": [[21, "omnixai.explanations.base.PredictedResults.plotly_plot"]], "show() (omnixai.explanations.base.dashfigure method)": [[21, "omnixai.explanations.base.DashFigure.show"]], "to_html() (omnixai.explanations.base.dashfigure method)": [[21, "omnixai.explanations.base.DashFigure.to_html"]], "to_html_div() (omnixai.explanations.base.dashfigure method)": [[21, "omnixai.explanations.base.DashFigure.to_html_div"]], "cfexplanation (class in omnixai.explanations.image.counterfactual)": [[22, "omnixai.explanations.image.counterfactual.CFExplanation"]], "contrastiveexplanation (class in omnixai.explanations.image.contrast)": [[22, "omnixai.explanations.image.contrast.ContrastiveExplanation"]], "maskexplanation (class in omnixai.explanations.image.mask)": [[22, "omnixai.explanations.image.mask.MaskExplanation"]], "pixelimportance (class in omnixai.explanations.image.pixel_importance)": [[22, "omnixai.explanations.image.pixel_importance.PixelImportance"]], "add() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[22, "omnixai.explanations.image.contrast.ContrastiveExplanation.add"]], "add() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[22, "omnixai.explanations.image.counterfactual.CFExplanation.add"]], "add() (omnixai.explanations.image.mask.maskexplanation method)": [[22, "omnixai.explanations.image.mask.MaskExplanation.add"]], "add() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[22, "omnixai.explanations.image.pixel_importance.PixelImportance.add"]], "get_explanations() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[22, "omnixai.explanations.image.contrast.ContrastiveExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[22, "omnixai.explanations.image.counterfactual.CFExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.image.mask.maskexplanation method)": [[22, "omnixai.explanations.image.mask.MaskExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[22, "omnixai.explanations.image.pixel_importance.PixelImportance.get_explanations"]], "ipython_plot() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[22, "omnixai.explanations.image.contrast.ContrastiveExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[22, "omnixai.explanations.image.counterfactual.CFExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.image.mask.maskexplanation method)": [[22, "omnixai.explanations.image.mask.MaskExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[22, "omnixai.explanations.image.pixel_importance.PixelImportance.ipython_plot"]], "omnixai.explanations.image": [[22, "module-omnixai.explanations.image"]], "omnixai.explanations.image.contrast": [[22, "module-omnixai.explanations.image.contrast"]], "omnixai.explanations.image.counterfactual": [[22, "module-omnixai.explanations.image.counterfactual"]], "omnixai.explanations.image.mask": [[22, "module-omnixai.explanations.image.mask"]], "omnixai.explanations.image.pixel_importance": [[22, "module-omnixai.explanations.image.pixel_importance"]], "plot() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[22, "omnixai.explanations.image.contrast.ContrastiveExplanation.plot"]], "plot() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[22, "omnixai.explanations.image.counterfactual.CFExplanation.plot"]], "plot() (omnixai.explanations.image.mask.maskexplanation method)": [[22, "omnixai.explanations.image.mask.MaskExplanation.plot"]], "plot() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[22, "omnixai.explanations.image.pixel_importance.PixelImportance.plot"]], "plotly_plot() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[22, "omnixai.explanations.image.contrast.ContrastiveExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[22, "omnixai.explanations.image.counterfactual.CFExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.image.mask.maskexplanation method)": [[22, "omnixai.explanations.image.mask.MaskExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[22, "omnixai.explanations.image.pixel_importance.PixelImportance.plotly_plot"]], "cfexplanation (class in omnixai.explanations.tabular.counterfactual)": [[23, "omnixai.explanations.tabular.counterfactual.CFExplanation"]], "correlationexplanation (class in omnixai.explanations.tabular.correlation)": [[23, "omnixai.explanations.tabular.correlation.CorrelationExplanation"]], "featureimportance (class in omnixai.explanations.tabular.feature_importance)": [[23, "omnixai.explanations.tabular.feature_importance.FeatureImportance"]], "globalfeatureimportance (class in omnixai.explanations.tabular.feature_importance)": [[23, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance"]], "imbalanceexplanation (class in omnixai.explanations.tabular.imbalance)": [[23, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation"]], "linearexplanation (class in omnixai.explanations.tabular.linear)": [[23, "omnixai.explanations.tabular.linear.LinearExplanation"]], "pdpexplanation (class in omnixai.explanations.tabular.pdp)": [[23, "omnixai.explanations.tabular.pdp.PDPExplanation"]], "sensitivityexplanation (class in omnixai.explanations.tabular.sensitivity)": [[23, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation"]], "treeexplanation (class in omnixai.explanations.tabular.tree)": [[23, "omnixai.explanations.tabular.tree.TreeExplanation"]], "add() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[23, "omnixai.explanations.tabular.correlation.CorrelationExplanation.add"]], "add() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[23, "omnixai.explanations.tabular.counterfactual.CFExplanation.add"]], "add() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[23, "omnixai.explanations.tabular.feature_importance.FeatureImportance.add"]], "add() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[23, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.add"]], "add() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[23, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.add"]], "add() (omnixai.explanations.tabular.linear.linearexplanation method)": [[23, "omnixai.explanations.tabular.linear.LinearExplanation.add"]], "add() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[23, "omnixai.explanations.tabular.pdp.PDPExplanation.add"]], "add() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[23, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.add"]], "add_global() (omnixai.explanations.tabular.tree.treeexplanation method)": [[23, "omnixai.explanations.tabular.tree.TreeExplanation.add_global"]], "add_local() (omnixai.explanations.tabular.tree.treeexplanation method)": [[23, "omnixai.explanations.tabular.tree.TreeExplanation.add_local"]], "get_explanations() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[23, "omnixai.explanations.tabular.correlation.CorrelationExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[23, "omnixai.explanations.tabular.counterfactual.CFExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[23, "omnixai.explanations.tabular.feature_importance.FeatureImportance.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[23, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[23, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.linear.linearexplanation method)": [[23, "omnixai.explanations.tabular.linear.LinearExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[23, "omnixai.explanations.tabular.pdp.PDPExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[23, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.tree.treeexplanation method)": [[23, "omnixai.explanations.tabular.tree.TreeExplanation.get_explanations"]], "ipython_plot() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[23, "omnixai.explanations.tabular.correlation.CorrelationExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[23, "omnixai.explanations.tabular.counterfactual.CFExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[23, "omnixai.explanations.tabular.feature_importance.FeatureImportance.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[23, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[23, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.linear.linearexplanation method)": [[23, "omnixai.explanations.tabular.linear.LinearExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[23, "omnixai.explanations.tabular.pdp.PDPExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[23, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.tree.treeexplanation method)": [[23, "omnixai.explanations.tabular.tree.TreeExplanation.ipython_plot"]], "omnixai.explanations.tabular": [[23, "module-omnixai.explanations.tabular"]], "omnixai.explanations.tabular.correlation": [[23, "module-omnixai.explanations.tabular.correlation"]], "omnixai.explanations.tabular.counterfactual": [[23, "module-omnixai.explanations.tabular.counterfactual"]], "omnixai.explanations.tabular.feature_importance": [[23, "module-omnixai.explanations.tabular.feature_importance"]], "omnixai.explanations.tabular.imbalance": [[23, "module-omnixai.explanations.tabular.imbalance"]], "omnixai.explanations.tabular.linear": [[23, "module-omnixai.explanations.tabular.linear"]], "omnixai.explanations.tabular.pdp": [[23, "module-omnixai.explanations.tabular.pdp"]], "omnixai.explanations.tabular.sensitivity": [[23, "module-omnixai.explanations.tabular.sensitivity"]], "omnixai.explanations.tabular.tree": [[23, "module-omnixai.explanations.tabular.tree"]], "plot() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[23, "omnixai.explanations.tabular.correlation.CorrelationExplanation.plot"]], "plot() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[23, "omnixai.explanations.tabular.counterfactual.CFExplanation.plot"]], "plot() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[23, "omnixai.explanations.tabular.feature_importance.FeatureImportance.plot"]], "plot() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[23, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.plot"]], "plot() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[23, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.plot"]], "plot() (omnixai.explanations.tabular.linear.linearexplanation method)": [[23, "omnixai.explanations.tabular.linear.LinearExplanation.plot"]], "plot() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[23, "omnixai.explanations.tabular.pdp.PDPExplanation.plot"]], "plot() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[23, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.plot"]], "plot() (omnixai.explanations.tabular.tree.treeexplanation method)": [[23, "omnixai.explanations.tabular.tree.TreeExplanation.plot"]], "plotly_plot() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[23, "omnixai.explanations.tabular.correlation.CorrelationExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[23, "omnixai.explanations.tabular.counterfactual.CFExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[23, "omnixai.explanations.tabular.feature_importance.FeatureImportance.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[23, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[23, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.linear.linearexplanation method)": [[23, "omnixai.explanations.tabular.linear.LinearExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[23, "omnixai.explanations.tabular.pdp.PDPExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[23, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.tree.treeexplanation method)": [[23, "omnixai.explanations.tabular.tree.TreeExplanation.plotly_plot"]], "wordimportance (class in omnixai.explanations.text.word_importance)": [[24, "omnixai.explanations.text.word_importance.WordImportance"]], "add() (omnixai.explanations.text.word_importance.wordimportance method)": [[24, "omnixai.explanations.text.word_importance.WordImportance.add"]], "get_explanations() (omnixai.explanations.text.word_importance.wordimportance method)": [[24, "omnixai.explanations.text.word_importance.WordImportance.get_explanations"]], "ipython_plot() (omnixai.explanations.text.word_importance.wordimportance method)": [[24, "omnixai.explanations.text.word_importance.WordImportance.ipython_plot"]], "omnixai.explanations.text": [[24, "module-omnixai.explanations.text"]], "omnixai.explanations.text.word_importance": [[24, "module-omnixai.explanations.text.word_importance"]], "plot() (omnixai.explanations.text.word_importance.wordimportance method)": [[24, "omnixai.explanations.text.word_importance.WordImportance.plot"]], "plotly_plot() (omnixai.explanations.text.word_importance.wordimportance method)": [[24, "omnixai.explanations.text.word_importance.WordImportance.plotly_plot"]], "cfexplanation (class in omnixai.explanations.timeseries.counterfactual)": [[25, "omnixai.explanations.timeseries.counterfactual.CFExplanation"]], "featureimportance (class in omnixai.explanations.timeseries.feature_importance)": [[25, "omnixai.explanations.timeseries.feature_importance.FeatureImportance"]], "add() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[25, "omnixai.explanations.timeseries.counterfactual.CFExplanation.add"]], "add() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[25, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.add"]], "get_explanations() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[25, "omnixai.explanations.timeseries.counterfactual.CFExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[25, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.get_explanations"]], "ipython_plot() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[25, "omnixai.explanations.timeseries.counterfactual.CFExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[25, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.ipython_plot"]], "omnixai.explanations.timeseries": [[25, "module-omnixai.explanations.timeseries"]], "omnixai.explanations.timeseries.counterfactual": [[25, "module-omnixai.explanations.timeseries.counterfactual"]], "omnixai.explanations.timeseries.feature_importance": [[25, "module-omnixai.explanations.timeseries.feature_importance"]], "plot() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[25, "omnixai.explanations.timeseries.counterfactual.CFExplanation.plot"]], "plot() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[25, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.plot"]], "plotly_plot() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[25, "omnixai.explanations.timeseries.counterfactual.CFExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[25, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.plotly_plot"]], "fillnan (class in omnixai.preprocessing.fill)": [[26, "omnixai.preprocessing.fill.FillNaN"]], "fillnantabular (class in omnixai.preprocessing.fill)": [[26, "omnixai.preprocessing.fill.FillNaNTabular"]], "identity (class in omnixai.preprocessing.base)": [[26, "omnixai.preprocessing.base.Identity"]], "kbins (class in omnixai.preprocessing.encode)": [[26, "omnixai.preprocessing.encode.KBins"]], "labelencoder (class in omnixai.preprocessing.encode)": [[26, "omnixai.preprocessing.encode.LabelEncoder"]], "minmax (class in omnixai.preprocessing.normalize)": [[26, "omnixai.preprocessing.normalize.MinMax"]], "normalize (class in omnixai.preprocessing.image)": [[26, "omnixai.preprocessing.image.Normalize"]], "onehot (class in omnixai.preprocessing.encode)": [[26, "omnixai.preprocessing.encode.OneHot"]], "ordinal (class in omnixai.preprocessing.encode)": [[26, "omnixai.preprocessing.encode.Ordinal"]], "pad (omnixai.preprocessing.text.word2id attribute)": [[26, "omnixai.preprocessing.text.Word2Id.PAD"]], "pipeline (class in omnixai.preprocessing.pipeline)": [[26, "omnixai.preprocessing.pipeline.Pipeline"]], "resize (class in omnixai.preprocessing.image)": [[26, "omnixai.preprocessing.image.Resize"]], "round2int (class in omnixai.preprocessing.image)": [[26, "omnixai.preprocessing.image.Round2Int"]], "start (omnixai.preprocessing.text.word2id attribute)": [[26, "omnixai.preprocessing.text.Word2Id.START"]], "sampler (class in omnixai.sampler.tabular)": [[26, "omnixai.sampler.tabular.Sampler"]], "scale (class in omnixai.preprocessing.image)": [[26, "omnixai.preprocessing.image.Scale"]], "scale (class in omnixai.preprocessing.normalize)": [[26, "omnixai.preprocessing.normalize.Scale"]], "standard (class in omnixai.preprocessing.normalize)": [[26, "omnixai.preprocessing.normalize.Standard"]], "tabulartransform (class in omnixai.preprocessing.tabular)": [[26, "omnixai.preprocessing.tabular.TabularTransform"]], "tfidf (class in omnixai.preprocessing.text)": [[26, "omnixai.preprocessing.text.Tfidf"]], "transformbase (class in omnixai.preprocessing.base)": [[26, "omnixai.preprocessing.base.TransformBase"]], "unk (omnixai.preprocessing.text.word2id attribute)": [[26, "omnixai.preprocessing.text.Word2Id.UNK"]], "word2id (class in omnixai.preprocessing.text)": [[26, "omnixai.preprocessing.text.Word2Id"]], "categories (omnixai.preprocessing.encode.labelencoder property)": [[26, "omnixai.preprocessing.encode.LabelEncoder.categories"]], "categories (omnixai.preprocessing.encode.onehot property)": [[26, "omnixai.preprocessing.encode.OneHot.categories"]], "categories (omnixai.preprocessing.encode.ordinal property)": [[26, "omnixai.preprocessing.encode.Ordinal.categories"]], "categories (omnixai.preprocessing.tabular.tabulartransform property)": [[26, "omnixai.preprocessing.tabular.TabularTransform.categories"]], "class_names (omnixai.preprocessing.tabular.tabulartransform property)": [[26, "omnixai.preprocessing.tabular.TabularTransform.class_names"]], "decompose() (omnixai.preprocessing.tabular.tabulartransform method)": [[26, "omnixai.preprocessing.tabular.TabularTransform.decompose"]], "dump() (omnixai.preprocessing.pipeline.pipeline method)": [[26, "omnixai.preprocessing.pipeline.Pipeline.dump"]], "fit() (omnixai.preprocessing.base.identity method)": [[26, "omnixai.preprocessing.base.Identity.fit"]], "fit() (omnixai.preprocessing.base.transformbase method)": [[26, "omnixai.preprocessing.base.TransformBase.fit"]], "fit() (omnixai.preprocessing.encode.kbins method)": [[26, "omnixai.preprocessing.encode.KBins.fit"]], "fit() (omnixai.preprocessing.encode.labelencoder method)": [[26, "omnixai.preprocessing.encode.LabelEncoder.fit"]], "fit() (omnixai.preprocessing.encode.onehot method)": [[26, "omnixai.preprocessing.encode.OneHot.fit"]], "fit() (omnixai.preprocessing.encode.ordinal method)": [[26, "omnixai.preprocessing.encode.Ordinal.fit"]], "fit() (omnixai.preprocessing.fill.fillnan method)": [[26, "omnixai.preprocessing.fill.FillNaN.fit"]], "fit() (omnixai.preprocessing.fill.fillnantabular method)": [[26, "omnixai.preprocessing.fill.FillNaNTabular.fit"]], "fit() (omnixai.preprocessing.image.normalize method)": [[26, "omnixai.preprocessing.image.Normalize.fit"]], "fit() (omnixai.preprocessing.image.resize method)": [[26, "omnixai.preprocessing.image.Resize.fit"]], "fit() (omnixai.preprocessing.image.round2int method)": [[26, "omnixai.preprocessing.image.Round2Int.fit"]], "fit() (omnixai.preprocessing.image.scale method)": [[26, "omnixai.preprocessing.image.Scale.fit"]], "fit() (omnixai.preprocessing.normalize.minmax method)": [[26, "omnixai.preprocessing.normalize.MinMax.fit"]], "fit() (omnixai.preprocessing.normalize.scale method)": [[26, "omnixai.preprocessing.normalize.Scale.fit"]], "fit() (omnixai.preprocessing.normalize.standard method)": [[26, "omnixai.preprocessing.normalize.Standard.fit"]], "fit() (omnixai.preprocessing.pipeline.pipeline method)": [[26, "omnixai.preprocessing.pipeline.Pipeline.fit"]], "fit() (omnixai.preprocessing.tabular.tabulartransform method)": [[26, "omnixai.preprocessing.tabular.TabularTransform.fit"]], "fit() (omnixai.preprocessing.text.tfidf method)": [[26, "omnixai.preprocessing.text.Tfidf.fit"]], "fit() (omnixai.preprocessing.text.word2id method)": [[26, "omnixai.preprocessing.text.Word2Id.fit"]], "get_feature_names() (omnixai.preprocessing.encode.onehot method)": [[26, "omnixai.preprocessing.encode.OneHot.get_feature_names"]], "get_feature_names() (omnixai.preprocessing.tabular.tabulartransform method)": [[26, "omnixai.preprocessing.tabular.TabularTransform.get_feature_names"]], "get_feature_names() (omnixai.preprocessing.text.tfidf method)": [[26, "omnixai.preprocessing.text.Tfidf.get_feature_names"]], "invert() (omnixai.preprocessing.base.identity method)": [[26, "omnixai.preprocessing.base.Identity.invert"]], "invert() (omnixai.preprocessing.base.transformbase method)": [[26, "omnixai.preprocessing.base.TransformBase.invert"]], "invert() (omnixai.preprocessing.encode.kbins method)": [[26, "omnixai.preprocessing.encode.KBins.invert"]], "invert() (omnixai.preprocessing.encode.labelencoder method)": [[26, "omnixai.preprocessing.encode.LabelEncoder.invert"]], "invert() (omnixai.preprocessing.encode.onehot method)": [[26, "omnixai.preprocessing.encode.OneHot.invert"]], "invert() (omnixai.preprocessing.encode.ordinal method)": [[26, "omnixai.preprocessing.encode.Ordinal.invert"]], "invert() (omnixai.preprocessing.fill.fillnan method)": [[26, "omnixai.preprocessing.fill.FillNaN.invert"]], "invert() (omnixai.preprocessing.fill.fillnantabular method)": [[26, "omnixai.preprocessing.fill.FillNaNTabular.invert"]], "invert() (omnixai.preprocessing.image.normalize method)": [[26, "omnixai.preprocessing.image.Normalize.invert"]], "invert() (omnixai.preprocessing.image.resize method)": [[26, "omnixai.preprocessing.image.Resize.invert"]], "invert() (omnixai.preprocessing.image.round2int method)": [[26, "omnixai.preprocessing.image.Round2Int.invert"]], "invert() (omnixai.preprocessing.image.scale method)": [[26, "omnixai.preprocessing.image.Scale.invert"]], "invert() (omnixai.preprocessing.normalize.minmax method)": [[26, "omnixai.preprocessing.normalize.MinMax.invert"]], "invert() (omnixai.preprocessing.normalize.scale method)": [[26, "omnixai.preprocessing.normalize.Scale.invert"]], "invert() (omnixai.preprocessing.normalize.standard method)": [[26, "omnixai.preprocessing.normalize.Standard.invert"]], "invert() (omnixai.preprocessing.pipeline.pipeline method)": [[26, "omnixai.preprocessing.pipeline.Pipeline.invert"]], "invert() (omnixai.preprocessing.tabular.tabulartransform method)": [[26, "omnixai.preprocessing.tabular.TabularTransform.invert"]], "invert() (omnixai.preprocessing.text.tfidf method)": [[26, "omnixai.preprocessing.text.Tfidf.invert"]], "invert() (omnixai.preprocessing.text.word2id method)": [[26, "omnixai.preprocessing.text.Word2Id.invert"]], "load() (omnixai.preprocessing.pipeline.pipeline method)": [[26, "omnixai.preprocessing.pipeline.Pipeline.load"]], "name (omnixai.preprocessing.pipeline.pipeline attribute)": [[26, "omnixai.preprocessing.pipeline.Pipeline.name"]], "omnixai.preprocessing": [[26, "module-omnixai.preprocessing"]], "omnixai.preprocessing.base": [[26, "module-omnixai.preprocessing.base"]], "omnixai.preprocessing.encode": [[26, "module-omnixai.preprocessing.encode"]], "omnixai.preprocessing.fill": [[26, "module-omnixai.preprocessing.fill"]], "omnixai.preprocessing.image": [[26, "module-omnixai.preprocessing.image"]], "omnixai.preprocessing.normalize": [[26, "module-omnixai.preprocessing.normalize"]], "omnixai.preprocessing.pipeline": [[26, "module-omnixai.preprocessing.pipeline"]], "omnixai.preprocessing.tabular": [[26, "module-omnixai.preprocessing.tabular"]], "omnixai.preprocessing.text": [[26, "module-omnixai.preprocessing.text"]], "omnixai.sampler.tabular": [[26, "module-omnixai.sampler.tabular"]], "oversample() (omnixai.sampler.tabular.sampler static method)": [[26, "omnixai.sampler.tabular.Sampler.oversample"]], "step() (omnixai.preprocessing.pipeline.pipeline method)": [[26, "omnixai.preprocessing.pipeline.Pipeline.step"]], "subsample() (omnixai.sampler.tabular.sampler static method)": [[26, "omnixai.sampler.tabular.Sampler.subsample"]], "transform() (omnixai.preprocessing.base.identity method)": [[26, "omnixai.preprocessing.base.Identity.transform"]], "transform() (omnixai.preprocessing.base.transformbase method)": [[26, "omnixai.preprocessing.base.TransformBase.transform"]], "transform() (omnixai.preprocessing.encode.kbins method)": [[26, "omnixai.preprocessing.encode.KBins.transform"]], "transform() (omnixai.preprocessing.encode.labelencoder method)": [[26, "omnixai.preprocessing.encode.LabelEncoder.transform"]], "transform() (omnixai.preprocessing.encode.onehot method)": [[26, "omnixai.preprocessing.encode.OneHot.transform"]], "transform() (omnixai.preprocessing.encode.ordinal method)": [[26, "omnixai.preprocessing.encode.Ordinal.transform"]], "transform() (omnixai.preprocessing.fill.fillnan method)": [[26, "omnixai.preprocessing.fill.FillNaN.transform"]], "transform() (omnixai.preprocessing.fill.fillnantabular method)": [[26, "omnixai.preprocessing.fill.FillNaNTabular.transform"]], "transform() (omnixai.preprocessing.image.normalize method)": [[26, "omnixai.preprocessing.image.Normalize.transform"]], "transform() (omnixai.preprocessing.image.resize method)": [[26, "omnixai.preprocessing.image.Resize.transform"]], "transform() (omnixai.preprocessing.image.round2int method)": [[26, "omnixai.preprocessing.image.Round2Int.transform"]], "transform() (omnixai.preprocessing.image.scale method)": [[26, "omnixai.preprocessing.image.Scale.transform"]], "transform() (omnixai.preprocessing.normalize.minmax method)": [[26, "omnixai.preprocessing.normalize.MinMax.transform"]], "transform() (omnixai.preprocessing.normalize.scale method)": [[26, "omnixai.preprocessing.normalize.Scale.transform"]], "transform() (omnixai.preprocessing.normalize.standard method)": [[26, "omnixai.preprocessing.normalize.Standard.transform"]], "transform() (omnixai.preprocessing.pipeline.pipeline method)": [[26, "omnixai.preprocessing.pipeline.Pipeline.transform"]], "transform() (omnixai.preprocessing.tabular.tabulartransform method)": [[26, "omnixai.preprocessing.tabular.TabularTransform.transform"]], "transform() (omnixai.preprocessing.text.tfidf method)": [[26, "omnixai.preprocessing.text.Tfidf.transform"]], "transform() (omnixai.preprocessing.text.word2id method)": [[26, "omnixai.preprocessing.text.Word2Id.transform"]], "undersample() (omnixai.sampler.tabular.sampler static method)": [[26, "omnixai.sampler.tabular.Sampler.undersample"]], "vocab_size (omnixai.preprocessing.text.word2id property)": [[26, "omnixai.preprocessing.text.Word2Id.vocab_size"]], "dashboard (class in omnixai.visualization.dashboard)": [[27, "omnixai.visualization.dashboard.Dashboard"]], "omnixai.visualization": [[27, "module-omnixai.visualization"]], "omnixai.visualization.dashboard": [[27, "module-omnixai.visualization.dashboard"]], "show() (omnixai.visualization.dashboard.dashboard method)": [[27, "omnixai.visualization.dashboard.Dashboard.show"]]}})