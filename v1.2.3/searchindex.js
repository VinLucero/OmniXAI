Search.setIndex({"docnames": ["index", "omnixai", "omnixai.data", "omnixai.deployment", "omnixai.explainers", "omnixai.explainers.data", "omnixai.explainers.nlp", "omnixai.explainers.nlp.agnostic", "omnixai.explainers.nlp.counterfactual", "omnixai.explainers.nlp.specific", "omnixai.explainers.prediction", "omnixai.explainers.ranking", "omnixai.explainers.ranking.agnostic", "omnixai.explainers.ranking.counterfactual", "omnixai.explainers.tabular", "omnixai.explainers.tabular.agnostic", "omnixai.explainers.tabular.counterfactual", "omnixai.explainers.tabular.specific", "omnixai.explainers.timeseries", "omnixai.explainers.timeseries.agnostic", "omnixai.explainers.timeseries.counterfactual", "omnixai.explainers.vision", "omnixai.explainers.vision.agnostic", "omnixai.explainers.vision.counterfactual", "omnixai.explainers.vision.specific", "omnixai.explanations", "omnixai.explanations.image", "omnixai.explanations.tabular", "omnixai.explanations.text", "omnixai.explanations.timeseries", "omnixai.preprocessing", "omnixai.visualization", "tutorials", "tutorials/data_analysis", "tutorials/misc/data_objects", "tutorials/misc/preprocessing", "tutorials/nlp", "tutorials/nlp/ce_classification", "tutorials/nlp/ce_qa", "tutorials/nlp/ig_tf", "tutorials/nlp/ig_torch", "tutorials/nlp/l2x", "tutorials/nlp/lime", "tutorials/nlp/shap", "tutorials/nlp_imdb", "tutorials/omnixai_in_ml_workflow", "tutorials/tabular/ale", "tutorials/tabular/ce", "tutorials/tabular/l2x", "tutorials/tabular/lime", "tutorials/tabular/linear", "tutorials/tabular/mace", "tutorials/tabular/pdp", "tutorials/tabular/ranking", "tutorials/tabular/sensitivity", "tutorials/tabular/shap", "tutorials/tabular/tree", "tutorials/tabular_classification", "tutorials/tabular_regression", "tutorials/timeseries", "tutorials/timeseries/mace", "tutorials/timeseries/shap", "tutorials/vision", "tutorials/vision/ce_imagenet", "tutorials/vision/ce_tf", "tutorials/vision/ce_torch", "tutorials/vision/cem_tf", "tutorials/vision/cem_torch", "tutorials/vision/feature_map_tf", "tutorials/vision/feature_map_torch", "tutorials/vision/feature_visualization_tf", "tutorials/vision/feature_visualization_torch", "tutorials/vision/gradcam_tf", "tutorials/vision/gradcam_torch", "tutorials/vision/gradcam_vlm", "tutorials/vision/ig_tf", "tutorials/vision/ig_torch", "tutorials/vision/ig_vlm", "tutorials/vision/l2x", "tutorials/vision/lime", "tutorials/vision/shap"], "filenames": ["index.rst", "omnixai.rst", "omnixai.data.rst", "omnixai.deployment.rst", "omnixai.explainers.rst", "omnixai.explainers.data.rst", "omnixai.explainers.nlp.rst", "omnixai.explainers.nlp.agnostic.rst", "omnixai.explainers.nlp.counterfactual.rst", "omnixai.explainers.nlp.specific.rst", "omnixai.explainers.prediction.rst", "omnixai.explainers.ranking.rst", "omnixai.explainers.ranking.agnostic.rst", "omnixai.explainers.ranking.counterfactual.rst", "omnixai.explainers.tabular.rst", "omnixai.explainers.tabular.agnostic.rst", "omnixai.explainers.tabular.counterfactual.rst", "omnixai.explainers.tabular.specific.rst", "omnixai.explainers.timeseries.rst", "omnixai.explainers.timeseries.agnostic.rst", "omnixai.explainers.timeseries.counterfactual.rst", "omnixai.explainers.vision.rst", "omnixai.explainers.vision.agnostic.rst", "omnixai.explainers.vision.counterfactual.rst", "omnixai.explainers.vision.specific.rst", "omnixai.explanations.rst", "omnixai.explanations.image.rst", "omnixai.explanations.tabular.rst", "omnixai.explanations.text.rst", "omnixai.explanations.timeseries.rst", "omnixai.preprocessing.rst", "omnixai.visualization.rst", "tutorials.rst", "tutorials/data_analysis.ipynb", "tutorials/misc/data_objects.ipynb", "tutorials/misc/preprocessing.ipynb", "tutorials/nlp.ipynb", "tutorials/nlp/ce_classification.ipynb", "tutorials/nlp/ce_qa.ipynb", "tutorials/nlp/ig_tf.ipynb", "tutorials/nlp/ig_torch.ipynb", "tutorials/nlp/l2x.ipynb", "tutorials/nlp/lime.ipynb", "tutorials/nlp/shap.ipynb", "tutorials/nlp_imdb.ipynb", "tutorials/omnixai_in_ml_workflow.ipynb", "tutorials/tabular/ale.ipynb", "tutorials/tabular/ce.ipynb", "tutorials/tabular/l2x.ipynb", "tutorials/tabular/lime.ipynb", "tutorials/tabular/linear.ipynb", "tutorials/tabular/mace.ipynb", "tutorials/tabular/pdp.ipynb", "tutorials/tabular/ranking.ipynb", "tutorials/tabular/sensitivity.ipynb", "tutorials/tabular/shap.ipynb", "tutorials/tabular/tree.ipynb", "tutorials/tabular_classification.ipynb", "tutorials/tabular_regression.ipynb", "tutorials/timeseries.ipynb", "tutorials/timeseries/mace.ipynb", "tutorials/timeseries/shap.ipynb", "tutorials/vision.ipynb", "tutorials/vision/ce_imagenet.ipynb", "tutorials/vision/ce_tf.ipynb", "tutorials/vision/ce_torch.ipynb", "tutorials/vision/cem_tf.ipynb", "tutorials/vision/cem_torch.ipynb", "tutorials/vision/feature_map_tf.ipynb", "tutorials/vision/feature_map_torch.ipynb", "tutorials/vision/feature_visualization_tf.ipynb", "tutorials/vision/feature_visualization_torch.ipynb", "tutorials/vision/gradcam_tf.ipynb", "tutorials/vision/gradcam_torch.ipynb", "tutorials/vision/gradcam_vlm.ipynb", "tutorials/vision/ig_tf.ipynb", "tutorials/vision/ig_torch.ipynb", "tutorials/vision/ig_vlm.ipynb", "tutorials/vision/l2x.ipynb", "tutorials/vision/lime.ipynb", "tutorials/vision/shap.ipynb"], "titles": ["Welcome to OmniXAI\u2019s documentation!", "OmniXAI: An Explanation Toolbox", "omnixai.data package", "omnixai.deployment package", "omnixai.explainers package", "omnixai.explainers.data package", "omnixai.explainers.nlp package", "omnixai.explainers.nlp.agnostic package", "omnixai.explainers.nlp.counterfactual package", "omnixai.explainers.nlp.specific package", "omnixai.explainers.prediction package", "omnixai.explainers.ranking package", "omnixai.explainers.ranking.agnostic package", "omnixai.explainers.ranking.counterfactual package", "omnixai.explainers.tabular package", "omnixai.explainers.tabular.agnostic package", "omnixai.explainers.tabular.counterfactual package", "omnixai.explainers.tabular.specific package", "omnixai.explainers.timeseries package", "omnixai.explainers.timeseries.agnostic package", "omnixai.explainers.timeseries.counterfactual package", "omnixai.explainers.vision package", "omnixai.explainers.vision.agnostic package", "omnixai.explainers.vision.counterfactual package", "omnixai.explainers.vision.specific package", "omnixai.explanations package", "omnixai.explanations.image package", "omnixai.explanations.tabular package", "omnixai.explanations.text package", "omnixai.explanations.timeseries package", "omnixai.preprocessing package", "omnixai.visualization package", "Tutorials &amp; Example Code", "DataAnalyzer for feature analysis", "Examples of data objects", "Examples of data preprocessing", "NLPExplainer for sentiment analysis", "Counterfactual explanation for text classification", "Counterfactual explanation for question answering", "Integrated-gradient on IMDB dataset (Tensorflow)", "Integrated-gradient on IMDB dataset (PyTorch)", "L2X (learning to explain) for text classification", "LIME for text classification", "SHAP for sentiment analysis", "NLPExplainer on IMDB dataset", "OmniXAI in a ML workflow", "Accumulated local effects (ALE)", "Counterfactual explanation on Diabetes dataset", "L2X (learning to explain) for income prediction", "LIME for income prediction", "Logistic regression for income prediction", "MACE counterfactual explanation for income prediction", "Paritial dependence plots (PDP)", "Learning to Rank Expanations Demo", "Morris sensitivity analysis", "SHAP for income prediction", "Decision tree for income prediction", "TabularExplainer for income prediction (classification)", "TabularExplainer for house-price prediction (regression)", "TimeseriesExplainer for time series anomaly detection", "Counterfactual explanation on time series anomaly detection", "SHAP for time series anomaly detection", "VisionExplainer for image classification", "Counterfactual explanation on ImageNet", "Counterfactual explanation on MNIST (Tensorflow)", "Counterfactual explanation on MNIST (PyTorch)", "Contrastive explanation on MNIST (Tensorflow)", "Contrastive explanation on MNIST (PyTorch)", "Feature map visualization (Tensorflow)", "Feature map visualization (PyTorch)", "Feature visualization (Tensorflow)", "Feature visualization (PyTorch)", "Grad-CAM for image classification (Tensorflow)", "Grad-CAM for image classification (PyTorch)", "Grad-CAM for visual language tasks", "Integrated-gradient for image classification (Tensorflow)", "Integrated-gradient for image classification (PyTorch)", "Integrated-gradient for visual language tasks", "L2X (learning to explain) on MNIST", "LIME for image classification", "SHAP on MNIST"], "terms": {"short": [0, 1], "omni": [0, 1], "explain": [0, 2, 3, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80], "ai": [0, 1, 2], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "python": [0, 1, 53, 74, 77, 80], "librari": [0, 2, 7, 33, 34, 35, 37, 38, 43, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 68, 74, 77], "xai": [0, 1], "offer": [0, 1, 41], "wai": [0, 1, 4, 30, 41, 53], "interpret": [0, 1, 7, 15, 22, 41, 48, 78], "machin": [0, 1, 4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 41, 42, 45, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 78, 79], "learn": [0, 1, 4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 32, 36, 42, 44, 45, 46, 47, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 79], "address": [0, 1], "mani": [0, 1, 41], "pain": [0, 1], "point": [0, 1, 41, 59, 60, 61], "decis": [0, 1, 16, 17, 23, 27, 32, 47, 63, 64, 65], "made": [0, 1, 41], "model": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "practic": [0, 1, 4, 57, 58, 59, 62], "aim": [0, 1], "one": [0, 1, 2, 4, 7, 13, 19, 20, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 72, 73, 75, 76, 78, 79, 80], "stop": [0, 1], "comprehens": [0, 1], "make": [0, 1, 30, 41, 45, 59], "easi": [0, 1, 36, 44, 57, 58, 59, 62], "data": [0, 4, 6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80], "scientist": [0, 1], "ml": [0, 1, 4, 5, 10, 15, 17, 32, 33, 36, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 80], "research": [0, 1, 74, 77], "practition": [0, 1], "who": [0, 1, 24, 41], "need": [0, 1, 2, 4, 34, 36, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80], "explan": [0, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 31, 32, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "variou": [0, 1], "type": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 44, 46, 47, 48, 49, 52, 53, 55, 57, 58, 59, 61, 62, 70, 71, 72, 73, 75, 76, 78], "method": [0, 5, 8, 13, 16, 22, 24, 26, 27, 30, 34, 37, 38, 39, 40, 41, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 63, 64, 65, 66, 67, 70, 71, 75, 76, 78, 80], "differ": [0, 5, 6, 14, 15, 16, 18, 21, 33, 41, 45, 46, 48, 49, 51, 52, 55, 57, 58, 70, 71, 78], "stage": [0, 1, 45], "process": [0, 1, 4, 9, 10, 17, 23, 24, 30, 36, 39, 40, 44, 53, 57, 58, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 80], "includ": [0, 1, 2, 23, 24, 30, 62], "rich": [0, 1], "famili": [0, 1, 45, 49, 51, 55, 57], "integr": [0, 1, 9, 17, 24, 26, 32, 36, 44, 62], "unifi": [0, 1, 4, 36, 44, 57, 58, 59, 62], "interfac": [0, 1, 4, 36, 41, 44, 48, 57, 58, 59, 62, 78], "which": [0, 1, 2, 4, 6, 9, 10, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 77, 78, 80], "support": [0, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 21, 22, 24, 34, 35, 36, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 79, 80], "multipl": [0, 1, 2, 4, 5, 6, 14, 18, 21, 30, 33, 41, 45, 48, 57, 58, 70, 71, 78], "tabular": [0, 1, 4, 5, 10, 12, 13, 25, 33, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "imag": [0, 1, 4, 16, 17, 21, 22, 23, 24, 25, 32, 41, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 77, 78, 80], "text": [0, 1, 4, 6, 7, 8, 9, 25, 27, 32, 36, 38, 39, 40, 43, 44, 53, 74, 77], "time": [0, 1, 2, 4, 5, 6, 14, 15, 18, 19, 20, 21, 29, 32, 33, 41, 45], "seri": [0, 1, 2, 4, 18, 19, 20, 29, 32], "tradit": [0, 1], "scikit": [0, 1, 4, 6, 10, 14, 15, 17, 18, 21, 36, 44, 52, 57, 58, 62], "deep": [0, 1, 24, 68, 72, 73], "pytorch": [0, 1, 4, 7, 15, 22, 24, 32, 36, 41, 44, 48, 57, 58, 62, 74, 77, 78, 80], "tensorflow": [0, 1, 4, 6, 10, 14, 18, 21, 24, 32, 36, 44, 47, 53, 57, 58, 62, 71, 80], "rang": [0, 1, 23, 24, 30, 39, 40, 44, 62, 63, 65, 67, 68, 70, 71, 72, 73, 75, 76, 78, 79], "divers": [0, 1, 51], "specif": [0, 1, 4, 6, 10, 14, 18, 21, 25, 26, 27, 28, 29, 36, 39, 40, 44, 45, 56, 57, 58, 59, 62, 68, 69, 70, 71, 72, 73, 74, 77], "agnost": [0, 1, 4, 6, 11, 13, 14, 16, 18, 20, 21, 40, 41, 44, 48, 49, 51, 53, 55, 78, 80], "attribut": [0, 1, 74, 77], "counterfactu": [0, 1, 6, 11, 14, 18, 21, 25, 32, 36, 44, 45, 59, 62], "gradient": [0, 1, 9, 16, 17, 20, 23, 24, 26, 32, 36, 41, 44, 62, 72, 73, 74, 78], "base": [0, 1, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 36, 37, 38, 41, 43, 53, 54, 56, 58, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 77, 78], "etc": [0, 1], "For": [0, 1, 2, 4, 5, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 27, 28, 30, 33, 34, 35, 39, 40, 41, 42, 45, 48, 50, 52, 56, 57, 58, 62, 70, 71, 74, 77, 78, 79], "provid": [0, 1, 2, 4, 25, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 44, 50, 56, 57, 58, 59, 62, 68, 69], "an": [0, 2, 4, 5, 7, 13, 15, 16, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "us": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "gener": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 41, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 78, 80], "applic": [0, 1, 53, 68, 70, 72, 75], "onli": [0, 1, 2, 4, 5, 7, 10, 13, 15, 16, 17, 22, 23, 24, 30, 33, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "write": [0, 1, 41, 42], "few": [0, 1], "line": [0, 1, 41, 42, 59], "code": [0, 1, 62, 64, 65, 66, 67, 72, 73, 75, 76, 78, 79, 80], "also": [0, 1, 2, 34, 41, 53, 62, 69, 70, 71], "gui": [0, 1], "dashboard": [0, 4, 33, 36, 44, 45, 57, 58, 59, 62], "visual": [0, 4, 21, 25, 32, 33, 36, 44, 45, 47, 53, 57, 58, 59, 62, 72, 73], "obtain": [0, 1, 41], "more": [0, 4, 12, 15, 16, 19, 20, 24, 30, 33, 41, 42, 45, 48, 52, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 78], "insight": [0, 1], "about": [0, 1, 4, 41], "compar": [0, 13, 17, 22, 24], "other": [0, 1, 33, 35, 41, 45, 46, 47, 48, 49, 51, 52, 55, 57, 58, 68, 69, 70, 71, 78], "exist": [0, 1, 30, 41, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58], "ibm": 0, "aix360": 0, "microsoft": 0, "interpretml": 0, "alibi": 0, "explainx": 0, "our": [0, 41, 51, 53, 60], "ha": [0, 1, 2, 4, 8, 24, 26, 27, 28, 29, 34, 36, 37, 38, 39, 40, 41, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 74, 77, 80], "list": [0, 1, 2, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 34, 53, 54, 58, 70, 71], "uniqu": 0, "follow": [0, 1, 2, 4, 24, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 44, 46, 48, 49, 51, 52, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80], "analysi": [0, 1, 4, 5, 10, 15, 27, 31, 32, 37, 45, 57, 58, 62], "explor": [0, 1, 24, 33, 53], "analyz": [0, 1, 5, 10, 33, 41, 45, 53, 54, 57, 58, 68, 69, 70, 71], "correl": [0, 1, 4, 25, 33, 45, 53], "check": [0, 5, 45, 53, 72, 75, 79], "imbal": [0, 1, 4, 25, 30, 33, 45], "issu": [0, 41, 45], "most": [0, 1, 16, 27, 45, 59, 69], "popular": 0, "aspect": 0, "inform": [0, 1, 2, 4, 5, 7, 15, 16, 22, 27, 29, 33, 41, 45, 47, 48, 52, 70, 71, 78], "chang": [0, 13, 22, 51, 78], "current": [0, 30, 36, 44, 62, 69], "predict": [0, 1, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 61, 62, 65, 67, 72, 75, 78, 79], "grad": [0, 1, 4, 21, 24, 26, 32, 39, 45, 49, 51, 55, 57, 62], "cam": [0, 1, 4, 21, 24, 26, 32, 62], "its": [0, 1, 4, 14, 15, 16, 17, 22, 34, 36, 39, 40, 44, 46, 48, 49, 51, 52, 53, 55, 57, 58, 62, 63, 64, 65, 66, 67, 72, 73, 75, 76, 78, 80], "variant": 0, "timeseri": [0, 1, 4, 25, 34, 59, 60, 61], "A": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 41, 42, 43, 44, 45, 48, 53, 59, 60, 61, 62, 63, 73, 74, 77, 78], "much": [0, 38, 41], "simpler": [0, 41], "user": [0, 1, 4, 5, 6, 10, 14, 18, 21, 36, 38, 44, 53, 57, 58, 59, 62], "examin": [0, 45], "extend": [0, 41], "ad": [0, 24], "new": [0, 1, 2, 13, 22, 30, 41, 71, 74, 77], "algorithm": [0, 12, 53], "easili": [0, 34, 38], "implement": [0, 1, 8, 16, 24, 31, 37, 38, 41, 48, 78], "singl": [0, 2, 4, 15, 30, 34, 35], "class": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 62, 63, 65, 67, 72, 73, 74, 75, 76, 77, 78, 79], "deriv": [0, 4, 5, 6, 14, 18, 21, 30, 33], "from": [0, 1, 2, 4, 5, 6, 7, 9, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "The": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "show": [0, 1, 4, 25, 26, 27, 28, 31, 33, 34, 36, 37, 39, 40, 43, 44, 45, 52, 54, 57, 58, 59, 62], "we": [0, 1, 2, 4, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "continu": [0, 1, 2, 5, 14, 15, 16, 17, 30, 34, 35, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58], "improv": [0, 24], "thi": [0, 1, 2, 3, 4, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "futur": [0, 71], "e": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80], "g": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80], "vision": [0, 1, 4, 26, 34, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "nlp": [0, 1, 4, 28, 36, 37, 38, 39, 40, 41, 42, 43, 44], "task": [0, 1, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 76, 78, 79, 80], "eda": 0, "na": [0, 41], "global": [0, 1, 4, 5, 15, 17, 24, 27, 31, 33, 36, 44, 45, 50, 52, 54, 56, 57, 58, 62], "select": [0, 1, 2, 7, 15, 22, 33, 34, 45, 62], "metric": [0, 1, 2, 10, 15, 27, 34, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 55, 57, 58, 59, 64, 66, 80], "black": [0, 1, 4, 6, 10, 14, 16, 18, 21, 23, 36, 45, 47, 49, 51, 55, 57, 58, 59, 62, 63, 64, 65], "box": [0, 1, 4, 6, 10, 14, 16, 18, 21, 23, 36, 47, 51, 57, 58, 59, 62, 63, 64, 65], "pdp": [0, 1, 4, 5, 14, 21, 25, 31, 32, 45, 57, 58], "al": [0, 1, 8, 13, 14, 16, 20, 24, 32, 37, 38, 45, 51, 57, 58, 72, 73], "sensit": [0, 1, 14, 25, 32, 58], "torch": [0, 4, 6, 7, 9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 39, 40, 44, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "tf": [0, 1, 9, 16, 17, 22, 23, 24, 30, 35, 39, 40, 41, 42, 47, 53, 63, 64, 65, 66, 67, 68, 72, 73, 75, 76, 80], "lime": [0, 1, 4, 6, 14, 21, 26, 32, 36, 44, 45, 48, 57, 58, 62], "local": [0, 1, 4, 7, 8, 9, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 27, 31, 32, 36, 44, 45, 48, 49, 50, 51, 55, 56, 57, 58, 59, 61, 62, 72, 73], "shap": [0, 1, 4, 6, 14, 17, 18, 21, 26, 32, 36, 45, 48, 57, 58, 59], "contrast": [0, 1, 24, 25, 32], "score": [0, 1, 9, 12, 13, 15, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 36, 37, 45, 50, 53, 59, 60, 61, 64, 66, 80], "layer": [0, 1, 7, 9, 15, 24, 39, 40, 44, 47, 53, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 80], "smooth": [0, 20, 24], "guid": [0, 24], "backpropag": 0, "linear": [0, 1, 7, 14, 15, 25, 40, 44, 50, 56, 65, 67, 78], "tree": [0, 1, 17, 25, 32], "map": [0, 9, 15, 24, 32, 39, 40], "accept": 0, "transform": [0, 1, 4, 6, 7, 10, 14, 18, 21, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 62, 63, 65, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79], "between": [0, 5, 15, 38, 41, 45], "toolkit": 0, "literatur": 0, "eli5": 0, "captum": 0, "l2x": [0, 4, 6, 14, 21, 32, 40, 44], "you": [0, 1, 34, 37, 39, 40, 41, 43, 53, 68, 69, 70, 71], "can": [0, 1, 2, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 30, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "pypi": [0, 1], "call": [0, 1, 2, 33, 35, 36, 39, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 71, 78, 80], "pip": [0, 1, 53], "mai": [0, 1, 2, 30, 34, 41, 45, 46, 48, 49, 50, 51, 52, 55, 57, 68, 69, 70, 71, 78], "sourc": [0, 1], "clone": [0, 1], "repo": [0, 1], "navig": [0, 1], "root": [0, 1, 34, 65, 67, 78], "directori": [0, 1, 4, 7, 15, 16, 17, 22, 30], "edit": [0, 1], "mode": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 52, 55, 57, 58, 59, 60, 61, 62, 72, 73, 75, 76, 78], "addit": [0, 1, 2, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 33, 57, 58, 59], "depend": [0, 1, 15, 22, 27, 32, 41, 48, 57, 58, 78], "plot": [0, 1, 15, 22, 25, 26, 27, 28, 29, 31, 32, 45, 48, 49, 51, 53, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 78, 80], "To": [0, 1, 4, 33, 34, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80], "recommend": [0, 1, 4, 13, 46, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 76, 78, 79, 80], "link": [0, 1], "tutori": [0, 1, 4, 45], "exampl": [0, 2, 4, 5, 8, 13, 16, 20, 24, 26, 27, 29, 30, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "In": [0, 1, 4, 33, 34, 36, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 72, 73, 75, 76, 78, 80], "tabularexplain": [0, 1, 4, 5, 14, 15, 16, 17, 32, 36, 44, 45, 62], "visionexplain": [0, 1, 4, 21, 32], "nlpexplain": [0, 1, 4, 6, 32], "timeseriesexplain": [0, 1, 4, 18, 32], "respect": [0, 1, 2, 4, 5, 34, 59], "dataanalyz": [0, 1, 4, 5, 31, 32, 45], "predictionanalyz": [0, 1, 4, 10, 31, 45, 57, 58], "result": [0, 4, 5, 10, 23, 24, 26, 27, 28, 29, 31, 36, 38, 44, 45, 53, 57, 58, 59], "specifi": [0, 1, 2, 4, 10, 24, 30, 33, 34, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 68, 69, 70, 71, 78], "function": [0, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "pre": [0, 1, 4, 9, 17, 24, 30, 39, 40], "convert": [0, 1, 2, 4, 5, 6, 9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 29, 30, 34, 35, 36, 38, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80], "raw": [0, 1, 2, 4, 6, 9, 10, 14, 17, 18, 21, 22, 23, 24, 26, 27, 33, 34, 36, 39, 40, 44, 57, 58, 59, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 80], "input": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 38, 39, 40, 44, 46, 47, 48, 49, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80], "post": [0, 1, 4, 41, 42], "option": [0, 1, 2, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 38, 57, 58, 59, 62], "output": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "probabl": [0, 1, 4, 6, 7, 8, 10, 14, 15, 16, 17, 21, 22, 25, 36, 37, 41, 42, 44, 46, 48, 49, 51, 52, 55, 57, 58, 62, 78, 79], "appli": [0, 1, 2, 4, 14, 15, 16, 17, 24, 30, 33, 35, 36, 39, 40, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 72, 75, 79], "mace": [0, 1, 4, 11, 14, 18, 32, 45, 48, 57, 58, 59], "let": [0, 1, 35, 38, 41, 45, 53, 68, 69, 71, 72, 75, 79], "take": [0, 1, 34, 36, 41, 44, 46, 48, 49, 51, 52, 55, 57, 58, 62, 63, 64, 65, 66, 67, 72, 73, 75, 76, 78, 80], "incom": [0, 1, 32, 33, 45, 46, 52], "dataset": [0, 1, 2, 4, 5, 7, 10, 12, 13, 14, 15, 16, 17, 18, 22, 30, 31, 32, 33, 34, 35, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 78, 80], "http": [0, 1, 7, 8, 9, 12, 15, 16, 17, 19, 22, 23, 24, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "archiv": [0, 1, 33, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57], "ic": [0, 1, 33, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57], "uci": [0, 1, 33, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57], "edu": [0, 1, 33, 42, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57], "adult": [0, 1, 4, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "repres": [0, 1, 2, 12, 19, 20, 34, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80], "creat": [0, 1, 2, 4, 33, 34, 38, 41, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 68, 69], "instanc": [0, 1, 2, 4, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80], "given": [0, 1, 2, 4, 5, 12, 13, 14, 17, 30, 33, 34, 35, 36, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62], "panda": [0, 1, 2, 27, 29, 30, 33, 34, 35, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "datafram": [0, 1, 2, 15, 16, 17, 27, 29, 30, 33, 34, 35, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "categor": [0, 1, 2, 5, 14, 15, 16, 17, 30, 33, 34, 35, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "name": [0, 1, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 21, 22, 25, 26, 27, 28, 30, 31, 33, 36, 39, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 67, 72, 73, 75, 76, 78, 79], "target": [0, 1, 2, 5, 10, 14, 15, 16, 17, 24, 30, 33, 34, 35, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78], "label": [0, 1, 2, 4, 7, 9, 10, 14, 15, 16, 17, 22, 24, 26, 27, 28, 30, 31, 33, 34, 35, 37, 39, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 72, 73, 75, 76, 78, 79], "column": [0, 1, 2, 4, 10, 12, 27, 30, 33, 34, 35, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "import": [0, 1, 2, 5, 7, 9, 12, 15, 17, 19, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "load": [0, 1, 4, 25, 30, 33, 36, 38, 39, 40, 41, 42, 44, 45, 47, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80], "feature_nam": [0, 1, 4, 27, 33, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58], "ag": [0, 1, 4, 5, 31, 33, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57], "workclass": [0, 1, 4, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "fnlwgt": [0, 1, 4, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "educ": [0, 1, 4, 31, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "num": [0, 1, 4, 31, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "marit": [0, 1, 4, 31, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "statu": [0, 1, 4, 31, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "occup": [0, 1, 4, 31, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "relationship": [0, 1, 4, 14, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "race": [0, 1, 4, 14, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "sex": [0, 1, 4, 14, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "capit": [0, 1, 4, 14, 31, 33, 41, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "gain": [0, 1, 4, 5, 31, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "loss": [0, 1, 4, 7, 14, 15, 16, 20, 22, 23, 24, 31, 33, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 64, 65, 66, 67, 74, 77, 78, 80], "hour": [0, 1, 4, 31, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "per": [0, 1, 4, 12, 16, 31, 33, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57], "week": [0, 1, 4, 31, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "countri": [0, 1, 4, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "df": [0, 1, 2, 27, 34, 35, 45, 54, 57, 58, 59, 60, 61], "pd": [0, 1, 2, 15, 16, 17, 30, 34, 35, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "np": [0, 1, 2, 4, 14, 15, 16, 17, 20, 24, 30, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 68, 72, 74, 75, 77, 80], "genfromtxt": [0, 1, 4, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "delimit": [0, 1, 4, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "dtype": [0, 1, 4, 33, 39, 40, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57], "str": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 33, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 62, 63, 72, 73, 75, 76, 79], "tabular_data": [0, 1, 4, 30, 33, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58], "categorical_column": [0, 1, 2, 4, 30, 33, 34, 35, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "1": [0, 1, 2, 4, 12, 15, 16, 20, 21, 23, 24, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "3": [0, 1, 2, 4, 12, 14, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "5": [0, 1, 4, 7, 8, 13, 15, 16, 20, 22, 23, 24, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "6": [0, 1, 4, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 77, 78, 80], "7": [0, 1, 4, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 74, 75, 77, 78, 79, 80], "8": [0, 1, 4, 14, 15, 17, 27, 33, 34, 35, 39, 40, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 67, 72, 78, 80], "9": [0, 1, 4, 27, 33, 34, 35, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 64, 65, 66, 67, 74, 77, 78, 79, 80], "13": [0, 1, 4, 33, 34, 35, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 69], "target_column": [0, 1, 2, 4, 33, 34, 35, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "packag": [0, 1, 35, 36, 39, 40, 41, 42, 44, 53, 54, 57, 58, 59, 62, 74, 77, 80], "preprocess": [0, 4, 6, 10, 14, 17, 18, 21, 22, 23, 24, 32, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80], "sever": [0, 1, 34, 35, 41, 45, 50, 56, 57, 58], "tabulartransform": [0, 1, 4, 30, 35, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58], "special": [0, 1, 20, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58], "design": [0, 13, 20, 22, 36, 44, 46, 48, 49, 51, 52, 55, 57, 58, 59, 62], "By": [0, 1, 46, 48, 49, 51, 52, 55, 57, 58, 62], "default": [0, 1, 2, 7, 12, 15, 16, 22, 24, 33, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "hot": [0, 1, 30, 35, 46, 48, 49, 51, 52, 55, 57, 58], "encod": [0, 1, 14, 17, 24, 35, 46, 48, 49, 51, 52, 53, 55, 57, 58, 74], "keep": [0, 1, 30, 46, 48, 49, 51, 52, 55, 57, 58], "valu": [0, 1, 2, 4, 5, 7, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 30, 34, 35, 36, 37, 39, 40, 41, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 66, 74, 77, 78, 80], "numpi": [0, 1, 2, 10, 12, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80], "arrai": [0, 1, 2, 10, 12, 30, 33, 34, 35, 36, 37, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80], "If": [0, 1, 2, 4, 5, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 26, 27, 28, 30, 33, 34, 35, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 61, 63, 64, 65, 66, 67, 72, 73, 75, 76, 78, 79, 80], "last": [0, 1, 2, 4, 30, 33, 34, 35, 46, 48, 49, 51, 52, 55, 57, 58, 62], "after": [0, 1, 41, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 78, 80], "train": [0, 1, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 21, 22, 27, 30, 34, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 78, 80], "xgboost": [0, 1, 4, 17, 45, 46, 48, 49, 51, 52, 55, 57], "classifi": [0, 1, 16, 17, 41, 42, 45, 46, 48, 49, 51, 52, 55, 57], "fit": [0, 1, 4, 14, 17, 30, 35, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 64, 66, 80], "class_nam": [0, 1, 14, 25, 26, 27, 28, 30, 31, 39, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 55, 57, 62, 63, 65, 67, 72, 73, 75, 76, 78, 79], "x": [0, 1, 2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 74, 77, 78, 80], "split": [0, 1, 2, 14, 17, 38, 59, 60, 61], "test": [0, 1, 10, 13, 14, 17, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80], "train_label": [0, 1, 45, 46, 52, 57, 64, 66, 78, 80], "test_label": [0, 1, 10, 45, 46, 52, 57, 64, 66, 78, 80], "sklearn": [0, 1, 15, 17, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58], "model_select": [0, 1, 45, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58], "train_test_split": [0, 1, 45, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58], "train_siz": [0, 1, 14, 17, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58], "0": [0, 1, 2, 4, 7, 12, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80], "80": [0, 1, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58], "xgbclassifi": [0, 1, 4, 45, 46, 48, 49, 51, 52, 55, 57], "n_estim": [0, 1, 4, 41, 42, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58], "300": [0, 1, 4, 24, 45, 46, 48, 49, 51, 52, 55, 57, 70, 71], "max_depth": [0, 1, 4, 45, 46, 48, 49, 51, 52, 55, 56, 57], "back": [0, 1, 2, 24, 45, 49, 53, 55, 57, 58], "train_data": [0, 1, 39, 40, 44, 45, 57, 58, 65, 67, 78], "invert": [0, 1, 30, 35, 45, 49, 55, 57, 58], "test_data": [0, 1, 10, 34, 45, 57, 58, 65, 67, 78], "initi": [0, 1, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80], "set": [0, 1, 2, 9, 12, 15, 16, 20, 24, 28, 31, 33, 34, 36, 39, 40, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "paramet": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 39, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80], "too": [0, 1, 4, 41, 46, 49, 51, 52, 54, 55, 57, 58, 74, 77], "larg": [0, 1, 4, 14, 15, 16, 17, 45, 46, 47, 49, 51, 52, 54, 55, 57, 58], "subset": [0, 1, 2, 14, 15, 16, 17, 30, 34, 41, 42, 46, 47, 49, 51, 52, 54, 55, 57, 58], "sampler": [0, 1, 14, 15, 16, 17, 46, 47, 49, 51, 52, 54, 55, 57, 58], "subsampl": [0, 1, 14, 15, 16, 17, 30, 46, 47, 49, 51, 52, 54, 55, 57, 58], "postprocess": [0, 1, 4, 6, 10, 14, 18, 21, 22, 36, 44, 57, 58, 59, 62], "form": [0, 1, 4, 6, 10, 14, 18, 21, 36, 44, 57, 58, 59, 62], "each": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 36, 44, 45, 57, 58, 59, 62, 70, 71, 72, 75], "should": [0, 1, 2, 7, 10, 15, 16, 17, 20, 22, 33, 39, 40, 41, 48, 57, 58, 60, 61, 78], "classif": [0, 1, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 21, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 63, 64, 65, 66, 67, 78, 80], "regress": [0, 1, 4, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 30, 32, 36, 39, 40, 41, 44, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 62, 72, 73, 75, 76, 78], "consum": [0, 1, 36, 44, 57, 58, 62, 63, 64, 65, 66, 67, 72, 73, 75, 76, 80], "simpli": [0, 1, 36, 44, 46, 48, 49, 51, 52, 55, 57, 58, 62, 63, 64, 65, 66, 67, 80], "some": [0, 1, 4, 30, 34, 39, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 55, 57, 58], "custom": [0, 1, 24], "format": [0, 1, 2, 4, 8, 24, 25, 26, 27, 28, 29, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 62, 65, 67, 78], "lambda": [0, 1, 4, 36, 41, 42, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 57, 58, 62, 63, 64, 65, 66, 67, 69, 73, 74, 76, 77, 78, 80], "z": [0, 1, 4, 13, 30, 35, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58, 74, 77], "some_transform": [0, 1, 57, 58], "to_pd": [0, 1, 2, 34, 46, 48, 49, 51, 52, 53, 55, 57, 58], "param": [0, 1, 4, 5, 6, 14, 18, 21, 25, 31, 33, 44, 45, 57, 58, 59, 62], "ignored_featur": [0, 1, 4, 12, 13, 14, 15, 16, 45, 51, 53, 57], "while": [0, 1, 45, 57, 58], "partial": [0, 1, 15, 22, 27, 47, 52, 57, 58], "return": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 38, 39, 40, 44, 47, 53, 56, 57, 58, 59, 60, 61, 65, 67, 68, 72, 74, 75, 77, 78, 79], "three": [0, 1, 7, 15, 30, 34, 45, 57, 62], "explain_glob": [0, 1, 4, 14, 33, 45, 57, 58], "hide": [0, 1, 57, 58], "all": [0, 1, 2, 4, 5, 7, 8, 9, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 41, 44, 45, 47, 53, 57, 58, 59, 62], "detail": [0, 1, 4, 24, 41, 48, 57, 58, 63, 64, 65, 66, 67, 78], "behind": [0, 1, 57, 58], "so": [0, 1, 13, 41, 45, 47, 57, 58], "two": [0, 1, 2, 4, 13, 33, 34, 35, 39, 40, 41, 44, 45, 47, 57, 58, 64, 65, 66, 67, 78, 80], "test_inst": [0, 1, 45, 49, 51, 55, 57, 58, 59], "local_explan": [0, 1, 4, 6, 14, 18, 21, 31, 36, 44, 45, 57, 58, 59, 62], "global_explan": [0, 1, 4, 14, 31, 33, 45, 57, 58], "similarli": [0, 1, 53, 57, 58], "comput": [0, 1, 5, 10, 15, 17, 20, 24, 27, 35, 41, 45, 57, 58, 74, 77], "perform": [0, 1, 12, 34, 37, 39, 40, 43, 44, 45, 57, 58, 65, 67, 68, 78], "test_target": [0, 1, 10, 45, 57, 58], "integ": [0, 1, 2, 10, 30, 33, 57], "labelencod": [0, 1, 10, 14, 17, 30, 35, 57], "match": [0, 1, 10, 30, 57], "prediction_explan": [0, 1, 10, 31, 45, 57, 58], "launch": [0, 1, 33, 36, 44, 45, 57, 58, 59, 62], "dash": [0, 1, 25, 26, 27, 28, 29, 31, 33, 36, 44, 45, 57, 58, 59, 62], "app": [0, 1, 33, 36, 44, 45, 57, 58, 59, 62], "open": [0, 1, 2, 16, 23, 30, 34, 35, 41, 47, 53, 62, 63, 64, 65, 68, 69, 72, 73, 74, 75, 76, 77, 79], "browser": [0, 1], "see": [0, 1, 41, 45, 53, 78], "thank": [0, 1, 41], "your": [0, 1, 41, 74, 77, 80], "interest": [0, 1, 41], "befor": [0, 1, 41], "run": [0, 1, 12, 33, 36, 41, 44, 45, 57, 58, 59, 62], "commit": [0, 1], "ensur": [0, 1], "file": [0, 1, 25, 30, 53], "ar": [0, 1, 2, 4, 5, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 22, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 64, 66, 69, 78, 79, 80], "correctli": [0, 1], "contain": [0, 1, 2, 4, 5, 6, 10, 13, 14, 16, 18, 21, 25, 27, 31, 34, 35, 41, 50, 57, 58, 59, 60, 61, 64, 65, 66, 67, 78, 80], "appropri": [0, 1, 68], "licens": [0, 1], "header": [0, 1], "whenev": [0, 1], "add": [0, 1, 26, 27, 28, 29, 30, 41, 47, 64, 66, 80], "step": [0, 1, 9, 15, 17, 20, 24, 30, 39, 45, 47, 62, 63, 64, 65, 66, 67, 70, 71, 78, 80], "below": [0, 1, 41], "choos": [0, 1, 4, 5, 6, 14, 18, 21, 33, 45, 68, 69, 70, 71], "script": [0, 1, 53], "folder": [0, 1, 4, 7, 15, 16, 17, 22], "put": [0, 1], "under": [0, 1, 30], "inherit": [0, 1, 4, 30], "explainerbas": [0, 1, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24], "constructor": [0, 1, 4], "__init__": [0, 1, 4, 39, 40, 44, 65, 67, 74, 77, 78], "self": [0, 1, 2, 4, 30, 39, 40, 44, 45, 49, 51, 55, 57, 65, 67, 74, 78], "predict_funct": [0, 1, 4, 7, 8, 10, 12, 13, 14, 15, 16, 19, 20, 22, 37, 38, 41, 42, 46, 47, 48, 49, 51, 52, 53, 54, 55, 60, 61, 78, 79], "kwarg": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 39, 40, 44], "preprocess_funct": [0, 1, 4, 6, 9, 10, 14, 17, 18, 21, 22, 23, 24, 39, 40, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80], "postprocess_funct": [0, 1, 4, 6, 21], "requir": [0, 1, 4, 6, 21, 59], "whether": [0, 1, 2, 4, 15, 20, 24, 27, 41, 45, 59, 60, 61], "differenti": [0, 1, 4], "resiz": [0, 1, 4, 30, 35, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 79], "224": [0, 1, 4, 24, 34, 35, 62, 63, 68, 69, 70, 71, 72, 73, 75, 76, 79], "normal": [0, 1, 4, 12, 14, 17, 24, 35, 41, 46, 48, 49, 51, 52, 55, 57, 58, 62, 63, 64, 66, 69, 73, 76, 79, 80], "pixel": [0, 1, 4, 22, 24, 26, 30, 35, 64, 66, 80], "logit": [0, 1, 4, 17, 39, 44, 48, 51, 62, 78, 79], "explanation_typ": [0, 1, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24], "string": [0, 1, 2, 4, 25, 34, 36], "both": [0, 1, 2, 4, 13, 17, 27, 29, 34, 50, 56], "alia": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "where": [0, 1, 13, 24, 25, 27, 28, 29, 34, 41, 51, 70, 71], "py": [0, 1, 53, 74, 77, 80], "regist": [0, 1, 4], "automat": [0, 1, 2, 4, 15, 16, 17], "via": [0, 1, 2, 3, 5, 7, 15, 22, 24, 62, 63, 65, 67, 72, 73, 75, 76], "defin": [0, 1, 5, 15, 24, 34, 35, 47, 53, 62, 63, 65, 67, 73, 74, 76, 77, 78], "toolbox": 0, "modul": [0, 11, 34, 39, 40, 44, 52, 58, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 80], "fill": [0, 1, 35], "pipelin": [0, 1, 7, 24, 36, 37, 38, 43, 53], "categori": [0, 1, 30, 41, 42], "deploy": [0, 33, 36, 44, 45, 57, 58, 59, 62], "bentoml": [0, 1], "basic": [0, 16, 20, 47], "object": [0, 2, 4, 13, 14, 16, 17, 20, 24, 25, 30, 31, 32, 35, 36, 39, 40, 41, 42, 44, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80], "hous": [0, 32], "price": [0, 32], "sentiment": [0, 1, 32, 37, 39, 40, 44], "imdb": [0, 1, 32], "anomali": [0, 1, 19, 20, 32], "detect": [0, 1, 19, 20, 32], "workflow": [0, 32], "accumul": [0, 15, 32], "effect": [0, 15, 32], "diabet": [0, 32], "logist": [0, 17, 32], "pariti": [0, 32, 53], "rank": [0, 1, 4, 27, 32], "expan": [0, 32], "demo": [0, 32], "morri": [0, 15, 27, 32], "imagenet": [0, 1, 32, 62, 72, 73, 75, 76, 79], "mnist": [0, 22, 32, 34], "languag": [0, 1, 32, 41], "question": [0, 8, 32, 41], "answer": [0, 8, 32, 41], "index": [0, 1, 2, 13, 17, 24, 25, 26, 27, 28, 29, 31, 34, 38, 42, 45, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80], "search": [0, 22], "page": 0, "capabl": 1, "featur": [1, 2, 4, 5, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 72, 73, 75, 76, 80], "five": [1, 7], "kei": [1, 27, 53], "subpackag": [1, 4], "simpl": [1, 12, 15, 39, 40, 44, 53, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 78, 80], "pillow": [1, 2, 34, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80], "One": [1, 30, 35, 36, 41, 44, 48, 50, 62, 78], "ordin": [1, 14, 17, 30, 35], "kbin": [1, 30], "standard": [1, 14, 17, 24, 30, 35, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58], "min": [1, 16, 30, 35, 39, 40, 44], "max": [1, 16, 30, 35, 39, 40, 44, 65, 67, 78], "rescal": [1, 23, 24, 30], "nan": [1, 30, 35], "recal": 1, "idf": [1, 30, 35, 41, 42], "token": [1, 2, 7, 9, 28, 34, 35, 38, 39, 40, 44, 74, 77], "id": [1, 7, 9, 25, 30, 35, 39, 40, 44], "combin": [1, 13, 70, 71], "togeth": [1, 30, 41], "conveni": [1, 30], "particular": [1, 22, 41, 62], "main": [1, 30], "group": [1, 41, 53], "It": [1, 2, 4, 5, 6, 7, 13, 15, 16, 17, 21, 23, 24, 26, 27, 28, 29, 30, 47, 62, 80], "vision_languag": [1, 74, 77], "ig": [1, 4, 6, 14, 21, 39, 40, 44, 62, 77], "gradcam": [1, 4, 21, 62, 72, 73, 74], "validityrankingexplain": [1, 12, 53], "permutationrankingexplain": [1, 12], "further": [1, 45], "handl": [1, 17], "without": [1, 2, 16, 23, 24, 41, 47, 63, 64, 65], "know": [1, 41], "either": [1, 2, 13, 16, 17, 36, 44, 51], "feature_import": [1, 25], "store": [1, 2, 4, 26, 27, 28, 29, 30, 34, 62], "matplotlib": [1, 25, 26, 27, 28, 29, 64, 65, 66, 67, 80], "plotly_plot": [1, 25, 26, 27, 28, 29], "ipython_plot": [1, 25, 26, 27, 28, 29, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "ipython": [1, 25, 26, 27, 28, 29, 33, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "word": [1, 7, 9, 28, 30, 36, 39, 40, 41, 44], "plotli": [1, 25, 26, 27, 28, 29, 31, 33, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "figur": [1, 25, 26, 27, 28, 29, 31], "demonstr": [1, 68, 69, 70, 71], "architectur": 1, "four": [1, 33], "autoexplainerbas": [1, 4, 5, 6, 14, 18, 21, 33], "act": [1, 4, 36, 44, 57, 58, 59, 62], "factori": [1, 4, 36, 44, 57, 58, 59, 62], "": [1, 2, 4, 7, 15, 22, 25, 35, 36, 41, 45, 48, 53, 59, 60, 61, 62, 68, 69, 71, 72, 75, 78, 79], "next": [1, 41, 45], "resnet": [1, 4, 62, 63, 68, 70, 71, 73, 76], "arxiv": [1, 7, 15, 16, 22, 23, 24, 41, 47, 48, 53, 63, 64, 65, 66, 67, 72, 73, 78], "org": [1, 7, 12, 15, 16, 22, 23, 24, 41, 47, 48, 52, 53, 58, 63, 64, 65, 66, 67, 72, 73, 74, 77, 78], "ab": [1, 7, 15, 16, 22, 23, 24, 41, 47, 48, 53, 63, 64, 65, 66, 67, 72, 73, 78], "1512": 1, "03385": 1, "pretrain": [1, 4, 38, 62, 63, 69, 71, 73, 74, 76, 77, 79], "www": [1, 74, 77], "net": [1, 24, 41], "here": [1, 8, 15, 24, 34, 36, 41, 47, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 73, 76, 79], "sampl": [1, 2, 7, 14, 15, 17, 20, 22, 24, 27, 30, 39, 40, 44, 53], "2": [1, 24, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "resnet50": [1, 4, 62, 63, 69, 73], "target_lay": [1, 4, 21, 24, 62, 68, 69, 70, 71, 72, 73, 74, 77], "layer4": [1, 4, 21, 62, 73], "test_img": [1, 64, 66, 78, 80], "y": [1, 7, 9, 13, 15, 16, 17, 22, 24, 30, 35, 38, 40, 44, 47, 65, 67, 72, 75, 78], "281": [1, 72, 75], "correspond": [1, 7, 8, 10, 12, 13, 14, 15, 16, 19, 20, 22, 24, 26, 27, 28, 29, 31, 41, 42, 46, 47, 48, 49, 51, 52, 53, 54, 55, 60, 61, 62, 63, 78, 79], "tiger_cat": [1, 72, 75], "top": [1, 7, 9, 15, 17, 22, 24, 27, 72, 73, 75, 76, 79], "bull_mastiff": [1, 72, 75], "These": [1, 34, 50, 53, 56], "highlight": 1, "region": 1, "note": [1, 23, 24, 30, 39, 40, 41, 44, 45], "besid": [1, 4, 34], "same": [1, 4, 5, 6, 14, 18, 21, 24, 33, 39, 41, 45, 48, 78], "gradcam0": 1, "gradcam3": 1, "first": [1, 2, 9, 26, 27, 28, 29, 33, 34, 39, 40, 41, 44, 45, 48, 49, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 78, 80], "second": [1, 2, 34, 51, 70, 71], "consid": [1, 5, 12, 13, 36, 45, 47, 53, 62, 63, 70, 71, 73, 76], "goal": [1, 53], "review": [1, 39, 40, 44], "posit": [1, 24, 26, 30, 36, 37, 39, 40, 41, 43, 44, 45, 47, 66, 67], "neg": [1, 5, 12, 17, 24, 26, 36, 37, 39, 40, 43, 44, 45, 47, 66, 67], "cnn": [1, 39, 40, 41, 44, 65, 67, 68, 69, 70, 71, 78], "suppos": [1, 13, 34, 35, 41], "want": [1, 33, 34, 41, 46, 48, 49, 51, 52, 55, 57, 58], "do": [1, 33, 35, 36, 38, 41, 44, 45, 46, 48, 49, 51, 52, 55, 57, 58, 59, 62], "polyjuic": [1, 6, 36, 37, 38, 44], "embed": [1, 9, 15, 39, 40, 44, 53, 77], "embedding_lay": [1, 9, 39, 40, 44, 77], "id2token": [1, 9, 39, 40, 44], "id_to_token": 1, "wa": [1, 34, 36, 37, 39, 40, 41, 43, 44], "fantast": [1, 34, 37, 39, 40, 43, 44], "clearli": [1, 45], "largest": 1, "impli": [1, 19, 20, 45, 60, 61], "sentenc": [1, 2, 30, 34, 35, 39, 40, 41, 42, 44, 74, 77], "becaus": [1, 2, 10, 30, 33, 36, 41, 44, 45], "horribl": [1, 34, 37, 39, 40, 43, 44], "help": 1, "u": [1, 41, 57, 58], "understand": [1, 41], "behavior": [1, 45, 69, 78], "univari": [1, 2, 59, 60, 61], "statist": 1, "detector": [1, 59, 60, 61], "window": [1, 59, 60, 61], "accord": [1, 35, 41], "threshold": [1, 20, 59, 60, 61], "estim": [1, 4, 5, 7, 14, 15, 16, 17, 22, 24, 30, 41, 46, 48, 49, 51, 52, 55, 78], "have": [1, 2, 13, 23, 24, 30, 34, 35, 37, 39, 40, 41, 43, 45, 56], "train_df": [1, 59, 60, 61], "test_df": [1, 59, 60, 61], "anomaly_detect": [1, 18, 19, 20, 29, 59, 60, 61], "from_pd": [1, 2, 34, 59, 60, 61], "none": [1, 2, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 41, 47, 48, 59, 69, 78], "001": [1, 7, 15, 20, 22, 59, 60], "timestamp": [1, 2, 34, 59, 60, 61], "20": [1, 7, 22, 26, 27, 34, 41, 45, 49, 51, 53, 55, 57, 59, 60, 61, 65, 67, 71, 78], "00": [1, 36, 43, 59, 60, 61, 62], "around": [1, 41, 59], "reason": 1, "why": [1, 41], "indic": [1, 2, 4, 24, 27, 33, 34, 48, 49, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 78, 80], "explanationbas": [1, 25, 26, 27, 28, 29], "avail": [1, 24], "cannot": [1, 25, 26, 27, 29], "fulfil": 1, "data_typ": [1, 2], "num_sampl": [1, 2, 24, 79], "iloc": [1, 2, 59, 60, 61], "shape": [1, 2, 24, 34, 35, 40, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 78, 80], "continuous_column": [1, 2, 34], "feature_column": [1, 2, 4, 33, 34, 46, 47, 48, 49, 50, 51, 52, 55, 56], "to_numpi": [1, 2, 34, 47, 62, 64, 66, 80], "copi": [1, 2, 53], "remove_target_column": [1, 2, 51], "get_target_column": [1, 2], "get_continuous_median": [1, 2], "get_continuous_bound": [1, 2], "image_shap": [1, 2, 24, 34, 70, 71], "to_pil": [1, 2, 4, 34, 35, 62, 63, 65, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79], "to_token": [1, 2, 34], "to_str": [1, 2], "ts_len": [1, 2, 20, 34], "get_timestamp_info": [1, 2], "reset_timestamp_index": [1, 2], "restore_timestamp_index": [1, 2], "transformbas": [1, 14, 17, 30], "ident": [1, 14, 17, 30, 54, 58], "onehot": [1, 14, 17, 30, 35], "get_feature_nam": [1, 30, 35], "minmax": [1, 14, 17, 30, 35, 46, 48, 49, 51, 52, 55, 57, 58], "scale": [1, 14, 15, 17, 30, 35], "fillnan": [1, 30], "fillnantabular": [1, 30, 35], "dump": [1, 4, 7, 15, 16, 17, 22, 25, 30, 33], "decompos": [1, 30], "round2int": [1, 30], "tfidf": [1, 30, 35, 39, 40, 41, 42, 44], "word2id": [1, 30, 35, 39, 40, 44], "pad": [1, 30, 39, 40, 44], "unk": [1, 30, 35], "vocab_s": [1, 30, 39, 40, 44], "undersampl": [1, 30], "oversampl": [1, 30], "explainerabcmeta": [1, 4], "save": [1, 4, 7, 15, 16, 17, 22, 30, 53], "explainer_nam": [1, 4], "list_explain": [1, 4, 5, 6, 14, 18, 21], "parse_explanations_from_json": [1, 4], "imbalanceanalyz": [1, 4, 5], "correlationanalyz": [1, 4, 5], "mutualinform": [1, 4, 5], "chisquar": [1, 4, 5], "auto": [1, 4, 24], "mutual_info": [1, 4], "chi_squar": [1, 4], "valid": [1, 11, 25, 50, 53, 56], "pixel_import": [1, 25], "mask": [1, 7, 12, 25, 39, 40, 44], "word_import": [1, 25], "get_explan": [1, 25, 26, 27, 28, 29, 53], "to_json": [1, 25, 27, 29], "from_json": [1, 25], "from_dict": [1, 25, 26, 27, 28, 29], "dashfigur": [1, 25], "to_html_div": [1, 25], "to_html": [1, 25], "predictedresult": [1, 4, 25], "batch": [2, 7, 8, 9, 15, 16, 17, 19, 20, 22, 23, 24, 27, 34, 35, 36, 39, 40, 41, 42, 44, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80], "batch_siz": [2, 7, 15, 20, 22, 34, 39, 40, 44, 47, 62, 64, 65, 66, 67, 78, 80], "height": [2, 34, 62], "width": [2, 34, 53, 62], "channel": [2, 24, 30, 34, 62, 70, 71], "true": [2, 4, 5, 15, 16, 20, 24, 26, 27, 28, 30, 34, 36, 37, 39, 40, 41, 43, 44, 47, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75, 76, 78, 79, 80], "channel_last": 2, "dimens": [2, 20, 24], "fals": [2, 5, 12, 15, 24, 26, 27, 28, 34, 39, 40, 44, 53, 65, 67, 78, 80], "instead": [2, 33, 36, 41, 44, 45, 53, 57, 58, 59, 60, 61, 62, 69, 71, 80], "number": [2, 5, 7, 8, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 45, 53], "4": [2, 25, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "pil": [2, 30, 34, 35, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 79], "pilimag": [2, 30, 34, 35, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 79], "im": [2, 4, 34, 62, 63, 65, 67, 68, 69, 72, 73, 75, 76, 78], "an_imag": 2, "jpg": [2, 30, 34, 35, 62, 63, 73, 74, 77], "hello": [2, 30, 35, 41], "m": [2, 30, 35, 53], "And": [2, 30, 35, 53], "anoth": [2, 27, 30, 35, 41, 71, 72, 75], "veri": [2, 30, 35, 41], "allow": [2, 4, 5, 6, 14, 18, 21, 24, 41, 57, 58, 62, 70, 71], "nltk": 2, "word_token": 2, "variabl": [2, 29, 34, 59, 60, 61], "num_vari": [2, 34], "construct": [2, 4, 13, 17, 22, 33, 34, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80], "2017": [2, 24, 34, 70, 71], "12": [2, 34, 35, 36, 41, 45, 49, 51, 53, 55, 57, 74, 77], "27": [2, 34, 41, 45, 49, 51, 53, 55, 57], "1263": [2, 34], "94091": [2, 34], "394": [2, 34], "507": [2, 34], "16": [2, 34, 47, 58, 59, 60, 61], "530": [2, 34], "28": [2, 34, 45, 49, 51, 55, 57, 64, 66, 80], "1299": [2, 34], "86398": [2, 34], "506": [2, 34], "424": [2, 34], "14": [2, 34, 35, 68], "162": [2, 34], "date": [2, 34, 69], "consumpt": [2, 34], "wind": [2, 34], "solar": [2, 34], "set_index": [2, 34, 53, 59, 60, 61], "to_datetim": [2, 34, 59, 60, 61], "t": [2, 6, 20, 21, 34, 39, 40, 41, 44, 45, 51, 59, 60, 61, 74, 77], "abstract": [2, 4, 25, 30], "differet": 2, "properti": [2, 4, 30], "union": [2, 13, 15, 16, 24, 27, 28, 29, 30], "ndarrai": [2, 14, 15, 16, 17, 20, 24, 30], "num_featur": [2, 15, 27], "when": [2, 4, 7, 8, 9, 14, 15, 16, 17, 19, 22, 24, 25, 26, 27, 28, 29, 34, 41, 45, 58, 78], "int": [2, 5, 7, 8, 12, 13, 15, 16, 22, 24, 30, 39, 40, 44, 59, 60, 61], "row": [2, 34, 45, 49, 51, 53, 55, 57, 58, 59, 60, 61], "slice": [2, 53], "tupl": [2, 24, 30, 44, 72, 75, 79], "get": [2, 4, 25, 26, 27, 28, 29, 30, 34, 39, 40, 44, 53, 69], "except": 2, "sequenc": [2, 5, 30, 53], "otherwis": [2, 4], "remov": [2, 24, 35, 45, 53, 54, 69, 71, 80], "absolut": [2, 15, 41], "median": [2, 12, 16, 30, 35, 47], "dict": [2, 4, 5, 6, 9, 10, 14, 18, 21, 24, 25, 26, 27, 28, 29, 31, 38, 57, 58], "upper": [2, 16, 20], "lower": [2, 16, 20], "bound": [2, 16, 20], "grayscal": 2, "rgb": [2, 34, 35, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 79], "h": [2, 24, 30, 45, 49, 51, 55, 57], "w": [2, 24, 30, 74, 77], "ignor": [2, 4, 9, 10, 12, 13, 15, 16, 17, 22, 24, 26, 27, 28, 45, 51], "bool": [2, 7, 12, 15, 22, 24], "size": [2, 7, 15, 22, 24, 27, 30, 35, 74, 77], "color": [2, 24, 34], "argument": [2, 41, 69, 80], "hwc": [2, 34], "keepdim": [2, 34], "kept": [2, 41], "squeez": [2, 40, 44, 53], "callabl": [2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 47], "sep": [2, 8, 38, 39, 40, 44, 77], "maxsplit": 2, "variable_nam": 2, "multivari": [2, 59, 60, 61], "whose": [2, 9, 16, 17, 22, 24, 27, 35, 39, 40], "length": [2, 20, 34, 36, 37, 38, 44], "classmethod": [2, 4, 25, 26, 27, 28, 29], "rtype": 2, "static": [2, 4, 5, 6, 14, 15, 17, 18, 21, 27, 30], "timestamp_info": 2, "move": 2, "float": [2, 7, 12, 14, 15, 17, 20, 22, 24, 30, 39, 53, 65, 67, 78], "origin": [2, 7, 9, 15, 17, 19, 22, 23, 24, 27, 29, 30, 39, 40, 41, 42, 43, 48, 49, 55, 61, 66, 67, 75, 76, 78, 79, 80], "deploi": 3, "kernel_width": [4, 14, 15, 45, 57, 58], "nsampl": [4, 14, 15, 19, 22, 45, 55, 57, 58, 59], "100": [4, 12, 14, 15, 23, 39, 40, 41, 44, 45, 48, 55, 57, 58, 62, 63, 65, 67, 70, 71, 78], "similar": [4, 30, 36, 44, 47, 56, 62], "img": [4, 21, 30, 34, 35, 62, 63, 68, 69, 72, 73, 75, 76, 79], "mainli": 4, "gbtree": [4, 45, 46, 48, 49, 51, 52, 55, 57], "predict_proba": [4, 14, 41, 42, 46, 48, 49, 51, 52, 55], "shaptabular": [4, 15, 55, 80], "training_data": [4, 5, 7, 12, 13, 14, 15, 16, 17, 19, 20, 22, 41, 46, 47, 48, 49, 51, 52, 53, 54, 55, 60, 61, 78], "compos": [4, 62, 63, 65, 67, 69, 73, 76, 78, 79], "256": [4, 7, 15, 22, 39, 40, 44, 47, 53, 62, 63, 69, 73, 76, 79], "centercrop": [4, 62, 63, 69, 73, 76, 79], "totensor": [4, 62, 63, 65, 67, 69, 73, 76, 78, 79], "mean": [4, 15, 17, 26, 27, 28, 30, 31, 34, 35, 40, 41, 44, 48, 49, 51, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 73, 76, 78, 79, 80], "485": [4, 62, 63, 69, 73, 76, 79], "456": [4, 62, 63, 69, 73, 76, 79], "406": [4, 62, 63, 69, 73, 76, 79], "std": [4, 30, 40, 44, 62, 63, 69, 73, 76, 79], "229": [4, 62, 63, 69, 73, 76, 79], "225": [4, 62, 63, 69, 73, 76, 79], "stack": [4, 62, 63, 65, 67, 69, 73, 74, 76, 77, 78, 79], "found": [4, 20, 24, 74, 77], "classnam": 4, "cls_dict": 4, "autodocabcmeta": 4, "meta": 4, "_explain": 4, "filenam": [4, 7, 15, 16, 17, 22], "collect": [4, 5, 6, 14, 18, 21], "empti": [4, 6, 21, 24], "ani": [4, 6, 10, 14, 17, 18, 21, 41], "param_1": [4, 5, 6, 14, 18, 21], "run_predict": 4, "lime_explan": 4, "shap_explan": 4, "ordereddict": [4, 5], "pdp_explan": [4, 5], "model_and_data": 4, "how": [4, 34, 41, 45, 53], "individu": [4, 41], "autoexplain": 4, "hoc": 4, "better": [4, 41], "proper": 4, "mutual": [5, 33, 41, 45], "n_bin": [5, 30], "10": [5, 7, 12, 15, 16, 20, 22, 23, 24, 26, 27, 34, 35, 39, 40, 44, 45, 53, 54, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 75, 78, 80], "overrid": 5, "count": [5, 27], "appear": [5, 27], "gender": [5, 47], "male": [5, 34, 35, 45, 47, 49, 51, 55, 57], "femal": [5, 34, 35, 45, 47, 49, 51, 55, 57], "separ": [5, 41, 48, 78], "cross": [5, 27, 33], "bin": [5, 20, 30], "discret": [5, 15, 30], "imbalanceexplan": [5, 27], "matrix": [5, 27], "scipi": 5, "stat": [5, 45], "spearmanr": 5, "correlationexplan": [5, 27], "globalfeatureimport": [5, 12, 15, 27], "chi": [5, 33, 45], "squar": [5, 33, 45], "non": 5, "chi2": [5, 33, 45], "qa": [6, 8, 36, 38], "those": [6, 21, 35, 51], "don": [6, 21, 45, 51], "limetext": [7, 42], "pleas": [7, 8, 9, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "cite": [7, 8, 9, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 54, 55, 61, 63, 64, 65, 66, 67, 72, 73, 75, 76, 78, 79, 80], "work": [7, 8, 9, 15, 17, 19, 22, 24, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 55, 61, 66, 67, 75, 76, 78, 79, 80], "github": [7, 8, 9, 15, 17, 19, 22, 24, 37, 38, 39, 40, 42, 43, 49, 54, 55, 61, 75, 76, 79, 80], "com": [7, 8, 9, 15, 17, 19, 22, 24, 37, 38, 39, 40, 42, 43, 49, 54, 55, 61, 74, 75, 76, 77, 79, 80], "marcotcr": [7, 15, 22, 42, 49, 79], "lime_text": 7, "limetextexplain": 7, "refer": [7, 15, 16, 22, 41, 48, 52, 53, 63, 64, 65, 66, 67, 78], "doc": [7, 15, 22, 33, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "explain_inst": [7, 15, 22], "wordimport": [7, 9, 28], "shaptext": [7, 43], "slundberg": [7, 15, 17, 19, 22, 43, 55, 61, 80], "textclassificationpipelin": [7, 43], "text_classif": 7, "defaultselectionmodel": [7, 15, 22, 41, 48, 78], "_defaultmodelbas": [7, 15, 22], "consist": [7, 45], "1d": 7, "convolut": [7, 24, 62, 64, 65, 66, 67, 72, 73, 78, 80], "l2xtext": [7, 41], "hidden_s": [7, 15, 39, 40, 44], "hidden": [7, 15, 47, 64, 65, 66, 67, 78, 80], "kernel_s": [7, 39, 40, 44, 64, 65, 66, 67, 78, 80], "kernel": 7, "forward": [7, 15, 22, 40, 44, 65, 67, 78], "defaultpredictionmodel": [7, 15, 22, 41, 48, 78], "weight": [7, 12, 15, 16, 20, 22, 23, 24, 40, 41, 44, 47, 69, 70, 71, 72, 75], "gumbel": [7, 15, 22], "softmax": [7, 15, 22, 44, 62, 79], "tau": [7, 15, 22, 53], "k": [7, 12, 15, 22, 39, 40, 44, 53, 62, 63, 72, 73, 75, 76, 79], "selection_model": [7, 15, 22, 41, 48, 78], "prediction_model": [7, 15, 22, 41, 48, 78], "loss_funct": [7, 15, 22, 74, 77], "optim": [7, 15, 16, 20, 22, 23, 24, 39, 40, 44, 47, 53, 60, 63, 64, 65, 66, 67, 68, 70, 71, 78, 80], "learning_r": [7, 15, 16, 20, 22, 23, 24, 39, 40, 44, 47, 65, 67, 78], "num_epoch": [7, 15, 22, 39, 40, 44, 53, 65, 67, 78], "theoret": [7, 15, 22, 41, 48, 78], "perspect": [7, 15, 22, 41, 48, 78], "jianbo": [7, 15, 22, 41, 48, 78], "chen": [7, 15, 22, 41, 48, 78], "le": [7, 15, 22, 41, 48, 78], "song": [7, 15, 22, 41, 48, 78], "martin": [7, 15, 22, 41, 48, 78], "j": [7, 15, 22, 41, 48, 53, 78], "wainwright": [7, 15, 22, 41, 48, 78], "michael": [7, 15, 22, 41, 48, 78], "jordan": [7, 15, 22, 41, 48, 78], "1802": [7, 15, 22, 24, 41, 48, 66, 67, 78], "07814": [7, 15, 22, 41, 48, 78], "maximum": [7, 8, 12, 13, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 38, 44, 53], "p": [7, 15, 22, 41, 48, 78, 79], "q": [7, 15, 22, 41, 48, 53, 78], "x_": [7, 15, 22, 41, 48, 78], "nn": [7, 9, 15, 16, 17, 22, 23, 24, 39, 40, 44, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80], "crossentropyloss": [7, 15, 22, 40, 44, 65, 67, 78], "adamw": [7, 40, 44], "rate": [7, 15, 16, 20, 22, 23, 24, 53], "pick": [7, 15, 22], "32": [7, 15, 22, 40, 44, 58, 64, 66, 78, 80], "64": [7, 15, 22, 47, 53, 64, 66, 80], "128": [7, 15, 22, 39, 40, 44, 47, 64, 65, 66, 67, 80], "epoch": [7, 15, 22, 39, 47, 64, 65, 66, 67, 78, 80], "develop": [8, 13, 16, 20, 33, 36, 37, 38, 44, 45, 51, 57, 58, 59, 62], "wu": [8, 37, 38], "et": [8, 13, 16, 20, 24, 37, 38, 51, 72, 73], "tongshuangwu": [8, 37, 38], "pr": 8, "model_path": 8, "cuda": [8, 40, 44, 62, 65, 67, 71, 74, 76, 77, 78, 79], "max_number_exampl": [8, 13, 16], "context": [8, 38, 53], "concaten": [8, 30, 40, 44, 54, 58, 62, 68, 72, 75], "seper": [8, 38], "ce_typ": 8, "perturb": 8, "blank": 8, "cfexplan": [8, 13, 16, 20, 23, 26, 27, 29], "integratedgradienttext": [9, 39, 40], "ankurtali": [9, 17, 24, 39, 40, 75, 76], "kera": [9, 16, 17, 22, 23, 24, 39, 40, 47, 53, 63, 64, 65, 66, 67, 68, 70, 72, 73, 75, 76, 80], "must": [9, 12, 39, 40, 44, 45], "huggingfac": 9, "integrated_gradi": [9, 17, 24], "integratedgradi": [9, 17, 21, 24, 77], "compute_integrated_gradi": [9, 17, 24], "curv": 10, "permut": [11, 14, 40, 44], "paper": [12, 13, 16, 20, 23, 24, 47, 51, 63, 64, 65], "extract": [12, 16, 26, 27, 30, 47], "queri": [12, 13, 27, 29, 53], "blackbox": 12, "dl": 12, "acm": 12, "doi": 12, "1145": 12, "3471158": 12, "3472241": 12, "n_item": 12, "epsilon": 12, "query_id": [12, 53], "verbos": [12, 16, 20, 24, 40, 44, 47, 64, 66, 80], "item": [12, 13, 26, 27, 28, 29, 45, 57, 58, 62, 65, 67, 78], "account": [12, 41], "flag": [12, 27, 68], "calcul": [12, 24], "propens": 12, "greedi": [12, 13], "cover": 12, "procedur": 12, "replac": [12, 22, 47], "present": [12, 41], "print": [12, 24, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 75, 78, 79, 80], "statement": [12, 41], "validityrankingexplan": [12, 27], "random_st": [12, 30, 47], "quotient": 12, "n_iter": 12, "iter": [12, 16, 20, 23, 24], "higher": [12, 19, 20, 45, 59, 60, 61], "stabl": [12, 15, 52, 53, 58], "maceexplain": [13, 16, 20, 51, 60], "gld": [13, 16], "yang": [13, 16, 20, 51], "effici": [13, 16, 20, 51], "framework": [13, 16, 20, 38, 51], "version": [13, 20, 36, 41, 44, 74, 77], "rl": [13, 20], "item_a_index": 13, "item_b_index": 13, "b": [13, 24, 30, 34, 35], "baselin": [13, 17, 24], "high": [13, 24, 41], "than": [13, 33, 38, 41, 69], "tabularexplainermixin": [14, 15, 16], "sklearnbas": [14, 17], "cate_encod": [14, 17], "cont_encod": [14, 17], "target_encod": [14, 17], "baseestim": 14, "proport": [14, 17], "shap_glob": 14, "ce": [14, 18, 21, 62], "decision_tre": [14, 56], "shap_tre": 14, "limetabular": [15, 49], "lime_tabular": 15, "limetabularexplain": 15, "featureimport": [15, 17, 19, 27, 29], "kernelexplain": [15, 19], "shap_valu": [15, 19], "re": [15, 19, 30, 41, 42], "evalu": [15, 19, 39, 40, 44, 47, 64, 65, 66, 67, 78, 80], "partialdependencetabular": [15, 52], "partial_depend": [15, 22, 52], "html": [15, 52, 53, 58], "grid_resolut": [15, 22], "candid": 15, "dure": [15, 16, 20, 23, 24], "monte_carlo": 15, "monte_carlo_step": 15, "monte_carlo_frac": 15, "studi": [15, 27], "mont": [15, 27], "carlo": [15, 27], "randomli": [15, 24], "pdpexplan": [15, 27], "christophm": 15, "io": [15, 33, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "book": 15, "accumulated_local_effect": 15, "cmd": 15, "mat": [15, 41], "classic": 15, "multidimension": 15, "en": 15, "wikipedia": 15, "wiki": 15, "multidimensional_sc": 15, "classical_multidimensional_sc": 15, "aleexplan": 15, "sensitivityanalysistabular": [15, 54], "salib": [15, 54], "sa": 15, "sensitivityexplan": [15, 27], "feedforward": [15, 47], "neural": [15, 64, 65, 66, 67, 68, 78, 80], "network": [15, 24, 41, 47, 48, 64, 65, 66, 67, 68, 72, 73, 78, 80], "l2xtabular": [15, 48], "adam": [15, 22, 39, 64, 65, 66, 67, 78, 80], "Not": [15, 17, 23, 45, 49, 51, 55, 57], "permutationimport": 15, "decreas": [15, 30, 45], "shuffl": [15, 39, 40, 44, 65, 67, 78], "n_repeat": 15, "30": 15, "score_func": 15, "measur": [15, 22], "ground": 15, "truth": 15, "log_loss": 15, "y_true": 15, "y_pred": 15, "globalshaptabular": 15, "cfretriev": 16, "retriev": 16, "desir": [16, 30, 78], "counterfactualoptim": [16, 20], "x0": [16, 20, 24], "c": [16, 20, 23, 24, 30, 33, 34, 35, 36, 41, 44, 45, 57, 58, 59, 62, 79], "kappa": [16, 20, 23, 24], "binary_search_step": [16, 20, 23, 24, 62, 63, 64, 65, 66, 67], "01": [16, 20, 23, 24, 40, 44, 59, 60, 61], "num_iter": [16, 20, 23, 24, 62, 63, 64, 65, 66, 67, 70, 71], "1000": [16, 20, 23, 24, 54, 59, 72, 75, 79], "grad_clip": [16, 20, 23, 24], "gamma": [16, 20, 24], "autom": [16, 23, 47, 63, 64, 65], "gdpr": [16, 23, 47, 63, 64, 65], "sandra": [16, 23, 47, 63, 64, 65], "wachter": [16, 23, 47, 63, 64, 65], "brent": [16, 23, 47, 63, 64, 65], "mittelstadt": [16, 23, 47, 63, 64, 65], "chri": [16, 23, 47, 63, 64, 65], "russel": [16, 23, 47, 63, 64, 65], "1711": [16, 23, 47, 63, 64, 65], "00399": [16, 23, 47, 63, 64, 65], "hing": [16, 20, 23, 24], "term": [16, 20, 23, 24], "adjust": [16, 20, 23, 24], "clip": [16, 20, 23, 24], "denomin": [16, 20], "regular": [16, 20, 24], "counterfactualexplain": [16, 20, 23, 47, 63, 64, 65, 67], "inp": 17, "output_index": 17, "50": [17, 24, 39, 40, 44, 45, 49, 51, 55, 57, 65, 67, 78], "integratedgradienttabular": 17, "num_random_tri": [17, 24], "trial": [17, 24], "_sample_baselin": 17, "linearbas": 17, "coeffici": [17, 27, 50], "linearexplan": [17, 27], "linearregress": [17, 50], "lasso": 17, "linear_regress": 17, "logisticregress": [17, 50], "logistic_regress": 17, "treebas": 17, "random": [17, 30, 41, 42, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58], "forest": [17, 41, 42, 54, 58], "structur": [17, 27, 36, 41, 48, 56, 64, 66, 78], "path": [17, 27, 33, 41, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61], "treeexplan": [17, 27], "treeregressor": [17, 56], "regressor": [17, 58], "decisiontreeregressor": 17, "tree_regressor": 17, "treeclassifi": [17, 56], "decisiontreeclassifi": 17, "tree_classifi": 17, "shaptreetabular": 17, "forecast": [18, 19, 20, 29, 59, 61], "shaptimeseri": [19, 61], "anomal": [19, 20, 59, 60, 61], "smooth_weight": 20, "grid_siz": 20, "reshap": [20, 54, 58, 64, 66, 80], "determin": [20, 41, 53, 59, 60, 61], "numer": [20, 53], "revis": 20, "cem": 21, "feature_visu": [21, 68, 69, 70, 71], "guided_bp": 21, "smoothgrad": [21, 62], "limeimag": [22, 79], "top_label": 22, "limeimageexplain": 22, "maskexplan": [22, 26], "shapimag": [22, 80], "background_data": [22, 24], "background": [22, 24], "pixelimport": [22, 24, 26], "partialdependenceimag": 22, "segment": 22, "quickshift": 22, "averag": [22, 27, 39, 40, 41, 42, 44, 70, 71], "grid": [22, 27], "resolut": 22, "n_segment": 22, "l2ximag": [22, 78], "upsampl": [22, 78], "been": [23, 24, 41, 74, 77], "255": [23, 24, 35, 64, 66, 80], "integratedgradientimag": [24, 75, 76], "gradmixin": 24, "selvaraju": [24, 72, 73], "1610": [24, 72, 73], "02391": [24, 72, 73], "gradcamplu": 24, "chattopadhyai": 24, "pdf": 24, "1710": 24, "11063": 24, "layercam": [24, 62], "hierarch": 24, "activ": [24, 39, 40, 41, 44, 47, 53, 64, 66, 80], "jiang": 24, "mmcheng": 24, "mftp": 24, "21tip_layercam": 24, "cemoptim": 24, "beta": 24, "ae_model": 24, "07623": [24, 66, 67], "l1": 24, "ae": 24, "pn_optim": 24, "pertin": [24, 26, 66, 67], "pp_optim": 24, "contrastiveexplain": [24, 66, 67], "contrastiveexplan": [24, 26], "featurevisu": [24, 70, 71], "neuron": [24, 70, 71], "visit": [24, 70, 71], "distil": [24, 70, 71], "pub": [24, 70, 71], "direct": [24, 70, 71], "channel_idx": 24, "neuron_idx": 24, "direction_vector": 24, "vector": [24, 30, 35, 41, 42], "fv": 24, "05": [24, 59, 60, 61], "use_fft": [24, 71], "fft_decai": 24, "normal_color": 24, "tupe": 24, "regularizer_typ": 24, "l2": 24, "tv": 24, "fourier": 24, "precondit": [24, 71], "control": [24, 41], "energi": 24, "frequenc": 24, "uncorrel": 24, "progress": 24, "featuremapvisu": [24, 68, 69], "fm": 24, "feature_map": 24, "guidedbp": [24, 62], "propag": 24, "bp": 24, "use_guided_bp": 24, "nois": 24, "smilkov": 24, "1706": 24, "03825": 24, "sigma": [24, 27], "deviat": [24, 30], "compon": [25, 41], "pickl": 25, "unpickl": 25, "byte": 25, "byte_str": 25, "json": [25, 27, 29, 62, 63, 72, 73, 75, 76, 79], "d": [25, 26, 27, 28, 29, 30, 34, 35, 37], "classfic": 25, "max_num_subplot": [25, 27, 28], "subplot": [25, 27, 28], "use_heatmap": 26, "entri": [26, 27, 28], "target_label": [26, 27, 28], "heatmap": 26, "importance_scor": [26, 27, 28, 29], "max_num_figur": 26, "dog": [26, 27, 28, 31, 62, 74, 77], "cat": [26, 27, 28, 31, 40, 41, 44], "boundari": 26, "pn": 26, "pn_label": 26, "pp": 26, "pp_label": 26, "cf": [26, 27, 29], "cf_label": 26, "counterfactualexplan": 26, "feature_valu": 27, "sort": [27, 28, 35], "truncate_long_featur": 27, "truncat": [27, 36, 37, 38, 44], "long": 27, "font_siz": 27, "font": 27, "tabl": 27, "sampled_scor": 27, "mu": 27, "mu_star": 27, "mu_star_conf": 27, "plot_coeffici": 27, "tick": 27, "binari": [27, 39, 40, 41, 42, 44, 47, 62, 63, 64, 65, 66, 67, 68], "add_glob": 27, "whole": [27, 41], "add_loc": 27, "decision_path": 27, "node_ind": 27, "node": 27, "figsiz": 27, "15": [27, 34, 41, 45, 49, 51, 55, 57, 59, 60, 61, 69, 70], "fontsiz": 27, "top_featur": [27, 53], "remain": 27, "document": [27, 53, 78], "rearrange_column": 27, "num_tokens_per_class": 28, "shown": 28, "max_length": [28, 36, 37, 38, 39, 40, 44], "512": [28, 71], "figure_typ": 29, "max_num_variables_to_plot": 29, "25": [29, 53, 58], "bar": 29, "invers": [30, 35, 49, 55], "cate_transform": [30, 35], "cont_transform": [30, 35, 46, 48, 49, 51, 52, 55, 57, 58], "pseudo": 30, "recov": 30, "some_imag": 30, "360": 30, "240": [30, 35, 79], "drop": [30, 45, 47, 54, 59, 60, 61], "input_featur": 30, "zero": [30, 39, 40, 44], "unit": [30, 45, 47, 49, 51, 53, 55, 57, 59, 60, 61], "varianc": 30, "ratio": 30, "miss": 30, "chosen": 30, "itself": 30, "target_transform": [30, 35, 54, 58], "hold": [30, 41], "expect": 30, "ith": 30, "00392156862745098": 30, "round": 30, "resampl": 30, "smaller": 30, "edg": 30, "strategi": 30, "remove_punctu": 30, "start": [30, 41, 53], "sub": 30, "over": 30, "fraction": 30, "guarante": 30, "seed": [30, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57], "balanc": 30, "minor": 30, "major": 30, "increas": [30, 41, 45], "data_explan": [31, 45], "predic": 31, "host": [31, 42], "127": [31, 33, 36, 44, 45, 57, 58, 59, 62], "port": 31, "8050": [31, 33, 36, 44, 45, 57, 58, 59, 62], "omnixai": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "render": [33, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "sphinx": [33, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "delet": [33, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "cell": [33, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "pio": [33, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "png": [33, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "o": [33, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 68, 69, 74, 77], "join": [33, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61], "now": [33, 39, 40, 41, 44, 45, 53, 57, 58, 62, 65, 67, 78], "onc": [33, 41], "n": [33, 34, 39, 40, 44, 53], "append": [33, 37, 40, 44, 68, 72, 75], "serv": [33, 36, 44, 45, 57, 58, 59, 62], "flask": [33, 36, 44, 45, 57, 58, 59, 62], "34": [33, 34, 35, 36, 44, 45, 57, 58, 59, 62], "lazi": [33, 36, 44, 45, 57, 58, 59, 62], "environ": [33, 36, 38, 44, 45, 53, 57, 58, 59, 62], "product": [33, 36, 44, 45, 57, 58, 59, 62], "warn": [33, 36, 41, 44, 45, 57, 58, 59, 62, 80], "server": [33, 36, 44, 45, 57, 58, 59, 62], "wsgi": [33, 36, 44, 45, 57, 58, 59, 62], "debug": [33, 36, 44, 45, 57, 58, 59, 62], "off": [33, 36, 41, 44, 45, 57, 58, 59, 62], "press": [33, 36, 44, 45, 57, 58, 59, 62], "ctrl": [33, 36, 44, 45, 57, 58, 59, 62], "quit": [33, 36, 44, 45, 57, 58, 59, 62], "notebook": [34, 53], "f": [34, 35, 39, 45, 53, 57, 58, 62], "39": [34, 35, 45, 49, 51, 53, 55, 57, 58, 69, 72, 75, 79], "ye": [34, 35, 41, 47], "swap": 34, "digit": [34, 64, 65, 66, 67, 78, 80], "torchvis": [34, 62, 63, 65, 67, 69, 71, 73, 76, 78, 79], "download": [34, 65, 67, 74, 77, 78], "10000": [34, 59, 60, 61], "11": [34, 35, 41, 45, 53, 54, 80], "displai": [34, 35], "loop": 34, "camera": [34, 35, 62, 63, 73], "what": [34, 36, 37, 38, 39, 40, 41, 43], "great": [34, 36, 37, 39, 40, 41, 43, 44], "movi": [34, 36, 37, 39, 40, 43, 44], "tast": [34, 37, 39, 40, 43], "best": [34, 37, 39, 40, 43, 44], "film": [34, 37, 39, 40, 43, 44], "ever": [34, 37, 39, 40, 43, 44], "ve": [34, 37, 39, 40, 43, 44], "never": [34, 37, 39, 40, 43, 44, 45, 49, 51, 55, 57], "watch": [34, 37, 39, 40, 43, 44], "someth": [34, 37, 39, 40, 41, 43, 44], "bad": [34, 37, 39, 40, 41, 43, 44], "len": [34, 39, 40, 44, 62, 63, 68, 72, 73, 75, 76, 79], "17": [34, 43, 58, 59, 60, 61], "18": [34, 41, 53, 58, 62], "29": 34, "1319": 34, "76541": 34, "610": 34, "314": 34, "173": 34, "19": [34, 41, 53], "try": [35, 46, 48, 49, 51, 52, 53, 55, 57, 58, 71], "22474487": 35, "120": 35, "6227660078332259": 35, "4736296010332684": 35, "5178561161676974": 35, "680918560398684": 35, "7265094189091538": 35, "3632547094545769": 35, "2762645695949752": 35, "unknown": 35, "xxx": 35, "lt": [35, 45, 49, 51, 55, 57, 62], "gt": [35, 45, 49, 51, 55, 57], "limit": [36, 44], "interview": 36, "neither": 36, "funni": 36, "nor": 36, "witti": 36, "even": [36, 41], "like": [36, 41], "overal": [36, 41], "distilbert": [36, 37, 43], "uncas": [36, 37, 43], "finetun": [36, 37, 43], "sst": [36, 37, 43], "english": [36, 37, 43], "return_all_scor": [36, 37, 43], "ss": 36, "There": [36, 44, 62], "partit": [36, 41, 43], "3it": 36, "70": 36, "info": [36, 37, 38, 44, 53], "polyjuice_wrapp": [36, 37, 38, 44], "setup": [36, 37, 38, 44], "spaci": [36, 37, 38, 44], "processor": [36, 37, 38, 44, 74, 77], "perplex": [36, 37, 38, 44], "scorer": [36, 37, 38, 44], "ask": [36, 37, 38, 41, 44], "predefin": [36, 37, 38, 44], "werkzeug": [36, 44], "idx2label": [37, 62, 63, 72, 73, 75, 76, 79], "build": [37, 38, 45, 65, 67, 74, 77], "def": [37, 38, 39, 40, 44, 47, 53, 59, 60, 61, 65, 67, 68, 72, 74, 75, 77, 78, 79], "_predict": [37, 38], "pred": 37, "els": [37, 39, 40, 41, 44, 62, 64, 65, 66, 67, 71, 76, 78, 79, 80], "unittest": [38, 39, 50, 74, 77, 79], "model_nam": 38, "deepset": 38, "roberta": 38, "squad2": 38, "isinst": [38, 53], "farm": 38, "give": [38, 41], "freedom": 38, "peopl": [38, 41], "switch": 38, "covers": 38, "electr": 38, "vehicl": 38, "emit": 38, "less": [38, 41], "harm": 38, "pollut": 38, "convent": 38, "ultim": 38, "cleaner": [38, 45, 49, 51, 55, 57], "human": [38, 41], "beings": 38, "eletr": 38, "fetch_20newsgroup": [39, 40, 41, 42, 44], "textmodel": [39, 40, 44], "num_embed": [39, 40, 44], "num_class": [39, 40, 44, 64, 66, 80], "super": [39, 40, 44, 65, 67, 78], "embedding_s": [39, 40, 44], "embeddings_initi": 39, "randomuniform": 39, "minval": 39, "maxval": 39, "conv_lay": [39, 40, 44, 65, 67, 78], "conv1d": [39, 40, 44], "relu": [39, 40, 44, 53, 64, 65, 66, 67, 78, 80], "dropout": [39, 40, 44, 53, 64, 65, 66, 67, 78, 80], "output_lay": [39, 40, 44], "dens": [39, 47, 53, 64, 65, 66, 67, 78, 80], "expand_dim": [39, 53, 64, 66, 68, 72, 75, 80], "axi": [39, 40, 44, 47, 53, 54, 58, 64, 66, 68, 72, 75, 80], "reduce_max": 39, "concat": 39, "relat": [39, 40, 41, 42, 44], "read_csv": [39, 40, 44, 47, 53, 59, 60, 61], "home": [39, 40, 44, 74, 77, 80], "ywz": [39, 40, 44, 74, 77, 80], "labeledtraindata": [39, 40, 44], "tsv": [39, 40, 44], "x_train": [39, 40, 41, 42, 44, 47, 54, 58, 64, 65, 66, 67, 80], "y_train": [39, 40, 41, 42, 44, 47, 54, 58, 64, 65, 66, 67, 80], "astyp": [39, 40, 44, 47, 59, 60, 61, 64, 66, 80], "x_test": [39, 40, 41, 42, 44, 47, 54, 58, 64, 65, 66, 67, 80], "y_test": [39, 40, 41, 42, 44, 47, 54, 58, 64, 65, 66, 67, 80], "max_len": [39, 40, 44], "float32": [39, 40, 44, 47, 53, 64, 66, 80], "1e": [39, 40, 44, 65, 67, 78], "loss_fn": 39, "sparsecategoricalcrossentropi": 39, "from_logit": [39, 47, 64, 66, 80], "train_dataset": 39, "from_tensor_slic": 39, "buffer_s": 39, "1024": 39, "enumer": [39, 65, 67, 78], "gradienttap": 39, "tape": 39, "trainable_weight": 39, "apply_gradi": 39, "zip": [39, 65, 67, 78, 79], "200": [39, 47, 58], "6866752505302429": 39, "4109169542789459": 39, "21237820386886597": 39, "1540527492761612": 39, "08126655220985413": 39, "02999718114733696": 39, "008433952927589417": 39, "009998280555009842": 39, "0030068857595324516": 39, "001554026734083891": 39, "argmax": [39, 40, 44], "accuraci": [39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 64, 65, 66, 67, 78, 80], "f1_score": [39, 40, 41, 42, 44], "8560798903465829": 39, "id_to_word": [39, 40, 44], "util": [40, 44, 47, 64, 65, 66, 67, 78, 80], "trainer": [40, 44], "inputdata": [40, 44, 65, 67, 78], "dataload": [40, 44, 65, 67, 78], "normal_": [40, 44], "modulelist": [40, 44], "unsqueez": [40, 44, 79], "dim": [40, 44, 62, 79], "devic": [40, 44, 62, 65, 67, 71, 76, 78, 79], "is_avail": [40, 44, 62, 65, 67, 71, 76, 78, 79], "cpu": [40, 44, 62, 65, 67, 68, 71, 76, 78, 79], "optimizer_class": [40, 44], "loss_func": [40, 44, 65, 67, 78], "train_x": [40, 44], "train_i": [40, 44], "complet": [40, 41, 44, 48, 78], "0008": 40, "eval": [40, 44, 65, 67, 78, 79], "data_load": [40, 44], "collate_fn": [40, 44], "collate_func": [40, 44], "detach": [40, 44, 78, 79], "8458027386386188": 40, "advantag": [41, 48, 78], "fast": [41, 48, 78], "disadvantag": [41, 48, 78], "qualiti": [41, 48, 78], "highli": [41, 45, 48, 78], "affect": [41, 48, 78], "factor": [41, 48, 78], "hyperparamet": [41, 48], "ensembl": [41, 42, 50, 54, 57, 58], "alt": [41, 42], "atheism": [41, 42], "soc": [41, 42], "religion": [41, 42], "christian": [41, 42], "newsgroups_train": [41, 42], "newsgroups_test": [41, 42], "tfdif": [41, 42], "train_vector": [41, 42], "test_vector": [41, 42], "randomforestclassifi": [41, 42], "500": [41, 42], "925233644859813": 41, "idx": [41, 42], "83": [41, 42, 74, 77], "0039": 41, "8674698795180723": 41, "subject": [41, 42], "request": 41, "darwin": 41, "fish": 41, "organ": [41, 42], "univers": 41, "mexico": 41, "albuquerqu": 41, "recent": 41, "seen": 41, "anyon": [41, 42], "contact": 41, "email": 41, "me": 41, "john": 41, "dan": 41, "rose": 41, "aros": 41, "nation": [41, 42], "repent": 41, "my": 41, "own": [41, 45, 49, 51, 55, 57], "view": [41, 53], "63": 41, "mcovingt": 41, "covington": 41, "heard": 41, "radio": 41, "todai": 41, "student": 41, "confer": 41, "were": 41, "america": 41, "sin": [41, 42], "sexual": 41, "promiscu": 41, "repli": 41, "ca": 41, "claim": 41, "someon": 41, "am": 41, "fact": 41, "him": 41, "jesu": 41, "equip": 41, "judg": 41, "lewi": 41, "essai": 41, "world": 41, "war": 41, "ii": 41, "leader": 41, "britain": 41, "urg": 41, "horror": 41, "strongli": 41, "disagre": 41, "turn": 41, "behav": 41, "incredibli": 41, "toward": 41, "god": 41, "encourag": 41, "forc": 41, "folk": 41, "particip": 41, "directli": [41, 50], "oppos": 41, "written": 41, "far": 41, "abov": [41, 45, 47, 65, 67, 78], "luxuri": 41, "live": 41, "land": 41, "slaughter": 41, "children": 41, "million": 41, "stricken": 41, "out": 41, "honor": 41, "due": 41, "everi": 41, "ow": 41, "apologi": 41, "bit": [41, 45], "public": 41, "said": [41, 42], "decai": 41, "bibl": 41, "quiz": 41, "distribut": 41, "articl": 41, "healta": 41, "tammi": 41, "r": [41, 62, 63, 72, 73, 74, 75, 76, 77, 79], "heali": 41, "coven": 41, "he": 41, "idol": 41, "worship": 41, "priest": 41, "could": 41, "enter": 41, "holi": 41, "year": 41, "dai": 41, "aton": 41, "familiar": 41, "knowledg": 41, "believ": 41, "translat": 41, "would": 41, "had": 41, "think": 41, "wrong": 41, "again": 41, "just": 41, "suggest": 41, "correct": 41, "dean": 41, "danb": 41, "babcock": 41, "thought": 41, "commun": 41, "compani": 41, "voic": 41, "bil": 41, "bill": 41, "conner": 41, "jame": 41, "felder": 41, "spbach": 41, "wrote": 41, "logic": 41, "alert": 41, "incredul": 41, "hard": 41, "doe": 41, "liar": 41, "pursuas": 41, "look": [41, 53], "koresh": 41, "yourself": 41, "basi": 41, "reject": 41, "thing": 41, "madalyn": 41, "face": 41, "silli": 41, "okai": 41, "disbeliev": 41, "admit": 41, "fallaci": 41, "awar": 41, "reader": 41, "assert": 41, "mam": 41, "mike": 41, "mcangu": 41, "american": 41, "evolut": 41, "tin": 41, "pl9": 41, "53": [41, 45, 49, 51, 55, 57], "tue": 41, "apr": 41, "1993": 41, "gmt": 41, "robert": 41, "singleton": 41, "bob": 41, "sure": 41, "exclus": 41, "lend": 41, "notion": 41, "posterior": 41, "atheist": 41, "pitch": 41, "thu": 41, "necessarili": 41, "reduc": 41, "quantiti": 41, "theist": 41, "divin": 41, "fall": 41, "prei": 41, "ockham": 41, "razor": 41, "phenomenon": 41, "being": 41, "satisfactorili": 41, "independ": 41, "evid": 41, "occam": 41, "law": 41, "natur": 41, "often": 41, "end": 41, "seem": 41, "odd": 41, "simultan": 41, "condemn": 41, "primit": 41, "unscientif": 41, "childish": 41, "yet": [41, 53], "complex": 41, "scientif": 41, "straightforeward": 41, "appar": 41, "cute": 41, "character": 41, "howev": 41, "inconsist": 41, "still": 41, "unnecessari": 41, "level": 41, "idea": 41, "themselv": 41, "thei": [41, 45], "unnecessarili": 41, "descript": 41, "part": 41, "sfp": 41, "sheila": 41, "patterson": 41, "mari": 41, "assumpt": 41, "cornel": 41, "cit": 41, "22": [41, 45, 49, 51, 55, 57, 58], "mpaul": 41, "marxhausen": 41, "paul": 41, "feel": 41, "phrase": 41, "sai": 41, "parent": 41, "sanctifi": 41, "beyond": 41, "sound": 41, "inabl": 41, "grasp": 41, "grace": 41, "incarn": 41, "through": 41, "alwai": [41, 53], "impress": 41, "chose": 41, "woman": 41, "bring": 41, "himself": 41, "prove": 41, "down": 41, "hi": 41, "perfect": 41, "touch": 41, "ah": 41, "wonder": 41, "ithaca": 41, "ny": 41, "mark": 41, "boston": [41, 54], "asid": 41, "moder": 41, "rick": 41, "granberri": 41, "wo": 41, "quot": 41, "error": 41, "opinion": 41, "writer": 41, "plain": 41, "confus": 41, "come": [41, 53], "lexington": 41, "church": 41, "brought": 41, "team": 41, "actual": 41, "il": 41, "up": [41, 53, 69], "friend": 41, "tell": 41, "go": [41, 74, 77], "northeast": 41, "wast": 41, "talent": 41, "realli": 41, "kind": [41, 57, 58], "insid": 41, "joke": 41, "took": 41, "well": [41, 70, 71], "inde": 41, "misinform": 41, "sun": 41, "ok": 41, "mail": 41, "marshal": 41, "kevin": 41, "death": 41, "penalti": 41, "polit": 41, "virginia": 41, "tech": [41, 45, 49, 51, 55, 57], "scienc": 41, "dept": 41, "blacksburg": 41, "va": 41, "46": 41, "fascin": 41, "argu": 41, "abort": 41, "defend": 41, "homosexu": 41, "popul": [41, 58], "insist": 41, "biolog": 41, "punish": 41, "benedikt": 41, "contardictori": 41, "case": [41, 53], "excel": 41, "growth": 41, "sorri": 41, "escap": 41, "assum": 41, "alik": 41, "vari": 41, "greatli": 41, "attack": 41, "presum": 41, "person": 41, "right": 41, "regardless": 41, "arrog": 41, "bodi": 41, "domain": 41, "jcj": 41, "becom": [41, 45], "huh": 41, "whuzzat": 41, "muirm": 41, "maxwel": 41, "muir": 41, "candor": 41, "happi": 41, "proven": 41, "problem": 41, "broken": 41, "went": 41, "journei": 41, "lukewarm": 41, "agnostic": 41, "although": 41, "faith": 41, "jeff": 41, "johnson": 41, "9230769230769231": 42, "nntp": 42, "murder": 42, "7it": 43, "51": [43, 45, 47], "0010": 44, "8492442322991249": 44, "tensor": [44, 62, 63, 65, 67, 73, 76], "preprocess_func": [44, 64, 66, 80], "postprocess_func": 44, "state": [45, 49, 51, 55, 57], "gov": [45, 49, 51, 55, 57], "77516": [45, 49, 51, 55, 57], "bachelor": [45, 49, 51, 55, 57], "emp": [45, 49, 51, 55, 57], "inc": [45, 49, 51, 55, 57], "83311": [45, 49, 51, 55, 57], "38": [45, 49, 51, 55, 57], "privat": [45, 49, 51, 55, 57], "215646": [45, 49, 51, 55, 57], "234721": [45, 49, 51, 55, 57], "11th": [45, 49, 51, 55, 57], "338409": [45, 49, 51, 55, 57], "32556": [45, 49, 51, 55, 57], "257302": [45, 49, 51, 55, 57], "assoc": [45, 49, 51, 55, 57], "acdm": [45, 49, 51, 55, 57], "32557": [45, 49, 51, 55, 57], "40": [45, 49, 51, 55, 57], "154374": [45, 49, 51, 55, 57], "32558": [45, 49, 51, 55, 57], "58": [45, 49, 51, 55, 57], "151910": [45, 49, 51, 55, 57], "32559": [45, 49, 51, 55, 57], "201490": [45, 49, 51, 55, 57], "32560": [45, 49, 51, 55, 57], "52": [45, 49, 51, 55, 57, 58], "287927": [45, 49, 51, 55, 57], "marri": [45, 49, 51, 55, 57], "adm": [45, 49, 51, 55, 57], "cleric": [45, 49, 51, 55, 57], "white": [45, 49, 51, 55, 57], "civ": [45, 49, 51, 55, 57], "spous": [45, 49, 51, 55, 57], "exec": [45, 49, 51, 55, 57], "manageri": [45, 49, 51, 55, 57], "husband": [45, 49, 51, 55, 57], "divorc": [45, 49, 51, 55, 57], "handler": [45, 49, 51, 53, 55, 57], "prof": [45, 49, 51, 55, 57], "specialti": [45, 49, 51, 55, 57], "wife": [45, 49, 51, 55, 57], "op": [45, 49, 51, 55, 57], "inspct": [45, 49, 51, 55, 57], "widow": [45, 49, 51, 55, 57], "unmarri": [45, 49, 51, 55, 57], "child": [45, 49, 51, 55, 57], "2174": [45, 49, 51, 55, 57], "50k": [45, 49, 51, 55, 57], "cuba": [45, 49, 51, 55, 57], "15024": [45, 49, 51, 55, 57], "32561": [45, 49, 51, 55, 57], "lead": 45, "potenti": 45, "sociolog": 45, "bia": 45, "observ": [45, 58], "strong": 45, "matrit": 45, "imbalanc": 45, "among": 45, "therefor": 45, "avoid": 45, "rough": 45, "educt": 45, "least": 45, "them": [45, 62, 68, 72, 75], "rel": 45, "low": 45, "12345": 45, "accuracy_scor": [45, 46, 48, 49, 51, 52, 55, 57], "26048": [45, 46, 48, 49, 51, 52, 55, 57], "6513": [45, 46, 48, 49, 51, 52, 55, 57], "8593582066635959": 45, "describ": 45, "longer": [45, 80], "But": 45, "causal": 45, "caus": 45, "unclear": 45, "1653": [45, 48, 49, 55, 56, 57], "1658": [45, 57], "ocup": 45, "confusion_matrix": [45, 57], "roc": [45, 57], "precision_recal": [45, 57], "cumulative_gain": [45, 57], "lift_curv": [45, 57], "108": [46, 48, 49, 51, 52, 55, 57], "8668816213726394": [46, 48, 49, 51, 52, 55, 57], "standardscal": 47, "diabetes_data": 47, "file_path": 47, "to_replac": 47, "No": 47, "polyuria": 47, "polydipsia": 47, "sudden": 47, "weak": 47, "polyphagia": 47, "genit": 47, "thrush": 47, "blur": 47, "itch": 47, "irrit": 47, "delai": 47, "heal": 47, "paresi": 47, "muscl": 47, "stiff": 47, "alopecia": 47, "obes": 47, "x_train_un": 47, "x_test_un": 47, "test_siz": 47, "stratifi": 47, "sc": 47, "fit_transform": 47, "train_tf_model": 47, "to_categor": [47, 64, 66, 80], "sequenti": [47, 64, 65, 66, 67, 78, 80], "softplu": 47, "schedul": 47, "exponentialdecai": 47, "initial_learning_r": 47, "decay_step": 47, "decay_r": 47, "99": [47, 53, 62, 63, 64, 65, 67, 78], "staircas": 47, "sgd": 47, "momentum": 47, "nesterov": 47, "categoricalcrossentropi": [47, 64, 66, 80], "compil": [47, 53, 64, 66, 68, 74, 77, 80], "train_loss": 47, "train_accuraci": 47, "test_loss": 47, "test_accuraci": 47, "4f": 47, "csv": [47, 53, 59, 60, 61], "416": 47, "104": 47, "0631": 47, "9856": [47, 64], "0568": 47, "9808": 47, "necessari": [48, 49, 51, 57, 58], "labels_train": [48, 49, 51, 55], "labels_test": [48, 49, 51, 55], "1953": 48, "8647768803169436": 48, "test_x": [48, 49, 50, 55, 56, 60, 61], "1655": [49, 55], "pprint": 50, "8518347919545525": 50, "fix": 51, "takeawai": 53, "instal": [53, 74, 77], "ml4ir": 53, "ltr": 53, "order": 53, "pointwis": 53, "listwis": 53, "record": 53, "infer": 53, "singh": 53, "khosla": 53, "anand": 53, "2020": [53, 80], "2004": 53, "13972": 53, "upgrad": 53, "nbformat": 53, "df_train": 53, "file_0": 53, "head": 53, "query_text": 53, "text_match_scor": 53, "page_views_scor": 53, "quality_scor": 53, "click": 53, "domain_id": 53, "domain_nam": 53, "name_match": 53, "query_2": 53, "mhs7a7rjb1y4bjt": 53, "473730": 53, "000000": 53, "00000": 53, "domain_2": 53, "063190": 53, "205381": 53, "30103": 53, "query_5": 53, "knjnwv": 53, "368108": 53, "030636": 53, "domain_0": 53, "370628": 53, "041261": 53, "366700": 53, "082535": 53, "333836": 53, "042572": 53, "325021": 53, "046478": 53, "featureconfig": 53, "yaml": 53, "config": 53, "activate_2020": 53, "feature_config": 53, "tfrecord": 53, "usag": 53, "charact": 53, "bilstm": 53, "vocablookup": 53, "modelconfig": 53, "model_config": 53, "read": 53, "architecture_kei": 53, "dnn": 53, "first_dens": 53, "first_dropout": 53, "second_dens": 53, "final_dens": 53, "null": 53, "data_format": 53, "data_dir": 53, "execution_mod": 53, "train_inference_evalu": 53, "loss_kei": 53, "softmax_cross_entropi": 53, "models_dir": 53, "explain_demo_2022": 53, "logs_dir": 53, "log": 53, "run_id": 53, "activate_demo": 53, "readi": [53, 57, 58], "model_dir": 53, "local_io": 53, "localio": 53, "file_io": 53, "fileio": 53, "sequenceexamplefeatureconfig": 53, "relevance_model": 53, "relevancemodel": 53, "tfrecordtypekei": 53, "logger": 53, "getlogg": 53, "get_logg": 53, "setlevel": 53, "autograph": 53, "set_verbos": 53, "tf_cpp_min_log_level": 53, "get_inst": 53, "tfrecord_typ": 53, "sequence_exampl": 53, "feature_config_dict": 53, "read_yaml": 53, "get_train_featur": 53, "saniti": 53, "model_fil": 53, "final": 53, "output_nam": 53, "relevance_scor": 53, "is_compil": 53, "retrain": 53, "kmodel": 53, "load_model": 53, "infer_fn": 53, "signatur": 53, "serving_tfrecord": 53, "tfrecord_help": 53, "get_sequence_example_proto": 53, "features_df": 53, "fillna": 53, "renam": [53, 59, 60, 61], "serving_info": 53, "context_featur": 53, "sequence_featur": 53, "context_feature_nam": 53, "proto": 53, "groupbi": 53, "ranking_scor": 53, "se": 53, "constant": 53, "serializetostr": 53, "predicted_scor": 53, "reset_index": 53, "362720": 53, "tlaud": 53, "venv": 53, "lib": [53, 74, 77, 80], "python3": [53, 74, 77, 80], "site": [53, 74, 77, 80], "ipykernel_launch": 53, "settingwithcopywarn": 53, "loc": 53, "row_index": 53, "col_index": 53, "caveat": 53, "pydata": 53, "user_guid": 53, "versu": 53, "cwd": 53, "sy": 53, "11998416": 53, "19389412": 53, "20375773": 53, "17943792": 53, "11195529": 53, "1909707": 53, "5671": 53, "query_1487": 53, "qcz4xhln": 53, "227694": 53, "5672": 53, "016954": 53, "5673": 53, "query_1490": 53, "wynff89": 53, "474600": 53, "190735": 53, "5674": 53, "620355": 53, "143310": 53, "5675": 53, "508362": 53, "5676": 53, "sample_queri": 53, "wish": 53, "trainabl": 53, "ranking_explain": 53, "21": [53, 58], "23": [53, 58], "dict_kei": 53, "kendalltauresult": 53, "9999999999999999": 53, "pvalu": 53, "002777777777777778": 53, "kendal": 53, "grade": 53, "fig": 53, "ipython_figur": 53, "update_layout": 53, "autos": 53, "1800": 53, "load_boston": 54, "rf": [54, 58], "randomforestregressor": [54, 58], "mserror": [54, 58], "404": 54, "102": 54, "215751067843145": 54, "8446184553968985": 56, "fetch_california_h": 58, "medinc": 58, "houseag": 58, "averoom": 58, "avebedrm": 58, "aveoccup": 58, "latitud": 58, "3252": 58, "41": 58, "984127": 58, "023810": 58, "322": 58, "555556": 58, "37": 58, "88": 58, "3014": 58, "238137": 58, "971880": 58, "2401": 58, "109842": 58, "86": 58, "2574": 58, "288136": 58, "073446": 58, "496": 58, "802260": 58, "85": 58, "6431": 58, "817352": 58, "073059": 58, "558": 58, "547945": 58, "8462": 58, "281853": 58, "081081": 58, "565": 58, "181467": 58, "20635": 58, "5603": 58, "045455": 58, "133333": 58, "845": 58, "560606": 58, "48": [58, 68], "20636": 58, "5568": 58, "114035": 58, "315789": 58, "356": 58, "122807": 58, "49": 58, "20637": 58, "7000": 58, "205543": 58, "120092": 58, "1007": 58, "325635": 58, "43": 58, "20638": 58, "8672": 58, "329513": 58, "171920": 58, "741": 58, "123209": 58, "20639": 58, "3886": 58, "254717": 58, "162264": 58, "1387": 58, "616981": 58, "longitud": 58, "122": 58, "526": 58, "585": 58, "24": 58, "521": 58, "413": 58, "422": 58, "121": 58, "09": [58, 68], "781": 58, "771": 58, "923": 58, "847": 58, "894": 58, "20640": 58, "16512": 58, "4128": 58, "3515599004967849": 58, "255011664583401": 58, "residu": 58, "sythent": [59, 60, 61], "horizont": [59, 60, 61], "1970": [59, 60, 61], "928031": [59, 60, 61], "156620": [59, 60, 61], "390650": [59, 60, 61], "400804": [59, 60, 61], "874490": [59, 60, 61], "02": [59, 60, 61], "04": [59, 60, 61], "55": [59, 60, 61], "362724": [59, 60, 61], "657373": [59, 60, 61], "472341": [59, 60, 61], "033154": [59, 60, 61], "950466": [59, 60, 61], "9150": [59, 60, 61], "9300": [59, 60, 61], "percentil": [59, 60, 61], "90": [59, 60, 61], "anomaly_scor": [59, 60, 61], "sum": [59, 60, 61, 74, 77], "98": [59, 60, 65, 67, 78], "img_1": 62, "dog_cat": [62, 69, 76, 79], "img_2": 62, "img_3": 62, "visul": 62, "imagenet_class_index": [62, 63, 72, 73, 75, 76, 79], "read_fil": [62, 63, 72, 73, 75, 76, 79], "class_idx": [62, 63, 72, 73, 75, 76, 79], "sent": 62, "scorecam": 62, "layer3": 62, "2048": 62, "112": 62, "44it": 62, "purpos": 63, "pyplot": [64, 65, 66, 67, 80], "plt": [64, 65, 66, 67, 80], "img_row": [64, 66, 80], "img_col": [64, 66, 80], "load_data": [64, 66, 80], "backend": [64, 66, 80], "image_data_format": [64, 66, 80], "channels_first": [64, 66, 80], "input_shap": [64, 66, 80], "train_img": [64, 66, 78, 80], "conv2d": [64, 65, 66, 67, 78, 80], "maxpooling2d": [64, 66, 80], "pool_siz": [64, 66, 80], "flatten": [64, 65, 66, 67, 78, 80], "validation_data": [64, 66, 80], "469": [64, 66, 80], "5m": [64, 66, 80], "1696": 64, "9492": 64, "val_loss": [64, 66, 80], "0436": 64, "val_accuraci": [64, 66, 80], "9855": [64, 80], "0478": 64, "0352": 64, "9882": 64, "0324": 64, "9896": [64, 66], "0315": 64, "9892": [64, 66], "0223": 64, "9929": 64, "0320": 64, "9887": [64, 66], "0179": 64, "9940": 64, "0314": 64, "9901": 64, "0141": 64, "9952": 64, "0365": 64, "9888": 64, "0113": 64, "9960": 64, "9903": [64, 80], "0109": [64, 66, 80], "9965": 64, "0297": [64, 66], "9918": 64, "0083": 64, "9972": 64, "0337": 64, "0072": [64, 80], "9976": 64, "0382": 64, "9895": [64, 66], "03824701905250549": 64, "9894999861717224": 64, "__len__": [65, 67, 78], "__getitem__": [65, 67, 78], "mnistnet": [65, 67, 78], "maxpool2d": [65, 67, 78], "fc_layer": [65, 67, 78], "320": [65, 67, 78], "train_load": [65, 67, 78], "test_load": [65, 67, 78], "lr": [65, 67, 78], "zero_grad": [65, 67, 78], "backward": [65, 67, 78], "correct_pr": [65, 67, 78], "total_pr": [65, 67, 78], "_": [65, 67, 78], "correct_count": [65, 67, 78], "1f": [65, 67, 78], "97": [65, 67], "1712": 66, "9493": 66, "0509": 66, "9837": 66, "0467": 66, "9857": 66, "0364": 66, "9880": 66, "0331": 66, "0323": [66, 80], "9884": 66, "0226": 66, "9927": 66, "0345": 66, "9890": 66, "0171": 66, "9942": 66, "0371": 66, "0150": 66, "9949": [66, 80], "9906": [66, 80], "9966": 66, "0428": 66, "0101": 66, "9967": 66, "0356": 66, "0086": 66, "9969": 66, "0393": 66, "0065": [66, 80], "9977": 66, "0399": 66, "9898": 66, "03988948091864586": 66, "989799976348877": 66, "vgg16": [68, 70, 71], "dog_cat_2": [68, 72, 75], "img_to_arrai": [68, 72, 75], "preprocess_input": [68, 72, 75], "2022": 68, "08": 68, "038022": 68, "core": 68, "platform": 68, "cpu_feature_guard": 68, "cc": 68, "193": 68, "oneapi": 68, "onednn": 68, "instruct": [68, 80], "critic": 68, "oper": 68, "avx2": 68, "fma": 68, "enabl": 68, "rebuild": 68, "vgg": 69, "deprec": [69, 71, 80], "sinc": [69, 78], "enum": 69, "equival": 69, "pass": [69, 80], "resnet50_weight": 69, "imagenet1k_v1": 69, "layer2": 69, "maxim": [70, 71], "fft": 71, "irfft": 71, "releas": [71, 74, 77], "ifft": 71, "trigger": [71, 74, 77], "intern": [71, 74, 77], "aten": 71, "src": 71, "nativ": 71, "spectralop": 71, "cpp": [71, 74, 77], "602": 71, "mobilenet_v2": [72, 75], "mobilenetv2": [72, 75], "include_top": [72, 75], "input_img": [72, 79], "top_indic": [72, 75], "argsort": [72, 75], "243": [72, 75], "242": [72, 75], "boxer": [72, 75], "282": [72, 75], "tabbi": [72, 75], "292": [72, 75], "tiger": [72, 75], "lavi": [74, 77], "soon": [74, 77], "multi_input": [74, 77], "multiinput": [74, 77], "blipitm": [74, 77], "load_processor": [74, 77], "anaconda3": [74, 77, 80], "env": [74, 77], "conda_env_py3": [74, 77], "userwarn": [74, 77], "nvidia": [74, 77], "driver": [74, 77], "system": [74, 77], "old": [74, 77, 78], "10010": [74, 77], "updat": [74, 77, 80], "gpu": [74, 77], "url": [74, 77], "aspx": [74, 77], "altern": [74, 77], "c10": [74, 77], "cudafunct": [74, 77], "109": [74, 77], "480": [74, 77], "girl_dog": [74, 77], "girl": [74, 77], "plai": [74, 77], "her": [74, 77], "beach": [74, 77], "blip": [74, 77], "pretrained_path": [74, 77], "storag": [74, 77], "googleapi": [74, 77], "sfr": [74, 77], "model_base_retrieval_coco": [74, 77], "pth": [74, 77], "vit": [74, 77], "image_processor": [74, 77], "blip_image_ev": [74, 77], "image_s": [74, 77], "384": [74, 77], "text_processor": [74, 77], "blip_capt": [74, 77], "init_token": [74, 77], "text_encod": [74, 77], "base_model": 74, "crossattent": 74, "attention_probs_lay": 74, "inception_v3": [76, 79], "word_embed": 77, "cl": 77, "96": 78, "bilinear": 78, "align_corn": 78, "2665": 78, "8901166666666667": 78, "incept": 79, "probs_top_5": 79, "topk": 79, "93592954": 79, "239": [79, 80], "bernese_mountain_dog": 79, "038448237": 79, "241": 79, "entlebuch": 79, "023756476": 79, "appenzel": 79, "0018181928": 79, "238": 79, "greater_swiss_mountain_dog": 79, "113302e": 79, "06": 79, "214": 79, "gordon_sett": 79, "batch_predict": 79, "prob": 79, "hide_color": 79, "1724": 80, "9487": 80, "0458": 80, "0466": 80, "9852": 80, "0333": 80, "9885": 80, "0298": 80, "9891": 80, "0207": 80, "9933": 80, "0286": 80, "0158": 80, "0295": 80, "9907": 80, "0125": 80, "9962": 80, "0290": 80, "9904": 80, "9963": 80, "0283": 80, "9902": 80, "0090": 80, "9970": 80, "9978": 80, "0317": 80, "9912": 80, "9974": 80, "0359": 80, "9915": 80, "03591015189886093": 80, "9915000200271606": 80, "_deep": 80, "deep_tf": 80, "set_learning_phas": 80, "__call__": 80}, "objects": {"": [[1, 0, 0, "-", "omnixai"]], "omnixai": [[2, 0, 0, "-", "data"], [3, 0, 0, "-", "deployment"], [4, 0, 0, "-", "explainers"], [25, 0, 0, "-", "explanations"], [30, 0, 0, "-", "preprocessing"], [31, 0, 0, "-", "visualization"]], "omnixai.data": [[2, 0, 0, "-", "base"], [2, 0, 0, "-", "image"], [2, 0, 0, "-", "tabular"], [2, 0, 0, "-", "text"], [2, 0, 0, "-", "timeseries"]], "omnixai.data.base": [[2, 1, 1, "", "Data"]], "omnixai.data.base.Data": [[2, 2, 1, "", "data_type"], [2, 3, 1, "", "num_samples"], [2, 3, 1, "", "values"]], "omnixai.data.image": [[2, 1, 1, "", "Image"]], "omnixai.data.image.Image": [[2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 2, 1, "", "image_shape"], [2, 3, 1, "", "num_samples"], [2, 2, 1, "", "shape"], [2, 3, 1, "", "to_numpy"], [2, 3, 1, "", "to_pil"], [2, 2, 1, "", "values"]], "omnixai.data.tabular": [[2, 1, 1, "", "Tabular"]], "omnixai.data.tabular.Tabular": [[2, 2, 1, "", "categorical_columns"], [2, 2, 1, "", "columns"], [2, 2, 1, "", "continuous_columns"], [2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 2, 1, "", "feature_columns"], [2, 3, 1, "", "get_continuous_bounds"], [2, 3, 1, "", "get_continuous_medians"], [2, 3, 1, "", "get_target_column"], [2, 3, 1, "", "iloc"], [2, 3, 1, "", "num_samples"], [2, 3, 1, "", "remove_target_column"], [2, 2, 1, "", "shape"], [2, 2, 1, "", "target_column"], [2, 3, 1, "", "to_numpy"], [2, 3, 1, "", "to_pd"], [2, 2, 1, "", "values"]], "omnixai.data.text": [[2, 1, 1, "", "Text"]], "omnixai.data.text.Text": [[2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 3, 1, "", "num_samples"], [2, 3, 1, "", "split"], [2, 3, 1, "", "to_str"], [2, 3, 1, "", "to_tokens"], [2, 2, 1, "", "values"]], "omnixai.data.timeseries": [[2, 1, 1, "", "Timeseries"]], "omnixai.data.timeseries.Timeseries": [[2, 2, 1, "", "columns"], [2, 3, 1, "", "copy"], [2, 4, 1, "", "data_type"], [2, 3, 1, "", "from_pd"], [2, 3, 1, "", "get_timestamp_info"], [2, 2, 1, "", "index"], [2, 3, 1, "", "num_samples"], [2, 3, 1, "", "reset_timestamp_index"], [2, 3, 1, "", "restore_timestamp_index"], [2, 2, 1, "", "shape"], [2, 3, 1, "", "to_numpy"], [2, 3, 1, "", "to_pd"], [2, 2, 1, "", "ts_len"], [2, 2, 1, "", "values"]], "omnixai.deployment": [[3, 0, 0, "-", "bentoml"]], "omnixai.explainers": [[4, 0, 0, "-", "base"], [5, 0, 0, "-", "data"], [10, 0, 0, "-", "prediction"]], "omnixai.explainers.base": [[4, 1, 1, "", "AutoExplainerBase"], [4, 1, 1, "", "ExplainerABCMeta"], [4, 1, 1, "", "ExplainerBase"]], "omnixai.explainers.base.AutoExplainerBase": [[4, 3, 1, "", "explain"], [4, 3, 1, "", "explain_global"], [4, 2, 1, "", "explainer_names"], [4, 3, 1, "", "list_explainers"], [4, 3, 1, "", "load"], [4, 3, 1, "", "parse_explanations_from_json"], [4, 3, 1, "", "predict"], [4, 3, 1, "", "save"]], "omnixai.explainers.base.ExplainerBase": [[4, 3, 1, "", "explain"], [4, 2, 1, "", "explanation_type"], [4, 3, 1, "", "load"], [4, 3, 1, "", "save"]], "omnixai.explainers.data": [[5, 1, 1, "", "ChiSquare"], [5, 1, 1, "", "CorrelationAnalyzer"], [5, 1, 1, "", "DataAnalyzer"], [5, 1, 1, "", "ImbalanceAnalyzer"], [5, 1, 1, "", "MutualInformation"], [5, 0, 0, "-", "auto"], [5, 0, 0, "-", "chi_square"], [5, 0, 0, "-", "correlation"], [5, 0, 0, "-", "imbalance"], [5, 0, 0, "-", "mutual_info"]], "omnixai.explainers.data.ChiSquare": [[5, 4, 1, "", "alias"], [5, 3, 1, "", "explain"], [5, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.CorrelationAnalyzer": [[5, 4, 1, "", "alias"], [5, 3, 1, "", "explain"], [5, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.DataAnalyzer": [[5, 3, 1, "", "explain"], [5, 3, 1, "", "list_explainers"]], "omnixai.explainers.data.ImbalanceAnalyzer": [[5, 4, 1, "", "alias"], [5, 3, 1, "", "explain"], [5, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.MutualInformation": [[5, 4, 1, "", "alias"], [5, 3, 1, "", "explain"], [5, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.auto": [[5, 1, 1, "", "DataAnalyzer"]], "omnixai.explainers.data.auto.DataAnalyzer": [[5, 3, 1, "", "explain"], [5, 3, 1, "", "list_explainers"]], "omnixai.explainers.data.chi_square": [[5, 1, 1, "", "ChiSquare"]], "omnixai.explainers.data.chi_square.ChiSquare": [[5, 4, 1, "", "alias"], [5, 3, 1, "", "explain"], [5, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.correlation": [[5, 1, 1, "", "CorrelationAnalyzer"]], "omnixai.explainers.data.correlation.CorrelationAnalyzer": [[5, 4, 1, "", "alias"], [5, 3, 1, "", "explain"], [5, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.imbalance": [[5, 1, 1, "", "ImbalanceAnalyzer"]], "omnixai.explainers.data.imbalance.ImbalanceAnalyzer": [[5, 4, 1, "", "alias"], [5, 3, 1, "", "explain"], [5, 4, 1, "", "explanation_type"]], "omnixai.explainers.data.mutual_info": [[5, 1, 1, "", "MutualInformation"]], "omnixai.explainers.data.mutual_info.MutualInformation": [[5, 4, 1, "", "alias"], [5, 3, 1, "", "explain"], [5, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp": [[7, 0, 0, "-", "agnostic"], [6, 0, 0, "-", "auto"], [8, 0, 0, "-", "counterfactual"], [9, 0, 0, "-", "specific"]], "omnixai.explainers.nlp.agnostic": [[7, 0, 0, "-", "l2x"], [7, 0, 0, "-", "lime"], [7, 0, 0, "-", "shap"]], "omnixai.explainers.nlp.agnostic.l2x": [[7, 1, 1, "", "DefaultPredictionModel"], [7, 1, 1, "", "DefaultSelectionModel"], [7, 1, 1, "", "L2XText"]], "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel": [[7, 3, 1, "", "forward"], [7, 4, 1, "", "training"]], "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel": [[7, 3, 1, "", "forward"], [7, 4, 1, "", "training"]], "omnixai.explainers.nlp.agnostic.l2x.L2XText": [[7, 4, 1, "", "alias"], [7, 3, 1, "", "explain"], [7, 4, 1, "", "explanation_type"], [7, 3, 1, "", "save"]], "omnixai.explainers.nlp.agnostic.lime": [[7, 1, 1, "", "LimeText"]], "omnixai.explainers.nlp.agnostic.lime.LimeText": [[7, 4, 1, "", "alias"], [7, 3, 1, "", "explain"], [7, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp.agnostic.shap": [[7, 1, 1, "", "ShapText"]], "omnixai.explainers.nlp.agnostic.shap.ShapText": [[7, 4, 1, "", "alias"], [7, 3, 1, "", "explain"], [7, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp.auto": [[6, 1, 1, "", "NLPExplainer"]], "omnixai.explainers.nlp.auto.NLPExplainer": [[6, 3, 1, "", "list_explainers"]], "omnixai.explainers.nlp.counterfactual": [[8, 0, 0, "-", "polyjuice"]], "omnixai.explainers.nlp.counterfactual.polyjuice": [[8, 1, 1, "", "Polyjuice"]], "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice": [[8, 4, 1, "", "alias"], [8, 3, 1, "", "explain"], [8, 4, 1, "", "explanation_type"]], "omnixai.explainers.nlp.specific": [[9, 0, 0, "-", "ig"]], "omnixai.explainers.nlp.specific.ig": [[9, 1, 1, "", "IntegratedGradientText"]], "omnixai.explainers.nlp.specific.ig.IntegratedGradientText": [[9, 4, 1, "", "alias"], [9, 3, 1, "", "explain"], [9, 4, 1, "", "explanation_type"]], "omnixai.explainers.prediction": [[10, 1, 1, "", "PredictionAnalyzer"]], "omnixai.explainers.prediction.PredictionAnalyzer": [[10, 4, 1, "", "alias"], [10, 3, 1, "", "explain"], [10, 4, 1, "", "explanation_type"]], "omnixai.explainers.ranking": [[12, 0, 0, "-", "agnostic"], [13, 0, 0, "-", "counterfactual"]], "omnixai.explainers.ranking.agnostic": [[12, 0, 0, "-", "permutation"], [12, 0, 0, "-", "validity"]], "omnixai.explainers.ranking.agnostic.permutation": [[12, 1, 1, "", "PermutationRankingExplainer"]], "omnixai.explainers.ranking.agnostic.permutation.PermutationRankingExplainer": [[12, 4, 1, "", "alias"], [12, 3, 1, "", "explain"], [12, 4, 1, "", "explanation_type"]], "omnixai.explainers.ranking.agnostic.validity": [[12, 1, 1, "", "ValidityRankingExplainer"]], "omnixai.explainers.ranking.agnostic.validity.ValidityRankingExplainer": [[12, 4, 1, "", "alias"], [12, 3, 1, "", "explain"], [12, 4, 1, "", "explanation_type"]], "omnixai.explainers.ranking.counterfactual": [[13, 0, 0, "-", "mace"]], "omnixai.explainers.ranking.counterfactual.mace": [[13, 1, 1, "", "MACEExplainer"]], "omnixai.explainers.ranking.counterfactual.mace.MACEExplainer": [[13, 4, 1, "", "alias"], [13, 3, 1, "", "explain"], [13, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular": [[15, 0, 0, "-", "agnostic"], [14, 0, 0, "-", "auto"], [14, 0, 0, "-", "base"], [16, 0, 0, "-", "counterfactual"], [17, 0, 0, "-", "specific"]], "omnixai.explainers.tabular.agnostic.L2X": [[15, 0, 0, "-", "l2x"]], "omnixai.explainers.tabular.agnostic.L2X.l2x": [[15, 1, 1, "", "DefaultPredictionModel"], [15, 1, 1, "", "DefaultSelectionModel"], [15, 1, 1, "", "L2XTabular"]], "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel": [[15, 3, 1, "", "forward"], [15, 4, 1, "", "training"]], "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel": [[15, 3, 1, "", "forward"], [15, 4, 1, "", "training"]], "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular": [[15, 4, 1, "", "alias"], [15, 3, 1, "", "explain"], [15, 4, 1, "", "explanation_type"], [15, 3, 1, "", "save"]], "omnixai.explainers.tabular.agnostic": [[15, 0, 0, "-", "ale"], [15, 0, 0, "-", "lime"], [15, 0, 0, "-", "pdp"], [15, 0, 0, "-", "permutation"], [15, 0, 0, "-", "sensitivity"], [15, 0, 0, "-", "shap"], [15, 0, 0, "-", "shap_global"]], "omnixai.explainers.tabular.agnostic.ale": [[15, 1, 1, "", "ALE"]], "omnixai.explainers.tabular.agnostic.ale.ALE": [[15, 4, 1, "", "alias"], [15, 3, 1, "", "cmds"], [15, 3, 1, "", "explain"], [15, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic.lime": [[15, 1, 1, "", "LimeTabular"]], "omnixai.explainers.tabular.agnostic.lime.LimeTabular": [[15, 4, 1, "", "alias"], [15, 3, 1, "", "explain"], [15, 4, 1, "", "explanation_type"], [15, 3, 1, "", "save"]], "omnixai.explainers.tabular.agnostic.pdp": [[15, 1, 1, "", "PartialDependenceTabular"]], "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular": [[15, 4, 1, "", "alias"], [15, 3, 1, "", "explain"], [15, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic.permutation": [[15, 1, 1, "", "PermutationImportance"]], "omnixai.explainers.tabular.agnostic.permutation.PermutationImportance": [[15, 4, 1, "", "alias"], [15, 3, 1, "", "explain"], [15, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic.sensitivity": [[15, 1, 1, "", "SensitivityAnalysisTabular"]], "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular": [[15, 4, 1, "", "alias"], [15, 3, 1, "", "explain"], [15, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.agnostic.shap": [[15, 1, 1, "", "ShapTabular"]], "omnixai.explainers.tabular.agnostic.shap.ShapTabular": [[15, 4, 1, "", "alias"], [15, 3, 1, "", "explain"], [15, 4, 1, "", "explanation_type"], [15, 3, 1, "", "save"]], "omnixai.explainers.tabular.agnostic.shap_global": [[15, 1, 1, "", "GlobalShapTabular"]], "omnixai.explainers.tabular.agnostic.shap_global.GlobalShapTabular": [[15, 4, 1, "", "alias"], [15, 3, 1, "", "explain"], [15, 4, 1, "", "explanation_type"], [15, 3, 1, "", "save"]], "omnixai.explainers.tabular.auto": [[14, 1, 1, "", "TabularExplainer"]], "omnixai.explainers.tabular.auto.TabularExplainer": [[14, 3, 1, "", "list_explainers"]], "omnixai.explainers.tabular.base": [[14, 1, 1, "", "SklearnBase"], [14, 1, 1, "", "TabularExplainer"], [14, 1, 1, "", "TabularExplainerMixin"]], "omnixai.explainers.tabular.base.SklearnBase": [[14, 3, 1, "", "class_names"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_proba"]], "omnixai.explainers.tabular.counterfactual": [[16, 0, 0, "-", "ce"]], "omnixai.explainers.tabular.counterfactual.ce": [[16, 1, 1, "", "CounterfactualExplainer"], [16, 1, 1, "", "CounterfactualOptimizer"]], "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer": [[16, 4, 1, "", "alias"], [16, 3, 1, "", "explain"], [16, 4, 1, "", "explanation_type"], [16, 3, 1, "", "save"]], "omnixai.explainers.tabular.counterfactual.ce.CounterfactualOptimizer": [[16, 3, 1, "", "optimize"]], "omnixai.explainers.tabular.counterfactual.mace": [[16, 0, 0, "-", "mace"]], "omnixai.explainers.tabular.counterfactual.mace.mace": [[16, 1, 1, "", "MACEExplainer"]], "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer": [[16, 4, 1, "", "alias"], [16, 3, 1, "", "explain"], [16, 4, 1, "", "explanation_type"]], "omnixai.explainers.tabular.specific": [[17, 0, 0, "-", "decision_tree"], [17, 0, 0, "-", "ig"], [17, 0, 0, "-", "linear"], [17, 0, 0, "-", "shap_tree"]], "omnixai.explainers.tabular.specific.decision_tree": [[17, 1, 1, "", "TreeBase"], [17, 1, 1, "", "TreeClassifier"], [17, 1, 1, "", "TreeRegressor"]], "omnixai.explainers.tabular.specific.decision_tree.TreeBase": [[17, 3, 1, "", "explain"], [17, 4, 1, "", "explanation_type"], [17, 3, 1, "", "fit"]], "omnixai.explainers.tabular.specific.decision_tree.TreeClassifier": [[17, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.decision_tree.TreeRegressor": [[17, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.ig": [[17, 1, 1, "", "IntegratedGradient"], [17, 1, 1, "", "IntegratedGradientTabular"]], "omnixai.explainers.tabular.specific.ig.IntegratedGradient": [[17, 3, 1, "", "compute_integrated_gradients"]], "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular": [[17, 4, 1, "", "alias"], [17, 3, 1, "", "explain"], [17, 4, 1, "", "explanation_type"], [17, 3, 1, "", "save"]], "omnixai.explainers.tabular.specific.linear": [[17, 1, 1, "", "LinearBase"], [17, 1, 1, "", "LinearRegression"], [17, 1, 1, "", "LogisticRegression"]], "omnixai.explainers.tabular.specific.linear.LinearBase": [[17, 3, 1, "", "explain"], [17, 4, 1, "", "explanation_type"], [17, 3, 1, "", "fit"]], "omnixai.explainers.tabular.specific.linear.LinearRegression": [[17, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.linear.LogisticRegression": [[17, 4, 1, "", "alias"]], "omnixai.explainers.tabular.specific.shap_tree": [[17, 1, 1, "", "ShapTreeTabular"]], "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular": [[17, 4, 1, "", "alias"], [17, 3, 1, "", "explain"], [17, 4, 1, "", "explanation_type"], [17, 3, 1, "", "fit"]], "omnixai.explainers.timeseries": [[19, 0, 0, "-", "agnostic"], [18, 0, 0, "-", "auto"], [20, 0, 0, "-", "counterfactual"]], "omnixai.explainers.timeseries.agnostic": [[19, 0, 0, "-", "shap"]], "omnixai.explainers.timeseries.agnostic.shap": [[19, 1, 1, "", "ShapTimeseries"]], "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries": [[19, 4, 1, "", "alias"], [19, 3, 1, "", "explain"], [19, 4, 1, "", "explanation_type"]], "omnixai.explainers.timeseries.auto": [[18, 1, 1, "", "TimeseriesExplainer"]], "omnixai.explainers.timeseries.auto.TimeseriesExplainer": [[18, 3, 1, "", "list_explainers"]], "omnixai.explainers.timeseries.counterfactual": [[20, 0, 0, "-", "ce"], [20, 0, 0, "-", "mace"]], "omnixai.explainers.timeseries.counterfactual.ce": [[20, 1, 1, "", "CounterfactualExplainer"], [20, 1, 1, "", "CounterfactualOptimizer"]], "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer": [[20, 4, 1, "", "alias"], [20, 3, 1, "", "explain"], [20, 4, 1, "", "explanation_type"]], "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualOptimizer": [[20, 3, 1, "", "optimize"]], "omnixai.explainers.timeseries.counterfactual.mace": [[20, 1, 1, "", "MACEExplainer"]], "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer": [[20, 4, 1, "", "alias"], [20, 3, 1, "", "explain"], [20, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision": [[22, 0, 0, "-", "agnostic"], [21, 0, 0, "-", "auto"], [23, 0, 0, "-", "counterfactual"], [24, 0, 0, "-", "specific"]], "omnixai.explainers.vision.agnostic": [[22, 0, 0, "-", "l2x"], [22, 0, 0, "-", "lime"], [22, 0, 0, "-", "pdp"], [22, 0, 0, "-", "shap"]], "omnixai.explainers.vision.agnostic.l2x": [[22, 1, 1, "", "DefaultPredictionModel"], [22, 1, 1, "", "DefaultSelectionModel"], [22, 1, 1, "", "L2XImage"]], "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel": [[22, 3, 1, "", "forward"], [22, 4, 1, "", "training"]], "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel": [[22, 3, 1, "", "forward"], [22, 3, 1, "", "postprocess"], [22, 4, 1, "", "training"]], "omnixai.explainers.vision.agnostic.l2x.L2XImage": [[22, 4, 1, "", "alias"], [22, 3, 1, "", "explain"], [22, 4, 1, "", "explanation_type"], [22, 3, 1, "", "save"]], "omnixai.explainers.vision.agnostic.lime": [[22, 1, 1, "", "LimeImage"]], "omnixai.explainers.vision.agnostic.lime.LimeImage": [[22, 4, 1, "", "alias"], [22, 3, 1, "", "explain"], [22, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.agnostic.pdp": [[22, 1, 1, "", "PartialDependenceImage"]], "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage": [[22, 4, 1, "", "alias"], [22, 3, 1, "", "explain"], [22, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.agnostic.shap": [[22, 1, 1, "", "ShapImage"]], "omnixai.explainers.vision.agnostic.shap.ShapImage": [[22, 4, 1, "", "alias"], [22, 3, 1, "", "explain"], [22, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.auto": [[21, 1, 1, "", "VisionExplainer"]], "omnixai.explainers.vision.auto.VisionExplainer": [[21, 3, 1, "", "list_explainers"]], "omnixai.explainers.vision.counterfactual": [[23, 0, 0, "-", "ce"]], "omnixai.explainers.vision.counterfactual.ce": [[23, 1, 1, "", "CounterfactualExplainer"]], "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer": [[23, 4, 1, "", "alias"], [23, 3, 1, "", "explain"], [23, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific": [[24, 0, 0, "-", "cem"], [24, 0, 0, "-", "guided_bp"], [24, 0, 0, "-", "ig"], [24, 0, 0, "-", "smoothgrad"]], "omnixai.explainers.vision.specific.cem": [[24, 1, 1, "", "CEMOptimizer"], [24, 1, 1, "", "ContrastiveExplainer"]], "omnixai.explainers.vision.specific.cem.CEMOptimizer": [[24, 3, 1, "", "pn_optimize"], [24, 3, 1, "", "pp_optimize"]], "omnixai.explainers.vision.specific.cem.ContrastiveExplainer": [[24, 4, 1, "", "alias"], [24, 3, 1, "", "explain"], [24, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.feature_visualization": [[24, 0, 0, "-", "visualizer"]], "omnixai.explainers.vision.specific.feature_visualization.visualizer": [[24, 1, 1, "", "FeatureMapVisualizer"], [24, 1, 1, "", "FeatureVisualizer"]], "omnixai.explainers.vision.specific.feature_visualization.visualizer.FeatureMapVisualizer": [[24, 4, 1, "", "alias"], [24, 3, 1, "", "explain"], [24, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.feature_visualization.visualizer.FeatureVisualizer": [[24, 4, 1, "", "alias"], [24, 3, 1, "", "explain"], [24, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.gradcam": [[24, 0, 0, "-", "gradcam"]], "omnixai.explainers.vision.specific.gradcam.gradcam": [[24, 1, 1, "", "GradCAM"], [24, 1, 1, "", "GradCAMPlus"], [24, 1, 1, "", "LayerCAM"]], "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM": [[24, 4, 1, "", "alias"], [24, 3, 1, "", "explain"], [24, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus": [[24, 4, 1, "", "alias"], [24, 3, 1, "", "explain"], [24, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.gradcam.gradcam.LayerCAM": [[24, 4, 1, "", "alias"], [24, 3, 1, "", "explain"], [24, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.guided_bp": [[24, 1, 1, "", "GuidedBP"]], "omnixai.explainers.vision.specific.guided_bp.GuidedBP": [[24, 4, 1, "", "alias"], [24, 3, 1, "", "explain"], [24, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.ig": [[24, 1, 1, "", "IntegratedGradientImage"]], "omnixai.explainers.vision.specific.ig.IntegratedGradientImage": [[24, 4, 1, "", "alias"], [24, 3, 1, "", "explain"], [24, 4, 1, "", "explanation_type"]], "omnixai.explainers.vision.specific.smoothgrad": [[24, 1, 1, "", "SmoothGrad"]], "omnixai.explainers.vision.specific.smoothgrad.SmoothGrad": [[24, 4, 1, "", "alias"], [24, 3, 1, "", "explain"], [24, 4, 1, "", "explanation_type"]], "omnixai.explanations": [[25, 0, 0, "-", "base"], [26, 0, 0, "-", "image"], [27, 0, 0, "-", "tabular"], [28, 0, 0, "-", "text"], [29, 0, 0, "-", "timeseries"]], "omnixai.explanations.base": [[25, 1, 1, "", "DashFigure"], [25, 1, 1, "", "ExplanationBase"], [25, 1, 1, "", "PredictedResults"]], "omnixai.explanations.base.DashFigure": [[25, 3, 1, "", "show"], [25, 3, 1, "", "to_html"], [25, 3, 1, "", "to_html_div"]], "omnixai.explanations.base.ExplanationBase": [[25, 3, 1, "", "dump"], [25, 3, 1, "", "dumps"], [25, 3, 1, "", "from_dict"], [25, 3, 1, "", "from_json"], [25, 3, 1, "", "get_explanations"], [25, 3, 1, "", "ipython_plot"], [25, 3, 1, "", "load"], [25, 3, 1, "", "loads"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "plotly_plot"], [25, 3, 1, "", "to_json"]], "omnixai.explanations.base.PredictedResults": [[25, 3, 1, "", "from_dict"], [25, 3, 1, "", "get_explanations"], [25, 3, 1, "", "ipython_plot"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image": [[26, 0, 0, "-", "contrast"], [26, 0, 0, "-", "counterfactual"], [26, 0, 0, "-", "mask"], [26, 0, 0, "-", "pixel_importance"]], "omnixai.explanations.image.contrast": [[26, 1, 1, "", "ContrastiveExplanation"]], "omnixai.explanations.image.contrast.ContrastiveExplanation": [[26, 3, 1, "", "add"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "get_explanations"], [26, 3, 1, "", "ipython_plot"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image.counterfactual": [[26, 1, 1, "", "CFExplanation"]], "omnixai.explanations.image.counterfactual.CFExplanation": [[26, 3, 1, "", "add"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "get_explanations"], [26, 3, 1, "", "ipython_plot"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image.mask": [[26, 1, 1, "", "MaskExplanation"]], "omnixai.explanations.image.mask.MaskExplanation": [[26, 3, 1, "", "add"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "get_explanations"], [26, 3, 1, "", "ipython_plot"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plotly_plot"]], "omnixai.explanations.image.pixel_importance": [[26, 1, 1, "", "PixelImportance"]], "omnixai.explanations.image.pixel_importance.PixelImportance": [[26, 3, 1, "", "add"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "get_explanations"], [26, 3, 1, "", "ipython_plot"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular": [[27, 0, 0, "-", "correlation"], [27, 0, 0, "-", "counterfactual"], [27, 0, 0, "-", "feature_importance"], [27, 0, 0, "-", "imbalance"], [27, 0, 0, "-", "linear"], [27, 0, 0, "-", "pdp"], [27, 0, 0, "-", "sensitivity"], [27, 0, 0, "-", "tree"], [27, 0, 0, "-", "validity"]], "omnixai.explanations.tabular.correlation": [[27, 1, 1, "", "CorrelationExplanation"]], "omnixai.explanations.tabular.correlation.CorrelationExplanation": [[27, 3, 1, "", "add"], [27, 3, 1, "", "from_dict"], [27, 3, 1, "", "get_explanations"], [27, 3, 1, "", "ipython_plot"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.counterfactual": [[27, 1, 1, "", "CFExplanation"]], "omnixai.explanations.tabular.counterfactual.CFExplanation": [[27, 3, 1, "", "add"], [27, 3, 1, "", "from_dict"], [27, 3, 1, "", "get_explanations"], [27, 3, 1, "", "ipython_plot"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.feature_importance": [[27, 1, 1, "", "FeatureImportance"], [27, 1, 1, "", "GlobalFeatureImportance"]], "omnixai.explanations.tabular.feature_importance.FeatureImportance": [[27, 3, 1, "", "add"], [27, 3, 1, "", "from_dict"], [27, 3, 1, "", "get_explanations"], [27, 3, 1, "", "ipython_plot"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance": [[27, 3, 1, "", "add"], [27, 3, 1, "", "from_dict"], [27, 3, 1, "", "get_explanations"], [27, 3, 1, "", "ipython_plot"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.imbalance": [[27, 1, 1, "", "ImbalanceExplanation"]], "omnixai.explanations.tabular.imbalance.ImbalanceExplanation": [[27, 3, 1, "", "add"], [27, 3, 1, "", "from_dict"], [27, 3, 1, "", "get_explanations"], [27, 3, 1, "", "ipython_plot"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.linear": [[27, 1, 1, "", "LinearExplanation"]], "omnixai.explanations.tabular.linear.LinearExplanation": [[27, 3, 1, "", "add"], [27, 3, 1, "", "from_dict"], [27, 3, 1, "", "get_explanations"], [27, 3, 1, "", "ipython_plot"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.pdp": [[27, 1, 1, "", "PDPExplanation"]], "omnixai.explanations.tabular.pdp.PDPExplanation": [[27, 3, 1, "", "add"], [27, 3, 1, "", "from_dict"], [27, 3, 1, "", "get_explanations"], [27, 3, 1, "", "ipython_plot"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.sensitivity": [[27, 1, 1, "", "SensitivityExplanation"]], "omnixai.explanations.tabular.sensitivity.SensitivityExplanation": [[27, 3, 1, "", "add"], [27, 3, 1, "", "from_dict"], [27, 3, 1, "", "get_explanations"], [27, 3, 1, "", "ipython_plot"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "plotly_plot"]], "omnixai.explanations.tabular.tree": [[27, 1, 1, "", "TreeExplanation"]], "omnixai.explanations.tabular.tree.TreeExplanation": [[27, 3, 1, "", "add_global"], [27, 3, 1, "", "add_local"], [27, 3, 1, "", "from_dict"], [27, 3, 1, "", "get_explanations"], [27, 3, 1, "", "ipython_plot"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "plotly_plot"], [27, 3, 1, "", "to_json"]], "omnixai.explanations.tabular.validity": [[27, 1, 1, "", "ValidityRankingExplanation"]], "omnixai.explanations.tabular.validity.ValidityRankingExplanation": [[27, 3, 1, "", "add"], [27, 3, 1, "", "from_dict"], [27, 3, 1, "", "get_explanations"], [27, 3, 1, "", "ipython_plot"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "plotly_plot"], [27, 3, 1, "", "rearrange_columns"]], "omnixai.explanations.text": [[28, 0, 0, "-", "word_importance"]], "omnixai.explanations.text.word_importance": [[28, 1, 1, "", "WordImportance"]], "omnixai.explanations.text.word_importance.WordImportance": [[28, 3, 1, "", "add"], [28, 3, 1, "", "from_dict"], [28, 3, 1, "", "get_explanations"], [28, 3, 1, "", "ipython_plot"], [28, 3, 1, "", "plot"], [28, 3, 1, "", "plotly_plot"]], "omnixai.explanations.timeseries": [[29, 0, 0, "-", "counterfactual"], [29, 0, 0, "-", "feature_importance"]], "omnixai.explanations.timeseries.counterfactual": [[29, 1, 1, "", "CFExplanation"]], "omnixai.explanations.timeseries.counterfactual.CFExplanation": [[29, 3, 1, "", "add"], [29, 3, 1, "", "from_dict"], [29, 3, 1, "", "get_explanations"], [29, 3, 1, "", "ipython_plot"], [29, 3, 1, "", "plot"], [29, 3, 1, "", "plotly_plot"], [29, 3, 1, "", "to_json"]], "omnixai.explanations.timeseries.feature_importance": [[29, 1, 1, "", "FeatureImportance"]], "omnixai.explanations.timeseries.feature_importance.FeatureImportance": [[29, 3, 1, "", "add"], [29, 3, 1, "", "from_dict"], [29, 3, 1, "", "get_explanations"], [29, 3, 1, "", "ipython_plot"], [29, 3, 1, "", "plot"], [29, 3, 1, "", "plotly_plot"], [29, 3, 1, "", "to_json"]], "omnixai.preprocessing": [[30, 0, 0, "-", "base"], [30, 0, 0, "-", "encode"], [30, 0, 0, "-", "fill"], [30, 0, 0, "-", "image"], [30, 0, 0, "-", "normalize"], [30, 0, 0, "-", "pipeline"], [30, 0, 0, "-", "tabular"], [30, 0, 0, "-", "text"]], "omnixai.preprocessing.base": [[30, 1, 1, "", "Identity"], [30, 1, 1, "", "TransformBase"]], "omnixai.preprocessing.base.Identity": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.base.TransformBase": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.encode": [[30, 1, 1, "", "KBins"], [30, 1, 1, "", "LabelEncoder"], [30, 1, 1, "", "OneHot"], [30, 1, 1, "", "Ordinal"]], "omnixai.preprocessing.encode.KBins": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.encode.LabelEncoder": [[30, 2, 1, "", "categories"], [30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.encode.OneHot": [[30, 2, 1, "", "categories"], [30, 3, 1, "", "fit"], [30, 3, 1, "", "get_feature_names"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.encode.Ordinal": [[30, 2, 1, "", "categories"], [30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.fill": [[30, 1, 1, "", "FillNaN"], [30, 1, 1, "", "FillNaNTabular"]], "omnixai.preprocessing.fill.FillNaN": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.fill.FillNaNTabular": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.image": [[30, 1, 1, "", "Normalize"], [30, 1, 1, "", "Resize"], [30, 1, 1, "", "Round2Int"], [30, 1, 1, "", "Scale"]], "omnixai.preprocessing.image.Normalize": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.image.Resize": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.image.Round2Int": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.image.Scale": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.normalize": [[30, 1, 1, "", "MinMax"], [30, 1, 1, "", "Scale"], [30, 1, 1, "", "Standard"]], "omnixai.preprocessing.normalize.MinMax": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.normalize.Scale": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.normalize.Standard": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.pipeline": [[30, 1, 1, "", "Pipeline"]], "omnixai.preprocessing.pipeline.Pipeline": [[30, 3, 1, "", "dump"], [30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "load"], [30, 4, 1, "", "name"], [30, 3, 1, "", "step"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.tabular": [[30, 1, 1, "", "TabularTransform"]], "omnixai.preprocessing.tabular.TabularTransform": [[30, 2, 1, "", "categories"], [30, 2, 1, "", "class_names"], [30, 3, 1, "", "decompose"], [30, 3, 1, "", "fit"], [30, 3, 1, "", "get_feature_names"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.text": [[30, 1, 1, "", "Tfidf"], [30, 1, 1, "", "Word2Id"]], "omnixai.preprocessing.text.Tfidf": [[30, 3, 1, "", "fit"], [30, 3, 1, "", "get_feature_names"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"]], "omnixai.preprocessing.text.Word2Id": [[30, 4, 1, "", "PAD"], [30, 4, 1, "", "START"], [30, 4, 1, "", "UNK"], [30, 3, 1, "", "fit"], [30, 3, 1, "", "invert"], [30, 3, 1, "", "transform"], [30, 2, 1, "", "vocab_size"]], "omnixai.sampler": [[30, 0, 0, "-", "tabular"]], "omnixai.sampler.tabular": [[30, 1, 1, "", "Sampler"]], "omnixai.sampler.tabular.Sampler": [[30, 3, 1, "", "oversample"], [30, 3, 1, "", "subsample"], [30, 3, 1, "", "undersample"]], "omnixai.visualization": [[31, 0, 0, "-", "dashboard"]], "omnixai.visualization.dashboard": [[31, 1, 1, "", "Dashboard"]], "omnixai.visualization.dashboard.Dashboard": [[31, 3, 1, "", "show"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "omnixai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 45], "": 0, "document": 0, "introduct": [0, 1], "capabl": 0, "featur": [0, 33, 68, 69, 70, 71], "comparison": 0, "competitor": 0, "instal": [0, 1], "get": [0, 1], "start": [0, 1], "how": [0, 1], "contribut": [0, 1], "content": 0, "indic": 0, "tabl": 0, "an": 1, "explan": [1, 25, 26, 27, 28, 29, 37, 38, 47, 51, 60, 63, 64, 65, 66, 67], "toolbox": 1, "librari": 1, "design": 1, "more": 1, "exampl": [1, 32, 34, 35], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "differ": [1, 4], "data": [1, 2, 5, 34, 35], "type": 1, "preprocess": [1, 30, 35], "function": 1, "support": 1, "method": 1, "result": [1, 25], "dashboard": [1, 31], "visual": [1, 24, 31, 68, 69, 70, 71, 74, 77], "explain": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 41, 48, 78], "deploy": [1, 3], "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "base": [2, 4, 14, 25, 30], "tabular": [2, 14, 15, 16, 17, 27, 30, 32, 34, 35], "imag": [2, 26, 30, 34, 35, 62, 72, 73, 75, 76, 79], "text": [2, 28, 30, 34, 35, 37, 41, 42], "timeseri": [2, 18, 19, 20, 29, 32], "bentoml": 3, "task": [4, 74, 77], "auto": [5, 6, 14, 18, 21], "correl": [5, 27], "imbal": [5, 27], "mutual_info": 5, "chi_squar": 5, "nlp": [6, 7, 8, 9, 32], "subpackag": [6, 11, 14, 18, 21], "agnost": [7, 12, 15, 19, 22], "lime": [7, 15, 22, 42, 49, 79], "shap": [7, 15, 19, 22, 43, 55, 61, 80], "l2x": [7, 15, 22, 41, 48, 78], "counterfactu": [8, 13, 16, 20, 23, 26, 27, 29, 37, 38, 47, 51, 60, 63, 64, 65], "polyjuic": 8, "specif": [9, 17, 24], "ig": [9, 17, 24], "predict": [10, 48, 49, 50, 51, 55, 56, 57, 58], "rank": [11, 12, 13, 53], "valid": [12, 27], "permut": [12, 15], "mace": [13, 16, 20, 51], "pdp": [15, 22, 27, 52], "al": [15, 46], "sensit": [15, 27, 54], "shap_glob": 15, "ce": [16, 20, 23], "linear": [17, 27], "decision_tre": 17, "shap_tre": 17, "vision": [21, 22, 23, 24, 32], "gradcam": 24, "cem": 24, "feature_visu": 24, "guided_bp": 24, "smoothgrad": 24, "three": 25, "categori": 25, "pixel_import": 26, "mask": 26, "contrast": [26, 66, 67], "feature_import": [27, 29], "tree": [27, 56], "word_import": 28, "encod": 30, "normal": 30, "fill": 30, "pipelin": 30, "sampler": 30, "tutori": 32, "code": 32, "basic": 32, "applic": 32, "dataanalyz": 33, "analysi": [33, 36, 43, 54], "object": 34, "time": [34, 59, 60, 61], "seri": [34, 59, 60, 61], "nlpexplain": [36, 44], "sentiment": [36, 43], "classif": [37, 41, 42, 57, 62, 72, 73, 75, 76, 79], "question": 38, "answer": 38, "integr": [39, 40, 75, 76, 77], "gradient": [39, 40, 75, 76, 77], "imdb": [39, 40, 44], "dataset": [39, 40, 44, 47], "tensorflow": [39, 64, 66, 68, 70, 72, 75], "pytorch": [40, 65, 67, 69, 71, 73, 76], "learn": [41, 48, 53, 78], "ml": 45, "workflow": 45, "accumul": 46, "local": 46, "effect": 46, "diabet": 47, "incom": [48, 49, 50, 51, 55, 56, 57], "logist": 50, "regress": [50, 58], "pariti": 52, "depend": 52, "plot": 52, "expan": 53, "demo": 53, "morri": 54, "decis": 56, "tabularexplain": [57, 58], "hous": 58, "price": 58, "timeseriesexplain": 59, "anomali": [59, 60, 61], "detect": [59, 60, 61], "visionexplain": 62, "imagenet": 63, "mnist": [64, 65, 66, 67, 78, 80], "map": [68, 69], "grad": [72, 73, 74], "cam": [72, 73, 74], "languag": [74, 77]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 3, "sphinx": 57}, "alltitles": {"Welcome to OmniXAI\u2019s documentation!": [[0, "welcome-to-omnixai-s-documentation"]], "Introduction": [[0, "introduction"], [1, "introduction"]], "Capabilities and Features": [[0, "capabilities-and-features"]], "Comparison with Competitors": [[0, "comparison-with-competitors"]], "Installation": [[0, "installation"], [1, "installation"]], "Getting Started": [[0, "getting-started"], [1, "getting-started"]], "How to Contribute": [[0, "how-to-contribute"], [1, "how-to-contribute"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "OmniXAI: An Explanation Toolbox": [[1, "omnixai-an-explanation-toolbox"]], "Library Design": [[1, "library-design"]], "More Examples": [[1, "more-examples"]], "Modules for Different Data Types": [[1, "modules-for-different-data-types"]], "Preprocessing Functions": [[1, "preprocessing-functions"]], "Supported Explanation Methods": [[1, "supported-explanation-methods"]], "Modules for Explanation Results": [[1, "modules-for-explanation-results"]], "Dashboard for Visualization": [[1, "dashboard-for-visualization"]], "Explainer Deployment": [[1, "explainer-deployment"]], "omnixai.data package": [[2, "module-omnixai.data"]], "omnixai.data.base module": [[2, "module-omnixai.data.base"]], "omnixai.data.tabular module": [[2, "module-omnixai.data.tabular"]], "omnixai.data.image module": [[2, "module-omnixai.data.image"]], "omnixai.data.text module": [[2, "module-omnixai.data.text"]], "omnixai.data.timeseries module": [[2, "module-omnixai.data.timeseries"]], "omnixai.deployment package": [[3, "module-omnixai.deployment"]], "omnixai.deployment.bentoml module": [[3, "module-omnixai.deployment.bentoml"]], "omnixai.explainers package": [[4, "omnixai-explainers-package"]], "omnixai.explainers.base module": [[4, "module-omnixai.explainers.base"]], "Explainers for different tasks": [[4, "explainers-for-different-tasks"]], "omnixai.explainers.data package": [[5, "module-omnixai.explainers.data"]], "omnixai.explainers.data.auto module": [[5, "module-omnixai.explainers.data.auto"]], "omnixai.explainers.data.correlation module": [[5, "module-omnixai.explainers.data.correlation"]], "omnixai.explainers.data.imbalance module": [[5, "module-omnixai.explainers.data.imbalance"]], "omnixai.explainers.data.mutual_info module": [[5, "module-omnixai.explainers.data.mutual_info"]], "omnixai.explainers.data.chi_square module": [[5, "module-omnixai.explainers.data.chi_square"]], "omnixai.explainers.nlp package": [[6, "omnixai-explainers-nlp-package"]], "omnixai.explainers.nlp.auto module": [[6, "module-omnixai.explainers.nlp.auto"]], "Subpackages": [[6, "subpackages"], [11, "subpackages"], [14, "subpackages"], [18, "subpackages"], [21, "subpackages"]], "omnixai.explainers.nlp.agnostic package": [[7, "module-omnixai.explainers.nlp.agnostic"]], "omnixai.explainers.nlp.agnostic.lime module": [[7, "module-omnixai.explainers.nlp.agnostic.lime"]], "omnixai.explainers.nlp.agnostic.shap module": [[7, "module-omnixai.explainers.nlp.agnostic.shap"]], "omnixai.explainers.nlp.agnostic.l2x module": [[7, "module-omnixai.explainers.nlp.agnostic.l2x"]], "omnixai.explainers.nlp.counterfactual package": [[8, "module-omnixai.explainers.nlp.counterfactual"]], "omnixai.explainers.nlp.counterfactual.polyjuice module": [[8, "module-omnixai.explainers.nlp.counterfactual.polyjuice"]], "omnixai.explainers.nlp.specific package": [[9, "module-omnixai.explainers.nlp.specific"]], "omnixai.explainers.nlp.specific.ig module": [[9, "module-omnixai.explainers.nlp.specific.ig"]], "omnixai.explainers.prediction package": [[10, "module-omnixai.explainers.prediction"]], "omnixai.explainers.ranking package": [[11, "omnixai-explainers-ranking-package"]], "omnixai.explainers.ranking.agnostic package": [[12, "module-omnixai.explainers.ranking.agnostic"]], "omnixai.explainers.ranking.agnostic.validity module": [[12, "module-omnixai.explainers.ranking.agnostic.validity"]], "omnixai.explainers.ranking.agnostic.permutation module": [[12, "module-omnixai.explainers.ranking.agnostic.permutation"]], "omnixai.explainers.ranking.counterfactual package": [[13, "module-omnixai.explainers.ranking.counterfactual"]], "omnixai.explainers.ranking.counterfactual.mace module": [[13, "module-omnixai.explainers.ranking.counterfactual.mace"]], "omnixai.explainers.tabular package": [[14, "omnixai-explainers-tabular-package"]], "omnixai.explainers.tabular.base module": [[14, "module-omnixai.explainers.tabular.base"]], "omnixai.explainers.tabular.auto module": [[14, "module-omnixai.explainers.tabular.auto"]], "omnixai.explainers.tabular.agnostic package": [[15, "module-omnixai.explainers.tabular.agnostic"]], "omnixai.explainers.tabular.agnostic.lime module": [[15, "module-omnixai.explainers.tabular.agnostic.lime"]], "omnixai.explainers.tabular.agnostic.shap module": [[15, "module-omnixai.explainers.tabular.agnostic.shap"]], "omnixai.explainers.tabular.agnostic.pdp module": [[15, "module-omnixai.explainers.tabular.agnostic.pdp"]], "omnixai.explainers.tabular.agnostic.ale module": [[15, "module-omnixai.explainers.tabular.agnostic.ale"]], "omnixai.explainers.tabular.agnostic.sensitivity module": [[15, "module-omnixai.explainers.tabular.agnostic.sensitivity"]], "omnixai.explainers.tabular.agnostic.L2X.l2x module": [[15, "module-omnixai.explainers.tabular.agnostic.L2X.l2x"]], "omnixai.explainers.tabular.agnostic.permutation module": [[15, "module-omnixai.explainers.tabular.agnostic.permutation"]], "omnixai.explainers.tabular.agnostic.shap_global module": [[15, "module-omnixai.explainers.tabular.agnostic.shap_global"]], "omnixai.explainers.tabular.counterfactual package": [[16, "module-omnixai.explainers.tabular.counterfactual"]], "omnixai.explainers.tabular.counterfactual.mace.mace module": [[16, "module-omnixai.explainers.tabular.counterfactual.mace.mace"]], "omnixai.explainers.tabular.counterfactual.ce module": [[16, "module-omnixai.explainers.tabular.counterfactual.ce"]], "omnixai.explainers.tabular.specific package": [[17, "module-omnixai.explainers.tabular.specific"]], "omnixai.explainers.tabular.specific.ig module": [[17, "module-omnixai.explainers.tabular.specific.ig"]], "omnixai.explainers.tabular.specific.linear module": [[17, "module-omnixai.explainers.tabular.specific.linear"]], "omnixai.explainers.tabular.specific.decision_tree module": [[17, "module-omnixai.explainers.tabular.specific.decision_tree"]], "omnixai.explainers.tabular.specific.shap_tree module": [[17, "module-omnixai.explainers.tabular.specific.shap_tree"]], "omnixai.explainers.timeseries package": [[18, "omnixai-explainers-timeseries-package"]], "omnixai.explainers.timeseries.auto module": [[18, "module-omnixai.explainers.timeseries.auto"]], "omnixai.explainers.timeseries.agnostic package": [[19, "module-omnixai.explainers.timeseries.agnostic"]], "omnixai.explainers.timeseries.agnostic.shap module": [[19, "module-omnixai.explainers.timeseries.agnostic.shap"]], "omnixai.explainers.timeseries.counterfactual package": [[20, "module-omnixai.explainers.timeseries.counterfactual"]], "omnixai.explainers.timeseries.counterfactual.ce module": [[20, "module-omnixai.explainers.timeseries.counterfactual.ce"]], "omnixai.explainers.timeseries.counterfactual.mace module": [[20, "module-omnixai.explainers.timeseries.counterfactual.mace"]], "omnixai.explainers.vision package": [[21, "omnixai-explainers-vision-package"]], "omnixai.explainers.vision.auto module": [[21, "module-omnixai.explainers.vision.auto"]], "omnixai.explainers.vision.agnostic package": [[22, "module-omnixai.explainers.vision.agnostic"]], "omnixai.explainers.vision.agnostic.lime module": [[22, "module-omnixai.explainers.vision.agnostic.lime"]], "omnixai.explainers.vision.agnostic.shap module": [[22, "module-omnixai.explainers.vision.agnostic.shap"]], "omnixai.explainers.vision.agnostic.pdp module": [[22, "module-omnixai.explainers.vision.agnostic.pdp"]], "omnixai.explainers.vision.agnostic.l2x module": [[22, "module-omnixai.explainers.vision.agnostic.l2x"]], "omnixai.explainers.vision.counterfactual package": [[23, "module-omnixai.explainers.vision.counterfactual"]], "omnixai.explainers.vision.counterfactual.ce module": [[23, "module-omnixai.explainers.vision.counterfactual.ce"]], "omnixai.explainers.vision.specific package": [[24, "module-omnixai.explainers.vision.specific"]], "omnixai.explainers.vision.specific.ig module": [[24, "module-omnixai.explainers.vision.specific.ig"]], "omnixai.explainers.vision.specific.gradcam.gradcam module": [[24, "module-omnixai.explainers.vision.specific.gradcam.gradcam"]], "omnixai.explainers.vision.specific.cem module": [[24, "module-omnixai.explainers.vision.specific.cem"]], "omnixai.explainers.vision.specific.feature_visualization.visualizer module": [[24, "module-omnixai.explainers.vision.specific.feature_visualization.visualizer"]], "omnixai.explainers.vision.specific.guided_bp module": [[24, "module-omnixai.explainers.vision.specific.guided_bp"]], "omnixai.explainers.vision.specific.smoothgrad module": [[24, "module-omnixai.explainers.vision.specific.smoothgrad"]], "omnixai.explanations package": [[25, "module-omnixai.explanations"]], "Three categories of explanation results": [[25, "three-categories-of-explanation-results"]], "omnixai.explanations.base module": [[25, "module-omnixai.explanations.base"]], "omnixai.explanations.image package": [[26, "module-omnixai.explanations.image"]], "omnixai.explanations.image.pixel_importance module": [[26, "module-omnixai.explanations.image.pixel_importance"]], "omnixai.explanations.image.mask module": [[26, "module-omnixai.explanations.image.mask"]], "omnixai.explanations.image.contrast module": [[26, "module-omnixai.explanations.image.contrast"]], "omnixai.explanations.image.counterfactual module": [[26, "module-omnixai.explanations.image.counterfactual"]], "omnixai.explanations.tabular package": [[27, "module-omnixai.explanations.tabular"]], "omnixai.explanations.tabular.feature_importance module": [[27, "module-omnixai.explanations.tabular.feature_importance"]], "omnixai.explanations.tabular.counterfactual module": [[27, "module-omnixai.explanations.tabular.counterfactual"]], "omnixai.explanations.tabular.pdp module": [[27, "module-omnixai.explanations.tabular.pdp"]], "omnixai.explanations.tabular.sensitivity module": [[27, "module-omnixai.explanations.tabular.sensitivity"]], "omnixai.explanations.tabular.linear module": [[27, "module-omnixai.explanations.tabular.linear"]], "omnixai.explanations.tabular.tree module": [[27, "module-omnixai.explanations.tabular.tree"]], "omnixai.explanations.tabular.correlation module": [[27, "module-omnixai.explanations.tabular.correlation"]], "omnixai.explanations.tabular.imbalance module": [[27, "module-omnixai.explanations.tabular.imbalance"]], "omnixai.explanations.tabular.validity module": [[27, "module-omnixai.explanations.tabular.validity"]], "omnixai.explanations.text package": [[28, "module-omnixai.explanations.text"]], "omnixai.explanations.text.word_importance module": [[28, "module-omnixai.explanations.text.word_importance"]], "omnixai.explanations.timeseries package": [[29, "module-omnixai.explanations.timeseries"]], "omnixai.explanations.timeseries.feature_importance module": [[29, "module-omnixai.explanations.timeseries.feature_importance"]], "omnixai.explanations.timeseries.counterfactual module": [[29, "module-omnixai.explanations.timeseries.counterfactual"]], "omnixai.preprocessing package": [[30, "module-omnixai.preprocessing"]], "omnixai.preprocessing.base module": [[30, "module-omnixai.preprocessing.base"]], "omnixai.preprocessing.encode module": [[30, "module-omnixai.preprocessing.encode"]], "omnixai.preprocessing.normalize module": [[30, "module-omnixai.preprocessing.normalize"]], "omnixai.preprocessing.fill module": [[30, "module-omnixai.preprocessing.fill"]], "omnixai.preprocessing.pipeline module": [[30, "module-omnixai.preprocessing.pipeline"]], "omnixai.preprocessing.tabular module": [[30, "module-omnixai.preprocessing.tabular"]], "omnixai.preprocessing.image module": [[30, "module-omnixai.preprocessing.image"]], "omnixai.preprocessing.text module": [[30, "module-omnixai.preprocessing.text"]], "omnixai.sampler.tabular module": [[30, "module-omnixai.sampler.tabular"]], "omnixai.visualization package": [[31, "module-omnixai.visualization"]], "omnixai.visualization.dashboard module": [[31, "module-omnixai.visualization.dashboard"]], "Tutorials & Example Code": [[32, "tutorials-example-code"]], "Basics": [[32, "basics"]], "Applications": [[32, "applications"]], "Tabular Explainers": [[32, "tabular-explainers"]], "Vision Explainers": [[32, "vision-explainers"]], "NLP Explainers": [[32, "nlp-explainers"]], "Timeseries Explainers": [[32, "timeseries-explainers"]], "DataAnalyzer for feature analysis": [[33, "DataAnalyzer-for-feature-analysis"]], "Examples of data objects": [[34, "Examples-of-data-objects"]], "Tabular data": [[34, "Tabular-data"], [35, "Tabular-data"]], "Image data": [[34, "Image-data"], [35, "Image-data"]], "Text data": [[34, "Text-data"], [35, "Text-data"]], "Time series data": [[34, "Time-series-data"]], "Examples of data preprocessing": [[35, "Examples-of-data-preprocessing"]], "NLPExplainer for sentiment analysis": [[36, "NLPExplainer-for-sentiment-analysis"]], "Counterfactual explanation for text classification": [[37, "Counterfactual-explanation-for-text-classification"]], "Counterfactual explanation for question answering": [[38, "Counterfactual-explanation-for-question-answering"]], "Integrated-gradient on IMDB dataset (Tensorflow)": [[39, "Integrated-gradient-on-IMDB-dataset-(Tensorflow)"]], "Integrated-gradient on IMDB dataset (PyTorch)": [[40, "Integrated-gradient-on-IMDB-dataset-(PyTorch)"]], "L2X (learning to explain) for text classification": [[41, "L2X-(learning-to-explain)-for-text-classification"]], "LIME for text classification": [[42, "LIME-for-text-classification"]], "SHAP for sentiment analysis": [[43, "SHAP-for-sentiment-analysis"]], "NLPExplainer on IMDB dataset": [[44, "NLPExplainer-on-IMDB-dataset"]], "OmniXAI in a ML workflow": [[45, "OmniXAI-in-a-ML-workflow"]], "Accumulated local effects (ALE)": [[46, "Accumulated-local-effects-(ALE)"]], "Counterfactual explanation on Diabetes dataset": [[47, "Counterfactual-explanation-on-Diabetes-dataset"]], "L2X (learning to explain) for income prediction": [[48, "L2X-(learning-to-explain)-for-income-prediction"]], "LIME for income prediction": [[49, "LIME-for-income-prediction"]], "Logistic regression for income prediction": [[50, "Logistic-regression-for-income-prediction"]], "MACE counterfactual explanation for income prediction": [[51, "MACE-counterfactual-explanation-for-income-prediction"]], "Paritial dependence plots (PDP)": [[52, "Paritial-dependence-plots-(PDP)"]], "Learning to Rank Expanations Demo": [[53, "Learning-to-Rank-Expanations-Demo"]], "Morris sensitivity analysis": [[54, "Morris-sensitivity-analysis"]], "SHAP for income prediction": [[55, "SHAP-for-income-prediction"]], "Decision tree for income prediction": [[56, "Decision-tree-for-income-prediction"]], "TabularExplainer for income prediction (classification)": [[57, "TabularExplainer-for-income-prediction-(classification)"]], "TabularExplainer for house-price prediction (regression)": [[58, "TabularExplainer-for-house-price-prediction-(regression)"]], "TimeseriesExplainer for time series anomaly detection": [[59, "TimeseriesExplainer-for-time-series-anomaly-detection"]], "Counterfactual explanation on time series anomaly detection": [[60, "Counterfactual-explanation-on-time-series-anomaly-detection"]], "SHAP for time series anomaly detection": [[61, "SHAP-for-time-series-anomaly-detection"]], "VisionExplainer for image classification": [[62, "VisionExplainer-for-image-classification"]], "Counterfactual explanation on ImageNet": [[63, "Counterfactual-explanation-on-ImageNet"]], "Counterfactual explanation on MNIST (Tensorflow)": [[64, "Counterfactual-explanation-on-MNIST-(Tensorflow)"]], "Counterfactual explanation on MNIST (PyTorch)": [[65, "Counterfactual-explanation-on-MNIST-(PyTorch)"]], "Contrastive explanation on MNIST (Tensorflow)": [[66, "Contrastive-explanation-on-MNIST-(Tensorflow)"]], "Contrastive explanation on MNIST (PyTorch)": [[67, "Contrastive-explanation-on-MNIST-(PyTorch)"]], "Feature map visualization (Tensorflow)": [[68, "Feature-map-visualization-(Tensorflow)"]], "Feature map visualization (PyTorch)": [[69, "Feature-map-visualization-(PyTorch)"]], "Feature visualization (Tensorflow)": [[70, "Feature-visualization-(Tensorflow)"]], "Feature visualization (PyTorch)": [[71, "Feature-visualization-(PyTorch)"]], "Grad-CAM for image classification (Tensorflow)": [[72, "Grad-CAM-for-image-classification-(Tensorflow)"]], "Grad-CAM for image classification (PyTorch)": [[73, "Grad-CAM-for-image-classification-(PyTorch)"]], "Grad-CAM for visual language tasks": [[74, "Grad-CAM-for-visual-language-tasks"]], "Integrated-gradient for image classification (Tensorflow)": [[75, "Integrated-gradient-for-image-classification-(Tensorflow)"]], "Integrated-gradient for image classification (PyTorch)": [[76, "Integrated-gradient-for-image-classification-(PyTorch)"]], "Integrated-gradient for visual language tasks": [[77, "Integrated-gradient-for-visual-language-tasks"]], "L2X (learning to explain) on MNIST": [[78, "L2X-(learning-to-explain)-on-MNIST"]], "LIME for image classification": [[79, "LIME-for-image-classification"]], "SHAP on MNIST": [[80, "SHAP-on-MNIST"]]}, "indexentries": {"module": [[1, "module-omnixai"], [2, "module-omnixai.data"], [2, "module-omnixai.data.base"], [2, "module-omnixai.data.image"], [2, "module-omnixai.data.tabular"], [2, "module-omnixai.data.text"], [2, "module-omnixai.data.timeseries"], [3, "module-omnixai.deployment"], [3, "module-omnixai.deployment.bentoml"], [4, "module-omnixai.explainers"], [4, "module-omnixai.explainers.base"], [5, "module-omnixai.explainers.data"], [5, "module-omnixai.explainers.data.auto"], [5, "module-omnixai.explainers.data.chi_square"], [5, "module-omnixai.explainers.data.correlation"], [5, "module-omnixai.explainers.data.imbalance"], [5, "module-omnixai.explainers.data.mutual_info"], [6, "module-omnixai.explainers.nlp.auto"], [7, "module-omnixai.explainers.nlp.agnostic"], [7, "module-omnixai.explainers.nlp.agnostic.l2x"], [7, "module-omnixai.explainers.nlp.agnostic.lime"], [7, "module-omnixai.explainers.nlp.agnostic.shap"], [8, "module-omnixai.explainers.nlp.counterfactual"], [8, "module-omnixai.explainers.nlp.counterfactual.polyjuice"], [9, "module-omnixai.explainers.nlp.specific"], [9, "module-omnixai.explainers.nlp.specific.ig"], [10, "module-omnixai.explainers.prediction"], [12, "module-omnixai.explainers.ranking.agnostic"], [12, "module-omnixai.explainers.ranking.agnostic.permutation"], [12, "module-omnixai.explainers.ranking.agnostic.validity"], [13, "module-omnixai.explainers.ranking.counterfactual"], [13, "module-omnixai.explainers.ranking.counterfactual.mace"], [14, "module-omnixai.explainers.tabular.auto"], [14, "module-omnixai.explainers.tabular.base"], [15, "module-omnixai.explainers.tabular.agnostic"], [15, "module-omnixai.explainers.tabular.agnostic.L2X.l2x"], [15, "module-omnixai.explainers.tabular.agnostic.ale"], [15, "module-omnixai.explainers.tabular.agnostic.lime"], [15, "module-omnixai.explainers.tabular.agnostic.pdp"], [15, "module-omnixai.explainers.tabular.agnostic.permutation"], [15, "module-omnixai.explainers.tabular.agnostic.sensitivity"], [15, "module-omnixai.explainers.tabular.agnostic.shap"], [15, "module-omnixai.explainers.tabular.agnostic.shap_global"], [16, "module-omnixai.explainers.tabular.counterfactual"], [16, "module-omnixai.explainers.tabular.counterfactual.ce"], [16, "module-omnixai.explainers.tabular.counterfactual.mace.mace"], [17, "module-omnixai.explainers.tabular.specific"], [17, "module-omnixai.explainers.tabular.specific.decision_tree"], [17, "module-omnixai.explainers.tabular.specific.ig"], [17, "module-omnixai.explainers.tabular.specific.linear"], [17, "module-omnixai.explainers.tabular.specific.shap_tree"], [18, "module-omnixai.explainers.timeseries.auto"], [19, "module-omnixai.explainers.timeseries.agnostic"], [19, "module-omnixai.explainers.timeseries.agnostic.shap"], [20, "module-omnixai.explainers.timeseries.counterfactual"], [20, "module-omnixai.explainers.timeseries.counterfactual.ce"], [20, "module-omnixai.explainers.timeseries.counterfactual.mace"], [21, "module-omnixai.explainers.vision.auto"], [22, "module-omnixai.explainers.vision.agnostic"], [22, "module-omnixai.explainers.vision.agnostic.l2x"], [22, "module-omnixai.explainers.vision.agnostic.lime"], [22, "module-omnixai.explainers.vision.agnostic.pdp"], [22, "module-omnixai.explainers.vision.agnostic.shap"], [23, "module-omnixai.explainers.vision.counterfactual"], [23, "module-omnixai.explainers.vision.counterfactual.ce"], [24, "module-omnixai.explainers.vision.specific"], [24, "module-omnixai.explainers.vision.specific.cem"], [24, "module-omnixai.explainers.vision.specific.feature_visualization.visualizer"], [24, "module-omnixai.explainers.vision.specific.gradcam.gradcam"], [24, "module-omnixai.explainers.vision.specific.guided_bp"], [24, "module-omnixai.explainers.vision.specific.ig"], [24, "module-omnixai.explainers.vision.specific.smoothgrad"], [25, "module-omnixai.explanations"], [25, "module-omnixai.explanations.base"], [26, "module-omnixai.explanations.image"], [26, "module-omnixai.explanations.image.contrast"], [26, "module-omnixai.explanations.image.counterfactual"], [26, "module-omnixai.explanations.image.mask"], [26, "module-omnixai.explanations.image.pixel_importance"], [27, "module-omnixai.explanations.tabular"], [27, "module-omnixai.explanations.tabular.correlation"], [27, "module-omnixai.explanations.tabular.counterfactual"], [27, "module-omnixai.explanations.tabular.feature_importance"], [27, "module-omnixai.explanations.tabular.imbalance"], [27, "module-omnixai.explanations.tabular.linear"], [27, "module-omnixai.explanations.tabular.pdp"], [27, "module-omnixai.explanations.tabular.sensitivity"], [27, "module-omnixai.explanations.tabular.tree"], [27, "module-omnixai.explanations.tabular.validity"], [28, "module-omnixai.explanations.text"], [28, "module-omnixai.explanations.text.word_importance"], [29, "module-omnixai.explanations.timeseries"], [29, "module-omnixai.explanations.timeseries.counterfactual"], [29, "module-omnixai.explanations.timeseries.feature_importance"], [30, "module-omnixai.preprocessing"], [30, "module-omnixai.preprocessing.base"], [30, "module-omnixai.preprocessing.encode"], [30, "module-omnixai.preprocessing.fill"], [30, "module-omnixai.preprocessing.image"], [30, "module-omnixai.preprocessing.normalize"], [30, "module-omnixai.preprocessing.pipeline"], [30, "module-omnixai.preprocessing.tabular"], [30, "module-omnixai.preprocessing.text"], [30, "module-omnixai.sampler.tabular"], [31, "module-omnixai.visualization"], [31, "module-omnixai.visualization.dashboard"]], "omnixai": [[1, "module-omnixai"]], "data (class in omnixai.data.base)": [[2, "omnixai.data.base.Data"]], "image (class in omnixai.data.image)": [[2, "omnixai.data.image.Image"]], "tabular (class in omnixai.data.tabular)": [[2, "omnixai.data.tabular.Tabular"]], "text (class in omnixai.data.text)": [[2, "omnixai.data.text.Text"]], "timeseries (class in omnixai.data.timeseries)": [[2, "omnixai.data.timeseries.Timeseries"]], "categorical_columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.categorical_columns"]], "columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.columns"]], "columns (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.columns"]], "continuous_columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.continuous_columns"]], "copy() (omnixai.data.image.image method)": [[2, "omnixai.data.image.Image.copy"]], "copy() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.copy"]], "copy() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.copy"]], "copy() (omnixai.data.timeseries.timeseries method)": [[2, "omnixai.data.timeseries.Timeseries.copy"]], "data_type (omnixai.data.base.data property)": [[2, "omnixai.data.base.Data.data_type"]], "data_type (omnixai.data.image.image attribute)": [[2, "omnixai.data.image.Image.data_type"]], "data_type (omnixai.data.tabular.tabular attribute)": [[2, "omnixai.data.tabular.Tabular.data_type"]], "data_type (omnixai.data.text.text attribute)": [[2, "omnixai.data.text.Text.data_type"]], "data_type (omnixai.data.timeseries.timeseries attribute)": [[2, "omnixai.data.timeseries.Timeseries.data_type"]], "feature_columns (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.feature_columns"]], "from_pd() (omnixai.data.timeseries.timeseries class method)": [[2, "omnixai.data.timeseries.Timeseries.from_pd"]], "get_continuous_bounds() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.get_continuous_bounds"]], "get_continuous_medians() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.get_continuous_medians"]], "get_target_column() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.get_target_column"]], "get_timestamp_info() (omnixai.data.timeseries.timeseries static method)": [[2, "omnixai.data.timeseries.Timeseries.get_timestamp_info"]], "iloc() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.iloc"]], "image_shape (omnixai.data.image.image property)": [[2, "omnixai.data.image.Image.image_shape"]], "index (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.index"]], "num_samples() (omnixai.data.base.data method)": [[2, "omnixai.data.base.Data.num_samples"]], "num_samples() (omnixai.data.image.image method)": [[2, "omnixai.data.image.Image.num_samples"]], "num_samples() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.num_samples"]], "num_samples() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.num_samples"]], "num_samples() (omnixai.data.timeseries.timeseries method)": [[2, "omnixai.data.timeseries.Timeseries.num_samples"]], "omnixai.data": [[2, "module-omnixai.data"]], "omnixai.data.base": [[2, "module-omnixai.data.base"]], "omnixai.data.image": [[2, "module-omnixai.data.image"]], "omnixai.data.tabular": [[2, "module-omnixai.data.tabular"]], "omnixai.data.text": [[2, "module-omnixai.data.text"]], "omnixai.data.timeseries": [[2, "module-omnixai.data.timeseries"]], "remove_target_column() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.remove_target_column"]], "reset_timestamp_index() (omnixai.data.timeseries.timeseries static method)": [[2, "omnixai.data.timeseries.Timeseries.reset_timestamp_index"]], "restore_timestamp_index() (omnixai.data.timeseries.timeseries static method)": [[2, "omnixai.data.timeseries.Timeseries.restore_timestamp_index"]], "shape (omnixai.data.image.image property)": [[2, "omnixai.data.image.Image.shape"]], "shape (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.shape"]], "shape (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.shape"]], "split() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.split"]], "target_column (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.target_column"]], "to_numpy() (omnixai.data.image.image method)": [[2, "omnixai.data.image.Image.to_numpy"]], "to_numpy() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.to_numpy"]], "to_numpy() (omnixai.data.timeseries.timeseries method)": [[2, "omnixai.data.timeseries.Timeseries.to_numpy"]], "to_pd() (omnixai.data.tabular.tabular method)": [[2, "omnixai.data.tabular.Tabular.to_pd"]], "to_pd() (omnixai.data.timeseries.timeseries method)": [[2, "omnixai.data.timeseries.Timeseries.to_pd"]], "to_pil() (omnixai.data.image.image method)": [[2, "omnixai.data.image.Image.to_pil"]], "to_str() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.to_str"]], "to_tokens() (omnixai.data.text.text method)": [[2, "omnixai.data.text.Text.to_tokens"]], "ts_len (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.ts_len"]], "values (omnixai.data.image.image property)": [[2, "omnixai.data.image.Image.values"]], "values (omnixai.data.tabular.tabular property)": [[2, "omnixai.data.tabular.Tabular.values"]], "values (omnixai.data.text.text property)": [[2, "omnixai.data.text.Text.values"]], "values (omnixai.data.timeseries.timeseries property)": [[2, "omnixai.data.timeseries.Timeseries.values"]], "values() (omnixai.data.base.data method)": [[2, "omnixai.data.base.Data.values"]], "omnixai.deployment": [[3, "module-omnixai.deployment"]], "omnixai.deployment.bentoml": [[3, "module-omnixai.deployment.bentoml"]], "autoexplainerbase (class in omnixai.explainers.base)": [[4, "omnixai.explainers.base.AutoExplainerBase"]], "explainerabcmeta (class in omnixai.explainers.base)": [[4, "omnixai.explainers.base.ExplainerABCMeta"]], "explainerbase (class in omnixai.explainers.base)": [[4, "omnixai.explainers.base.ExplainerBase"]], "explain() (omnixai.explainers.base.autoexplainerbase method)": [[4, "omnixai.explainers.base.AutoExplainerBase.explain"]], "explain() (omnixai.explainers.base.explainerbase method)": [[4, "omnixai.explainers.base.ExplainerBase.explain"]], "explain_global() (omnixai.explainers.base.autoexplainerbase method)": [[4, "omnixai.explainers.base.AutoExplainerBase.explain_global"]], "explainer_names (omnixai.explainers.base.autoexplainerbase property)": [[4, "omnixai.explainers.base.AutoExplainerBase.explainer_names"]], "explanation_type (omnixai.explainers.base.explainerbase property)": [[4, "omnixai.explainers.base.ExplainerBase.explanation_type"]], "list_explainers() (omnixai.explainers.base.autoexplainerbase static method)": [[4, "omnixai.explainers.base.AutoExplainerBase.list_explainers"]], "load() (omnixai.explainers.base.autoexplainerbase class method)": [[4, "omnixai.explainers.base.AutoExplainerBase.load"]], "load() (omnixai.explainers.base.explainerbase class method)": [[4, "omnixai.explainers.base.ExplainerBase.load"]], "omnixai.explainers": [[4, "module-omnixai.explainers"]], "omnixai.explainers.base": [[4, "module-omnixai.explainers.base"]], "parse_explanations_from_json() (omnixai.explainers.base.autoexplainerbase static method)": [[4, "omnixai.explainers.base.AutoExplainerBase.parse_explanations_from_json"]], "predict() (omnixai.explainers.base.autoexplainerbase method)": [[4, "omnixai.explainers.base.AutoExplainerBase.predict"]], "save() (omnixai.explainers.base.autoexplainerbase method)": [[4, "omnixai.explainers.base.AutoExplainerBase.save"]], "save() (omnixai.explainers.base.explainerbase method)": [[4, "omnixai.explainers.base.ExplainerBase.save"]], "chisquare (class in omnixai.explainers.data)": [[5, "omnixai.explainers.data.ChiSquare"]], "chisquare (class in omnixai.explainers.data.chi_square)": [[5, "omnixai.explainers.data.chi_square.ChiSquare"]], "correlationanalyzer (class in omnixai.explainers.data)": [[5, "omnixai.explainers.data.CorrelationAnalyzer"]], "correlationanalyzer (class in omnixai.explainers.data.correlation)": [[5, "omnixai.explainers.data.correlation.CorrelationAnalyzer"]], "dataanalyzer (class in omnixai.explainers.data)": [[5, "omnixai.explainers.data.DataAnalyzer"]], "dataanalyzer (class in omnixai.explainers.data.auto)": [[5, "omnixai.explainers.data.auto.DataAnalyzer"]], "imbalanceanalyzer (class in omnixai.explainers.data)": [[5, "omnixai.explainers.data.ImbalanceAnalyzer"]], "imbalanceanalyzer (class in omnixai.explainers.data.imbalance)": [[5, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer"]], "mutualinformation (class in omnixai.explainers.data)": [[5, "omnixai.explainers.data.MutualInformation"]], "mutualinformation (class in omnixai.explainers.data.mutual_info)": [[5, "omnixai.explainers.data.mutual_info.MutualInformation"]], "alias (omnixai.explainers.data.chisquare attribute)": [[5, "omnixai.explainers.data.ChiSquare.alias"]], "alias (omnixai.explainers.data.correlationanalyzer attribute)": [[5, "omnixai.explainers.data.CorrelationAnalyzer.alias"]], "alias (omnixai.explainers.data.imbalanceanalyzer attribute)": [[5, "omnixai.explainers.data.ImbalanceAnalyzer.alias"]], "alias (omnixai.explainers.data.mutualinformation attribute)": [[5, "omnixai.explainers.data.MutualInformation.alias"]], "alias (omnixai.explainers.data.chi_square.chisquare attribute)": [[5, "omnixai.explainers.data.chi_square.ChiSquare.alias"]], "alias (omnixai.explainers.data.correlation.correlationanalyzer attribute)": [[5, "omnixai.explainers.data.correlation.CorrelationAnalyzer.alias"]], "alias (omnixai.explainers.data.imbalance.imbalanceanalyzer attribute)": [[5, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer.alias"]], "alias (omnixai.explainers.data.mutual_info.mutualinformation attribute)": [[5, "omnixai.explainers.data.mutual_info.MutualInformation.alias"]], "explain() (omnixai.explainers.data.chisquare method)": [[5, "omnixai.explainers.data.ChiSquare.explain"]], "explain() (omnixai.explainers.data.correlationanalyzer method)": [[5, "omnixai.explainers.data.CorrelationAnalyzer.explain"]], "explain() (omnixai.explainers.data.dataanalyzer method)": [[5, "omnixai.explainers.data.DataAnalyzer.explain"]], "explain() (omnixai.explainers.data.imbalanceanalyzer method)": [[5, "omnixai.explainers.data.ImbalanceAnalyzer.explain"]], "explain() (omnixai.explainers.data.mutualinformation method)": [[5, "omnixai.explainers.data.MutualInformation.explain"]], "explain() (omnixai.explainers.data.auto.dataanalyzer method)": [[5, "omnixai.explainers.data.auto.DataAnalyzer.explain"]], "explain() (omnixai.explainers.data.chi_square.chisquare method)": [[5, "omnixai.explainers.data.chi_square.ChiSquare.explain"]], "explain() (omnixai.explainers.data.correlation.correlationanalyzer method)": [[5, "omnixai.explainers.data.correlation.CorrelationAnalyzer.explain"]], "explain() (omnixai.explainers.data.imbalance.imbalanceanalyzer method)": [[5, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer.explain"]], "explain() (omnixai.explainers.data.mutual_info.mutualinformation method)": [[5, "omnixai.explainers.data.mutual_info.MutualInformation.explain"]], "explanation_type (omnixai.explainers.data.chisquare attribute)": [[5, "omnixai.explainers.data.ChiSquare.explanation_type"]], "explanation_type (omnixai.explainers.data.correlationanalyzer attribute)": [[5, "omnixai.explainers.data.CorrelationAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.imbalanceanalyzer attribute)": [[5, "omnixai.explainers.data.ImbalanceAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.mutualinformation attribute)": [[5, "omnixai.explainers.data.MutualInformation.explanation_type"]], "explanation_type (omnixai.explainers.data.chi_square.chisquare attribute)": [[5, "omnixai.explainers.data.chi_square.ChiSquare.explanation_type"]], "explanation_type (omnixai.explainers.data.correlation.correlationanalyzer attribute)": [[5, "omnixai.explainers.data.correlation.CorrelationAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.imbalance.imbalanceanalyzer attribute)": [[5, "omnixai.explainers.data.imbalance.ImbalanceAnalyzer.explanation_type"]], "explanation_type (omnixai.explainers.data.mutual_info.mutualinformation attribute)": [[5, "omnixai.explainers.data.mutual_info.MutualInformation.explanation_type"]], "list_explainers() (omnixai.explainers.data.dataanalyzer static method)": [[5, "omnixai.explainers.data.DataAnalyzer.list_explainers"]], "list_explainers() (omnixai.explainers.data.auto.dataanalyzer static method)": [[5, "omnixai.explainers.data.auto.DataAnalyzer.list_explainers"]], "omnixai.explainers.data": [[5, "module-omnixai.explainers.data"]], "omnixai.explainers.data.auto": [[5, "module-omnixai.explainers.data.auto"]], "omnixai.explainers.data.chi_square": [[5, "module-omnixai.explainers.data.chi_square"]], "omnixai.explainers.data.correlation": [[5, "module-omnixai.explainers.data.correlation"]], "omnixai.explainers.data.imbalance": [[5, "module-omnixai.explainers.data.imbalance"]], "omnixai.explainers.data.mutual_info": [[5, "module-omnixai.explainers.data.mutual_info"]], "nlpexplainer (class in omnixai.explainers.nlp.auto)": [[6, "omnixai.explainers.nlp.auto.NLPExplainer"]], "list_explainers() (omnixai.explainers.nlp.auto.nlpexplainer static method)": [[6, "omnixai.explainers.nlp.auto.NLPExplainer.list_explainers"]], "omnixai.explainers.nlp.auto": [[6, "module-omnixai.explainers.nlp.auto"]], "defaultpredictionmodel (class in omnixai.explainers.nlp.agnostic.l2x)": [[7, "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel"]], "defaultselectionmodel (class in omnixai.explainers.nlp.agnostic.l2x)": [[7, "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel"]], "l2xtext (class in omnixai.explainers.nlp.agnostic.l2x)": [[7, "omnixai.explainers.nlp.agnostic.l2x.L2XText"]], "limetext (class in omnixai.explainers.nlp.agnostic.lime)": [[7, "omnixai.explainers.nlp.agnostic.lime.LimeText"]], "shaptext (class in omnixai.explainers.nlp.agnostic.shap)": [[7, "omnixai.explainers.nlp.agnostic.shap.ShapText"]], "alias (omnixai.explainers.nlp.agnostic.l2x.l2xtext attribute)": [[7, "omnixai.explainers.nlp.agnostic.l2x.L2XText.alias"]], "alias (omnixai.explainers.nlp.agnostic.lime.limetext attribute)": [[7, "omnixai.explainers.nlp.agnostic.lime.LimeText.alias"]], "alias (omnixai.explainers.nlp.agnostic.shap.shaptext attribute)": [[7, "omnixai.explainers.nlp.agnostic.shap.ShapText.alias"]], "explain() (omnixai.explainers.nlp.agnostic.l2x.l2xtext method)": [[7, "omnixai.explainers.nlp.agnostic.l2x.L2XText.explain"]], "explain() (omnixai.explainers.nlp.agnostic.lime.limetext method)": [[7, "omnixai.explainers.nlp.agnostic.lime.LimeText.explain"]], "explain() (omnixai.explainers.nlp.agnostic.shap.shaptext method)": [[7, "omnixai.explainers.nlp.agnostic.shap.ShapText.explain"]], "explanation_type (omnixai.explainers.nlp.agnostic.l2x.l2xtext attribute)": [[7, "omnixai.explainers.nlp.agnostic.l2x.L2XText.explanation_type"]], "explanation_type (omnixai.explainers.nlp.agnostic.lime.limetext attribute)": [[7, "omnixai.explainers.nlp.agnostic.lime.LimeText.explanation_type"]], "explanation_type (omnixai.explainers.nlp.agnostic.shap.shaptext attribute)": [[7, "omnixai.explainers.nlp.agnostic.shap.ShapText.explanation_type"]], "forward() (omnixai.explainers.nlp.agnostic.l2x.defaultpredictionmodel method)": [[7, "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel.forward"]], "forward() (omnixai.explainers.nlp.agnostic.l2x.defaultselectionmodel method)": [[7, "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel.forward"]], "omnixai.explainers.nlp.agnostic": [[7, "module-omnixai.explainers.nlp.agnostic"]], "omnixai.explainers.nlp.agnostic.l2x": [[7, "module-omnixai.explainers.nlp.agnostic.l2x"]], "omnixai.explainers.nlp.agnostic.lime": [[7, "module-omnixai.explainers.nlp.agnostic.lime"]], "omnixai.explainers.nlp.agnostic.shap": [[7, "module-omnixai.explainers.nlp.agnostic.shap"]], "save() (omnixai.explainers.nlp.agnostic.l2x.l2xtext method)": [[7, "omnixai.explainers.nlp.agnostic.l2x.L2XText.save"]], "training (omnixai.explainers.nlp.agnostic.l2x.defaultpredictionmodel attribute)": [[7, "omnixai.explainers.nlp.agnostic.l2x.DefaultPredictionModel.training"]], "training (omnixai.explainers.nlp.agnostic.l2x.defaultselectionmodel attribute)": [[7, "omnixai.explainers.nlp.agnostic.l2x.DefaultSelectionModel.training"]], "polyjuice (class in omnixai.explainers.nlp.counterfactual.polyjuice)": [[8, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice"]], "alias (omnixai.explainers.nlp.counterfactual.polyjuice.polyjuice attribute)": [[8, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice.alias"]], "explain() (omnixai.explainers.nlp.counterfactual.polyjuice.polyjuice method)": [[8, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice.explain"]], "explanation_type (omnixai.explainers.nlp.counterfactual.polyjuice.polyjuice attribute)": [[8, "omnixai.explainers.nlp.counterfactual.polyjuice.Polyjuice.explanation_type"]], "omnixai.explainers.nlp.counterfactual": [[8, "module-omnixai.explainers.nlp.counterfactual"]], "omnixai.explainers.nlp.counterfactual.polyjuice": [[8, "module-omnixai.explainers.nlp.counterfactual.polyjuice"]], "integratedgradienttext (class in omnixai.explainers.nlp.specific.ig)": [[9, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText"]], "alias (omnixai.explainers.nlp.specific.ig.integratedgradienttext attribute)": [[9, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText.alias"]], "explain() (omnixai.explainers.nlp.specific.ig.integratedgradienttext method)": [[9, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText.explain"]], "explanation_type (omnixai.explainers.nlp.specific.ig.integratedgradienttext attribute)": [[9, "omnixai.explainers.nlp.specific.ig.IntegratedGradientText.explanation_type"]], "omnixai.explainers.nlp.specific": [[9, "module-omnixai.explainers.nlp.specific"]], "omnixai.explainers.nlp.specific.ig": [[9, "module-omnixai.explainers.nlp.specific.ig"]], "predictionanalyzer (class in omnixai.explainers.prediction)": [[10, "omnixai.explainers.prediction.PredictionAnalyzer"]], "alias (omnixai.explainers.prediction.predictionanalyzer attribute)": [[10, "omnixai.explainers.prediction.PredictionAnalyzer.alias"]], "explain() (omnixai.explainers.prediction.predictionanalyzer method)": [[10, "omnixai.explainers.prediction.PredictionAnalyzer.explain"]], "explanation_type (omnixai.explainers.prediction.predictionanalyzer attribute)": [[10, "omnixai.explainers.prediction.PredictionAnalyzer.explanation_type"]], "omnixai.explainers.prediction": [[10, "module-omnixai.explainers.prediction"]], "permutationrankingexplainer (class in omnixai.explainers.ranking.agnostic.permutation)": [[12, "omnixai.explainers.ranking.agnostic.permutation.PermutationRankingExplainer"]], "validityrankingexplainer (class in omnixai.explainers.ranking.agnostic.validity)": [[12, "omnixai.explainers.ranking.agnostic.validity.ValidityRankingExplainer"]], "alias (omnixai.explainers.ranking.agnostic.permutation.permutationrankingexplainer attribute)": [[12, "omnixai.explainers.ranking.agnostic.permutation.PermutationRankingExplainer.alias"]], "alias (omnixai.explainers.ranking.agnostic.validity.validityrankingexplainer attribute)": [[12, "omnixai.explainers.ranking.agnostic.validity.ValidityRankingExplainer.alias"]], "explain() (omnixai.explainers.ranking.agnostic.permutation.permutationrankingexplainer method)": [[12, "omnixai.explainers.ranking.agnostic.permutation.PermutationRankingExplainer.explain"]], "explain() (omnixai.explainers.ranking.agnostic.validity.validityrankingexplainer method)": [[12, "omnixai.explainers.ranking.agnostic.validity.ValidityRankingExplainer.explain"]], "explanation_type (omnixai.explainers.ranking.agnostic.permutation.permutationrankingexplainer attribute)": [[12, "omnixai.explainers.ranking.agnostic.permutation.PermutationRankingExplainer.explanation_type"]], "explanation_type (omnixai.explainers.ranking.agnostic.validity.validityrankingexplainer attribute)": [[12, "omnixai.explainers.ranking.agnostic.validity.ValidityRankingExplainer.explanation_type"]], "omnixai.explainers.ranking.agnostic": [[12, "module-omnixai.explainers.ranking.agnostic"]], "omnixai.explainers.ranking.agnostic.permutation": [[12, "module-omnixai.explainers.ranking.agnostic.permutation"]], "omnixai.explainers.ranking.agnostic.validity": [[12, "module-omnixai.explainers.ranking.agnostic.validity"]], "maceexplainer (class in omnixai.explainers.ranking.counterfactual.mace)": [[13, "omnixai.explainers.ranking.counterfactual.mace.MACEExplainer"]], "alias (omnixai.explainers.ranking.counterfactual.mace.maceexplainer attribute)": [[13, "omnixai.explainers.ranking.counterfactual.mace.MACEExplainer.alias"]], "explain() (omnixai.explainers.ranking.counterfactual.mace.maceexplainer method)": [[13, "omnixai.explainers.ranking.counterfactual.mace.MACEExplainer.explain"]], "explanation_type (omnixai.explainers.ranking.counterfactual.mace.maceexplainer attribute)": [[13, "omnixai.explainers.ranking.counterfactual.mace.MACEExplainer.explanation_type"]], "omnixai.explainers.ranking.counterfactual": [[13, "module-omnixai.explainers.ranking.counterfactual"]], "omnixai.explainers.ranking.counterfactual.mace": [[13, "module-omnixai.explainers.ranking.counterfactual.mace"]], "sklearnbase (class in omnixai.explainers.tabular.base)": [[14, "omnixai.explainers.tabular.base.SklearnBase"]], "tabularexplainer (class in omnixai.explainers.tabular.auto)": [[14, "omnixai.explainers.tabular.auto.TabularExplainer"]], "tabularexplainer (class in omnixai.explainers.tabular.base)": [[14, "omnixai.explainers.tabular.base.TabularExplainer"]], "tabularexplainermixin (class in omnixai.explainers.tabular.base)": [[14, "omnixai.explainers.tabular.base.TabularExplainerMixin"]], "class_names() (omnixai.explainers.tabular.base.sklearnbase method)": [[14, "omnixai.explainers.tabular.base.SklearnBase.class_names"]], "fit() (omnixai.explainers.tabular.base.sklearnbase method)": [[14, "omnixai.explainers.tabular.base.SklearnBase.fit"]], "list_explainers() (omnixai.explainers.tabular.auto.tabularexplainer static method)": [[14, "omnixai.explainers.tabular.auto.TabularExplainer.list_explainers"]], "omnixai.explainers.tabular.auto": [[14, "module-omnixai.explainers.tabular.auto"]], "omnixai.explainers.tabular.base": [[14, "module-omnixai.explainers.tabular.base"]], "predict() (omnixai.explainers.tabular.base.sklearnbase method)": [[14, "omnixai.explainers.tabular.base.SklearnBase.predict"]], "predict_proba() (omnixai.explainers.tabular.base.sklearnbase method)": [[14, "omnixai.explainers.tabular.base.SklearnBase.predict_proba"]], "ale (class in omnixai.explainers.tabular.agnostic.ale)": [[15, "omnixai.explainers.tabular.agnostic.ale.ALE"]], "defaultpredictionmodel (class in omnixai.explainers.tabular.agnostic.l2x.l2x)": [[15, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel"]], "defaultselectionmodel (class in omnixai.explainers.tabular.agnostic.l2x.l2x)": [[15, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel"]], "globalshaptabular (class in omnixai.explainers.tabular.agnostic.shap_global)": [[15, "omnixai.explainers.tabular.agnostic.shap_global.GlobalShapTabular"]], "l2xtabular (class in omnixai.explainers.tabular.agnostic.l2x.l2x)": [[15, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular"]], "limetabular (class in omnixai.explainers.tabular.agnostic.lime)": [[15, "omnixai.explainers.tabular.agnostic.lime.LimeTabular"]], "partialdependencetabular (class in omnixai.explainers.tabular.agnostic.pdp)": [[15, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular"]], "permutationimportance (class in omnixai.explainers.tabular.agnostic.permutation)": [[15, "omnixai.explainers.tabular.agnostic.permutation.PermutationImportance"]], "sensitivityanalysistabular (class in omnixai.explainers.tabular.agnostic.sensitivity)": [[15, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular"]], "shaptabular (class in omnixai.explainers.tabular.agnostic.shap)": [[15, "omnixai.explainers.tabular.agnostic.shap.ShapTabular"]], "alias (omnixai.explainers.tabular.agnostic.l2x.l2x.l2xtabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.ale.ale attribute)": [[15, "omnixai.explainers.tabular.agnostic.ale.ALE.alias"]], "alias (omnixai.explainers.tabular.agnostic.lime.limetabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.lime.LimeTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.pdp.partialdependencetabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.permutation.permutationimportance attribute)": [[15, "omnixai.explainers.tabular.agnostic.permutation.PermutationImportance.alias"]], "alias (omnixai.explainers.tabular.agnostic.sensitivity.sensitivityanalysistabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.shap.shaptabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.shap.ShapTabular.alias"]], "alias (omnixai.explainers.tabular.agnostic.shap_global.globalshaptabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.shap_global.GlobalShapTabular.alias"]], "cmds() (omnixai.explainers.tabular.agnostic.ale.ale static method)": [[15, "omnixai.explainers.tabular.agnostic.ale.ALE.cmds"]], "explain() (omnixai.explainers.tabular.agnostic.l2x.l2x.l2xtabular method)": [[15, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.ale.ale method)": [[15, "omnixai.explainers.tabular.agnostic.ale.ALE.explain"]], "explain() (omnixai.explainers.tabular.agnostic.lime.limetabular method)": [[15, "omnixai.explainers.tabular.agnostic.lime.LimeTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.pdp.partialdependencetabular method)": [[15, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.permutation.permutationimportance method)": [[15, "omnixai.explainers.tabular.agnostic.permutation.PermutationImportance.explain"]], "explain() (omnixai.explainers.tabular.agnostic.sensitivity.sensitivityanalysistabular method)": [[15, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.shap.shaptabular method)": [[15, "omnixai.explainers.tabular.agnostic.shap.ShapTabular.explain"]], "explain() (omnixai.explainers.tabular.agnostic.shap_global.globalshaptabular method)": [[15, "omnixai.explainers.tabular.agnostic.shap_global.GlobalShapTabular.explain"]], "explanation_type (omnixai.explainers.tabular.agnostic.l2x.l2x.l2xtabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.ale.ale attribute)": [[15, "omnixai.explainers.tabular.agnostic.ale.ALE.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.lime.limetabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.lime.LimeTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.pdp.partialdependencetabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.pdp.PartialDependenceTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.permutation.permutationimportance attribute)": [[15, "omnixai.explainers.tabular.agnostic.permutation.PermutationImportance.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.sensitivity.sensitivityanalysistabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.sensitivity.SensitivityAnalysisTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.shap.shaptabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.shap.ShapTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.agnostic.shap_global.globalshaptabular attribute)": [[15, "omnixai.explainers.tabular.agnostic.shap_global.GlobalShapTabular.explanation_type"]], "forward() (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultpredictionmodel method)": [[15, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel.forward"]], "forward() (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultselectionmodel method)": [[15, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel.forward"]], "omnixai.explainers.tabular.agnostic": [[15, "module-omnixai.explainers.tabular.agnostic"]], "omnixai.explainers.tabular.agnostic.l2x.l2x": [[15, "module-omnixai.explainers.tabular.agnostic.L2X.l2x"]], "omnixai.explainers.tabular.agnostic.ale": [[15, "module-omnixai.explainers.tabular.agnostic.ale"]], "omnixai.explainers.tabular.agnostic.lime": [[15, "module-omnixai.explainers.tabular.agnostic.lime"]], "omnixai.explainers.tabular.agnostic.pdp": [[15, "module-omnixai.explainers.tabular.agnostic.pdp"]], "omnixai.explainers.tabular.agnostic.permutation": [[15, "module-omnixai.explainers.tabular.agnostic.permutation"]], "omnixai.explainers.tabular.agnostic.sensitivity": [[15, "module-omnixai.explainers.tabular.agnostic.sensitivity"]], "omnixai.explainers.tabular.agnostic.shap": [[15, "module-omnixai.explainers.tabular.agnostic.shap"]], "omnixai.explainers.tabular.agnostic.shap_global": [[15, "module-omnixai.explainers.tabular.agnostic.shap_global"]], "save() (omnixai.explainers.tabular.agnostic.l2x.l2x.l2xtabular method)": [[15, "omnixai.explainers.tabular.agnostic.L2X.l2x.L2XTabular.save"]], "save() (omnixai.explainers.tabular.agnostic.lime.limetabular method)": [[15, "omnixai.explainers.tabular.agnostic.lime.LimeTabular.save"]], "save() (omnixai.explainers.tabular.agnostic.shap.shaptabular method)": [[15, "omnixai.explainers.tabular.agnostic.shap.ShapTabular.save"]], "save() (omnixai.explainers.tabular.agnostic.shap_global.globalshaptabular method)": [[15, "omnixai.explainers.tabular.agnostic.shap_global.GlobalShapTabular.save"]], "training (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultpredictionmodel attribute)": [[15, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultPredictionModel.training"]], "training (omnixai.explainers.tabular.agnostic.l2x.l2x.defaultselectionmodel attribute)": [[15, "omnixai.explainers.tabular.agnostic.L2X.l2x.DefaultSelectionModel.training"]], "counterfactualexplainer (class in omnixai.explainers.tabular.counterfactual.ce)": [[16, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer"]], "counterfactualoptimizer (class in omnixai.explainers.tabular.counterfactual.ce)": [[16, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualOptimizer"]], "maceexplainer (class in omnixai.explainers.tabular.counterfactual.mace.mace)": [[16, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer"]], "alias (omnixai.explainers.tabular.counterfactual.ce.counterfactualexplainer attribute)": [[16, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer.alias"]], "alias (omnixai.explainers.tabular.counterfactual.mace.mace.maceexplainer attribute)": [[16, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer.alias"]], "explain() (omnixai.explainers.tabular.counterfactual.ce.counterfactualexplainer method)": [[16, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer.explain"]], "explain() (omnixai.explainers.tabular.counterfactual.mace.mace.maceexplainer method)": [[16, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer.explain"]], "explanation_type (omnixai.explainers.tabular.counterfactual.ce.counterfactualexplainer attribute)": [[16, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer.explanation_type"]], "explanation_type (omnixai.explainers.tabular.counterfactual.mace.mace.maceexplainer attribute)": [[16, "omnixai.explainers.tabular.counterfactual.mace.mace.MACEExplainer.explanation_type"]], "omnixai.explainers.tabular.counterfactual": [[16, "module-omnixai.explainers.tabular.counterfactual"]], "omnixai.explainers.tabular.counterfactual.ce": [[16, "module-omnixai.explainers.tabular.counterfactual.ce"]], "omnixai.explainers.tabular.counterfactual.mace.mace": [[16, "module-omnixai.explainers.tabular.counterfactual.mace.mace"]], "optimize() (omnixai.explainers.tabular.counterfactual.ce.counterfactualoptimizer method)": [[16, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualOptimizer.optimize"]], "save() (omnixai.explainers.tabular.counterfactual.ce.counterfactualexplainer method)": [[16, "omnixai.explainers.tabular.counterfactual.ce.CounterfactualExplainer.save"]], "integratedgradient (class in omnixai.explainers.tabular.specific.ig)": [[17, "omnixai.explainers.tabular.specific.ig.IntegratedGradient"]], "integratedgradienttabular (class in omnixai.explainers.tabular.specific.ig)": [[17, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular"]], "linearbase (class in omnixai.explainers.tabular.specific.linear)": [[17, "omnixai.explainers.tabular.specific.linear.LinearBase"]], "linearregression (class in omnixai.explainers.tabular.specific.linear)": [[17, "omnixai.explainers.tabular.specific.linear.LinearRegression"]], "logisticregression (class in omnixai.explainers.tabular.specific.linear)": [[17, "omnixai.explainers.tabular.specific.linear.LogisticRegression"]], "shaptreetabular (class in omnixai.explainers.tabular.specific.shap_tree)": [[17, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular"]], "treebase (class in omnixai.explainers.tabular.specific.decision_tree)": [[17, "omnixai.explainers.tabular.specific.decision_tree.TreeBase"]], "treeclassifier (class in omnixai.explainers.tabular.specific.decision_tree)": [[17, "omnixai.explainers.tabular.specific.decision_tree.TreeClassifier"]], "treeregressor (class in omnixai.explainers.tabular.specific.decision_tree)": [[17, "omnixai.explainers.tabular.specific.decision_tree.TreeRegressor"]], "alias (omnixai.explainers.tabular.specific.decision_tree.treeclassifier attribute)": [[17, "omnixai.explainers.tabular.specific.decision_tree.TreeClassifier.alias"]], "alias (omnixai.explainers.tabular.specific.decision_tree.treeregressor attribute)": [[17, "omnixai.explainers.tabular.specific.decision_tree.TreeRegressor.alias"]], "alias (omnixai.explainers.tabular.specific.ig.integratedgradienttabular attribute)": [[17, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular.alias"]], "alias (omnixai.explainers.tabular.specific.linear.linearregression attribute)": [[17, "omnixai.explainers.tabular.specific.linear.LinearRegression.alias"]], "alias (omnixai.explainers.tabular.specific.linear.logisticregression attribute)": [[17, "omnixai.explainers.tabular.specific.linear.LogisticRegression.alias"]], "alias (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular attribute)": [[17, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.alias"]], "compute_integrated_gradients() (omnixai.explainers.tabular.specific.ig.integratedgradient static method)": [[17, "omnixai.explainers.tabular.specific.ig.IntegratedGradient.compute_integrated_gradients"]], "explain() (omnixai.explainers.tabular.specific.decision_tree.treebase method)": [[17, "omnixai.explainers.tabular.specific.decision_tree.TreeBase.explain"]], "explain() (omnixai.explainers.tabular.specific.ig.integratedgradienttabular method)": [[17, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular.explain"]], "explain() (omnixai.explainers.tabular.specific.linear.linearbase method)": [[17, "omnixai.explainers.tabular.specific.linear.LinearBase.explain"]], "explain() (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular method)": [[17, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.explain"]], "explanation_type (omnixai.explainers.tabular.specific.decision_tree.treebase attribute)": [[17, "omnixai.explainers.tabular.specific.decision_tree.TreeBase.explanation_type"]], "explanation_type (omnixai.explainers.tabular.specific.ig.integratedgradienttabular attribute)": [[17, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular.explanation_type"]], "explanation_type (omnixai.explainers.tabular.specific.linear.linearbase attribute)": [[17, "omnixai.explainers.tabular.specific.linear.LinearBase.explanation_type"]], "explanation_type (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular attribute)": [[17, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.explanation_type"]], "fit() (omnixai.explainers.tabular.specific.decision_tree.treebase method)": [[17, "omnixai.explainers.tabular.specific.decision_tree.TreeBase.fit"]], "fit() (omnixai.explainers.tabular.specific.linear.linearbase method)": [[17, "omnixai.explainers.tabular.specific.linear.LinearBase.fit"]], "fit() (omnixai.explainers.tabular.specific.shap_tree.shaptreetabular method)": [[17, "omnixai.explainers.tabular.specific.shap_tree.ShapTreeTabular.fit"]], "omnixai.explainers.tabular.specific": [[17, "module-omnixai.explainers.tabular.specific"]], "omnixai.explainers.tabular.specific.decision_tree": [[17, "module-omnixai.explainers.tabular.specific.decision_tree"]], "omnixai.explainers.tabular.specific.ig": [[17, "module-omnixai.explainers.tabular.specific.ig"]], "omnixai.explainers.tabular.specific.linear": [[17, "module-omnixai.explainers.tabular.specific.linear"]], "omnixai.explainers.tabular.specific.shap_tree": [[17, "module-omnixai.explainers.tabular.specific.shap_tree"]], "save() (omnixai.explainers.tabular.specific.ig.integratedgradienttabular method)": [[17, "omnixai.explainers.tabular.specific.ig.IntegratedGradientTabular.save"]], "timeseriesexplainer (class in omnixai.explainers.timeseries.auto)": [[18, "omnixai.explainers.timeseries.auto.TimeseriesExplainer"]], "list_explainers() (omnixai.explainers.timeseries.auto.timeseriesexplainer static method)": [[18, "omnixai.explainers.timeseries.auto.TimeseriesExplainer.list_explainers"]], "omnixai.explainers.timeseries.auto": [[18, "module-omnixai.explainers.timeseries.auto"]], "shaptimeseries (class in omnixai.explainers.timeseries.agnostic.shap)": [[19, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries"]], "alias (omnixai.explainers.timeseries.agnostic.shap.shaptimeseries attribute)": [[19, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries.alias"]], "explain() (omnixai.explainers.timeseries.agnostic.shap.shaptimeseries method)": [[19, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries.explain"]], "explanation_type (omnixai.explainers.timeseries.agnostic.shap.shaptimeseries attribute)": [[19, "omnixai.explainers.timeseries.agnostic.shap.ShapTimeseries.explanation_type"]], "omnixai.explainers.timeseries.agnostic": [[19, "module-omnixai.explainers.timeseries.agnostic"]], "omnixai.explainers.timeseries.agnostic.shap": [[19, "module-omnixai.explainers.timeseries.agnostic.shap"]], "counterfactualexplainer (class in omnixai.explainers.timeseries.counterfactual.ce)": [[20, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer"]], "counterfactualoptimizer (class in omnixai.explainers.timeseries.counterfactual.ce)": [[20, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualOptimizer"]], "maceexplainer (class in omnixai.explainers.timeseries.counterfactual.mace)": [[20, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer"]], "alias (omnixai.explainers.timeseries.counterfactual.ce.counterfactualexplainer attribute)": [[20, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer.alias"]], "alias (omnixai.explainers.timeseries.counterfactual.mace.maceexplainer attribute)": [[20, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer.alias"]], "explain() (omnixai.explainers.timeseries.counterfactual.ce.counterfactualexplainer method)": [[20, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer.explain"]], "explain() (omnixai.explainers.timeseries.counterfactual.mace.maceexplainer method)": [[20, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer.explain"]], "explanation_type (omnixai.explainers.timeseries.counterfactual.ce.counterfactualexplainer attribute)": [[20, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualExplainer.explanation_type"]], "explanation_type (omnixai.explainers.timeseries.counterfactual.mace.maceexplainer attribute)": [[20, "omnixai.explainers.timeseries.counterfactual.mace.MACEExplainer.explanation_type"]], "omnixai.explainers.timeseries.counterfactual": [[20, "module-omnixai.explainers.timeseries.counterfactual"]], "omnixai.explainers.timeseries.counterfactual.ce": [[20, "module-omnixai.explainers.timeseries.counterfactual.ce"]], "omnixai.explainers.timeseries.counterfactual.mace": [[20, "module-omnixai.explainers.timeseries.counterfactual.mace"]], "optimize() (omnixai.explainers.timeseries.counterfactual.ce.counterfactualoptimizer method)": [[20, "omnixai.explainers.timeseries.counterfactual.ce.CounterfactualOptimizer.optimize"]], "visionexplainer (class in omnixai.explainers.vision.auto)": [[21, "omnixai.explainers.vision.auto.VisionExplainer"]], "list_explainers() (omnixai.explainers.vision.auto.visionexplainer static method)": [[21, "omnixai.explainers.vision.auto.VisionExplainer.list_explainers"]], "omnixai.explainers.vision.auto": [[21, "module-omnixai.explainers.vision.auto"]], "defaultpredictionmodel (class in omnixai.explainers.vision.agnostic.l2x)": [[22, "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel"]], "defaultselectionmodel (class in omnixai.explainers.vision.agnostic.l2x)": [[22, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel"]], "l2ximage (class in omnixai.explainers.vision.agnostic.l2x)": [[22, "omnixai.explainers.vision.agnostic.l2x.L2XImage"]], "limeimage (class in omnixai.explainers.vision.agnostic.lime)": [[22, "omnixai.explainers.vision.agnostic.lime.LimeImage"]], "partialdependenceimage (class in omnixai.explainers.vision.agnostic.pdp)": [[22, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage"]], "shapimage (class in omnixai.explainers.vision.agnostic.shap)": [[22, "omnixai.explainers.vision.agnostic.shap.ShapImage"]], "alias (omnixai.explainers.vision.agnostic.l2x.l2ximage attribute)": [[22, "omnixai.explainers.vision.agnostic.l2x.L2XImage.alias"]], "alias (omnixai.explainers.vision.agnostic.lime.limeimage attribute)": [[22, "omnixai.explainers.vision.agnostic.lime.LimeImage.alias"]], "alias (omnixai.explainers.vision.agnostic.pdp.partialdependenceimage attribute)": [[22, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage.alias"]], "alias (omnixai.explainers.vision.agnostic.shap.shapimage attribute)": [[22, "omnixai.explainers.vision.agnostic.shap.ShapImage.alias"]], "explain() (omnixai.explainers.vision.agnostic.l2x.l2ximage method)": [[22, "omnixai.explainers.vision.agnostic.l2x.L2XImage.explain"]], "explain() (omnixai.explainers.vision.agnostic.lime.limeimage method)": [[22, "omnixai.explainers.vision.agnostic.lime.LimeImage.explain"]], "explain() (omnixai.explainers.vision.agnostic.pdp.partialdependenceimage method)": [[22, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage.explain"]], "explain() (omnixai.explainers.vision.agnostic.shap.shapimage method)": [[22, "omnixai.explainers.vision.agnostic.shap.ShapImage.explain"]], "explanation_type (omnixai.explainers.vision.agnostic.l2x.l2ximage attribute)": [[22, "omnixai.explainers.vision.agnostic.l2x.L2XImage.explanation_type"]], "explanation_type (omnixai.explainers.vision.agnostic.lime.limeimage attribute)": [[22, "omnixai.explainers.vision.agnostic.lime.LimeImage.explanation_type"]], "explanation_type (omnixai.explainers.vision.agnostic.pdp.partialdependenceimage attribute)": [[22, "omnixai.explainers.vision.agnostic.pdp.PartialDependenceImage.explanation_type"]], "explanation_type (omnixai.explainers.vision.agnostic.shap.shapimage attribute)": [[22, "omnixai.explainers.vision.agnostic.shap.ShapImage.explanation_type"]], "forward() (omnixai.explainers.vision.agnostic.l2x.defaultpredictionmodel method)": [[22, "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel.forward"]], "forward() (omnixai.explainers.vision.agnostic.l2x.defaultselectionmodel method)": [[22, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel.forward"]], "omnixai.explainers.vision.agnostic": [[22, "module-omnixai.explainers.vision.agnostic"]], "omnixai.explainers.vision.agnostic.l2x": [[22, "module-omnixai.explainers.vision.agnostic.l2x"]], "omnixai.explainers.vision.agnostic.lime": [[22, "module-omnixai.explainers.vision.agnostic.lime"]], "omnixai.explainers.vision.agnostic.pdp": [[22, "module-omnixai.explainers.vision.agnostic.pdp"]], "omnixai.explainers.vision.agnostic.shap": [[22, "module-omnixai.explainers.vision.agnostic.shap"]], "postprocess() (omnixai.explainers.vision.agnostic.l2x.defaultselectionmodel method)": [[22, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel.postprocess"]], "save() (omnixai.explainers.vision.agnostic.l2x.l2ximage method)": [[22, "omnixai.explainers.vision.agnostic.l2x.L2XImage.save"]], "training (omnixai.explainers.vision.agnostic.l2x.defaultpredictionmodel attribute)": [[22, "omnixai.explainers.vision.agnostic.l2x.DefaultPredictionModel.training"]], "training (omnixai.explainers.vision.agnostic.l2x.defaultselectionmodel attribute)": [[22, "omnixai.explainers.vision.agnostic.l2x.DefaultSelectionModel.training"]], "counterfactualexplainer (class in omnixai.explainers.vision.counterfactual.ce)": [[23, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer"]], "alias (omnixai.explainers.vision.counterfactual.ce.counterfactualexplainer attribute)": [[23, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer.alias"]], "explain() (omnixai.explainers.vision.counterfactual.ce.counterfactualexplainer method)": [[23, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer.explain"]], "explanation_type (omnixai.explainers.vision.counterfactual.ce.counterfactualexplainer attribute)": [[23, "omnixai.explainers.vision.counterfactual.ce.CounterfactualExplainer.explanation_type"]], "omnixai.explainers.vision.counterfactual": [[23, "module-omnixai.explainers.vision.counterfactual"]], "omnixai.explainers.vision.counterfactual.ce": [[23, "module-omnixai.explainers.vision.counterfactual.ce"]], "cemoptimizer (class in omnixai.explainers.vision.specific.cem)": [[24, "omnixai.explainers.vision.specific.cem.CEMOptimizer"]], "contrastiveexplainer (class in omnixai.explainers.vision.specific.cem)": [[24, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer"]], "featuremapvisualizer (class in omnixai.explainers.vision.specific.feature_visualization.visualizer)": [[24, "omnixai.explainers.vision.specific.feature_visualization.visualizer.FeatureMapVisualizer"]], "featurevisualizer (class in omnixai.explainers.vision.specific.feature_visualization.visualizer)": [[24, "omnixai.explainers.vision.specific.feature_visualization.visualizer.FeatureVisualizer"]], "gradcam (class in omnixai.explainers.vision.specific.gradcam.gradcam)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM"]], "gradcamplus (class in omnixai.explainers.vision.specific.gradcam.gradcam)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus"]], "guidedbp (class in omnixai.explainers.vision.specific.guided_bp)": [[24, "omnixai.explainers.vision.specific.guided_bp.GuidedBP"]], "integratedgradientimage (class in omnixai.explainers.vision.specific.ig)": [[24, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage"]], "layercam (class in omnixai.explainers.vision.specific.gradcam.gradcam)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.LayerCAM"]], "smoothgrad (class in omnixai.explainers.vision.specific.smoothgrad)": [[24, "omnixai.explainers.vision.specific.smoothgrad.SmoothGrad"]], "alias (omnixai.explainers.vision.specific.cem.contrastiveexplainer attribute)": [[24, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer.alias"]], "alias (omnixai.explainers.vision.specific.feature_visualization.visualizer.featuremapvisualizer attribute)": [[24, "omnixai.explainers.vision.specific.feature_visualization.visualizer.FeatureMapVisualizer.alias"]], "alias (omnixai.explainers.vision.specific.feature_visualization.visualizer.featurevisualizer attribute)": [[24, "omnixai.explainers.vision.specific.feature_visualization.visualizer.FeatureVisualizer.alias"]], "alias (omnixai.explainers.vision.specific.gradcam.gradcam.gradcam attribute)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM.alias"]], "alias (omnixai.explainers.vision.specific.gradcam.gradcam.gradcamplus attribute)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus.alias"]], "alias (omnixai.explainers.vision.specific.gradcam.gradcam.layercam attribute)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.LayerCAM.alias"]], "alias (omnixai.explainers.vision.specific.guided_bp.guidedbp attribute)": [[24, "omnixai.explainers.vision.specific.guided_bp.GuidedBP.alias"]], "alias (omnixai.explainers.vision.specific.ig.integratedgradientimage attribute)": [[24, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage.alias"]], "alias (omnixai.explainers.vision.specific.smoothgrad.smoothgrad attribute)": [[24, "omnixai.explainers.vision.specific.smoothgrad.SmoothGrad.alias"]], "explain() (omnixai.explainers.vision.specific.cem.contrastiveexplainer method)": [[24, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer.explain"]], "explain() (omnixai.explainers.vision.specific.feature_visualization.visualizer.featuremapvisualizer method)": [[24, "omnixai.explainers.vision.specific.feature_visualization.visualizer.FeatureMapVisualizer.explain"]], "explain() (omnixai.explainers.vision.specific.feature_visualization.visualizer.featurevisualizer method)": [[24, "omnixai.explainers.vision.specific.feature_visualization.visualizer.FeatureVisualizer.explain"]], "explain() (omnixai.explainers.vision.specific.gradcam.gradcam.gradcam method)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM.explain"]], "explain() (omnixai.explainers.vision.specific.gradcam.gradcam.gradcamplus method)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus.explain"]], "explain() (omnixai.explainers.vision.specific.gradcam.gradcam.layercam method)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.LayerCAM.explain"]], "explain() (omnixai.explainers.vision.specific.guided_bp.guidedbp method)": [[24, "omnixai.explainers.vision.specific.guided_bp.GuidedBP.explain"]], "explain() (omnixai.explainers.vision.specific.ig.integratedgradientimage method)": [[24, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage.explain"]], "explain() (omnixai.explainers.vision.specific.smoothgrad.smoothgrad method)": [[24, "omnixai.explainers.vision.specific.smoothgrad.SmoothGrad.explain"]], "explanation_type (omnixai.explainers.vision.specific.cem.contrastiveexplainer attribute)": [[24, "omnixai.explainers.vision.specific.cem.ContrastiveExplainer.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.feature_visualization.visualizer.featuremapvisualizer attribute)": [[24, "omnixai.explainers.vision.specific.feature_visualization.visualizer.FeatureMapVisualizer.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.feature_visualization.visualizer.featurevisualizer attribute)": [[24, "omnixai.explainers.vision.specific.feature_visualization.visualizer.FeatureVisualizer.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.gradcam.gradcam.gradcam attribute)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAM.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.gradcam.gradcam.gradcamplus attribute)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.GradCAMPlus.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.gradcam.gradcam.layercam attribute)": [[24, "omnixai.explainers.vision.specific.gradcam.gradcam.LayerCAM.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.guided_bp.guidedbp attribute)": [[24, "omnixai.explainers.vision.specific.guided_bp.GuidedBP.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.ig.integratedgradientimage attribute)": [[24, "omnixai.explainers.vision.specific.ig.IntegratedGradientImage.explanation_type"]], "explanation_type (omnixai.explainers.vision.specific.smoothgrad.smoothgrad attribute)": [[24, "omnixai.explainers.vision.specific.smoothgrad.SmoothGrad.explanation_type"]], "omnixai.explainers.vision.specific": [[24, "module-omnixai.explainers.vision.specific"]], "omnixai.explainers.vision.specific.cem": [[24, "module-omnixai.explainers.vision.specific.cem"]], "omnixai.explainers.vision.specific.feature_visualization.visualizer": [[24, "module-omnixai.explainers.vision.specific.feature_visualization.visualizer"]], "omnixai.explainers.vision.specific.gradcam.gradcam": [[24, "module-omnixai.explainers.vision.specific.gradcam.gradcam"]], "omnixai.explainers.vision.specific.guided_bp": [[24, "module-omnixai.explainers.vision.specific.guided_bp"]], "omnixai.explainers.vision.specific.ig": [[24, "module-omnixai.explainers.vision.specific.ig"]], "omnixai.explainers.vision.specific.smoothgrad": [[24, "module-omnixai.explainers.vision.specific.smoothgrad"]], "pn_optimize() (omnixai.explainers.vision.specific.cem.cemoptimizer method)": [[24, "omnixai.explainers.vision.specific.cem.CEMOptimizer.pn_optimize"]], "pp_optimize() (omnixai.explainers.vision.specific.cem.cemoptimizer method)": [[24, "omnixai.explainers.vision.specific.cem.CEMOptimizer.pp_optimize"]], "dashfigure (class in omnixai.explanations.base)": [[25, "omnixai.explanations.base.DashFigure"]], "explanationbase (class in omnixai.explanations.base)": [[25, "omnixai.explanations.base.ExplanationBase"]], "predictedresults (class in omnixai.explanations.base)": [[25, "omnixai.explanations.base.PredictedResults"]], "dump() (omnixai.explanations.base.explanationbase method)": [[25, "omnixai.explanations.base.ExplanationBase.dump"]], "dumps() (omnixai.explanations.base.explanationbase method)": [[25, "omnixai.explanations.base.ExplanationBase.dumps"]], "from_dict() (omnixai.explanations.base.explanationbase class method)": [[25, "omnixai.explanations.base.ExplanationBase.from_dict"]], "from_dict() (omnixai.explanations.base.predictedresults class method)": [[25, "omnixai.explanations.base.PredictedResults.from_dict"]], "from_json() (omnixai.explanations.base.explanationbase class method)": [[25, "omnixai.explanations.base.ExplanationBase.from_json"]], "get_explanations() (omnixai.explanations.base.explanationbase method)": [[25, "omnixai.explanations.base.ExplanationBase.get_explanations"]], "get_explanations() (omnixai.explanations.base.predictedresults method)": [[25, "omnixai.explanations.base.PredictedResults.get_explanations"]], "ipython_plot() (omnixai.explanations.base.explanationbase method)": [[25, "omnixai.explanations.base.ExplanationBase.ipython_plot"]], "ipython_plot() (omnixai.explanations.base.predictedresults method)": [[25, "omnixai.explanations.base.PredictedResults.ipython_plot"]], "load() (omnixai.explanations.base.explanationbase method)": [[25, "omnixai.explanations.base.ExplanationBase.load"]], "loads() (omnixai.explanations.base.explanationbase method)": [[25, "omnixai.explanations.base.ExplanationBase.loads"]], "omnixai.explanations": [[25, "module-omnixai.explanations"]], "omnixai.explanations.base": [[25, "module-omnixai.explanations.base"]], "plot() (omnixai.explanations.base.explanationbase method)": [[25, "omnixai.explanations.base.ExplanationBase.plot"]], "plot() (omnixai.explanations.base.predictedresults method)": [[25, "omnixai.explanations.base.PredictedResults.plot"]], "plotly_plot() (omnixai.explanations.base.explanationbase method)": [[25, "omnixai.explanations.base.ExplanationBase.plotly_plot"]], "plotly_plot() (omnixai.explanations.base.predictedresults method)": [[25, "omnixai.explanations.base.PredictedResults.plotly_plot"]], "show() (omnixai.explanations.base.dashfigure method)": [[25, "omnixai.explanations.base.DashFigure.show"]], "to_html() (omnixai.explanations.base.dashfigure method)": [[25, "omnixai.explanations.base.DashFigure.to_html"]], "to_html_div() (omnixai.explanations.base.dashfigure method)": [[25, "omnixai.explanations.base.DashFigure.to_html_div"]], "to_json() (omnixai.explanations.base.explanationbase method)": [[25, "omnixai.explanations.base.ExplanationBase.to_json"]], "cfexplanation (class in omnixai.explanations.image.counterfactual)": [[26, "omnixai.explanations.image.counterfactual.CFExplanation"]], "contrastiveexplanation (class in omnixai.explanations.image.contrast)": [[26, "omnixai.explanations.image.contrast.ContrastiveExplanation"]], "maskexplanation (class in omnixai.explanations.image.mask)": [[26, "omnixai.explanations.image.mask.MaskExplanation"]], "pixelimportance (class in omnixai.explanations.image.pixel_importance)": [[26, "omnixai.explanations.image.pixel_importance.PixelImportance"]], "add() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[26, "omnixai.explanations.image.contrast.ContrastiveExplanation.add"]], "add() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[26, "omnixai.explanations.image.counterfactual.CFExplanation.add"]], "add() (omnixai.explanations.image.mask.maskexplanation method)": [[26, "omnixai.explanations.image.mask.MaskExplanation.add"]], "add() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[26, "omnixai.explanations.image.pixel_importance.PixelImportance.add"]], "from_dict() (omnixai.explanations.image.contrast.contrastiveexplanation class method)": [[26, "omnixai.explanations.image.contrast.ContrastiveExplanation.from_dict"]], "from_dict() (omnixai.explanations.image.counterfactual.cfexplanation class method)": [[26, "omnixai.explanations.image.counterfactual.CFExplanation.from_dict"]], "from_dict() (omnixai.explanations.image.mask.maskexplanation class method)": [[26, "omnixai.explanations.image.mask.MaskExplanation.from_dict"]], "from_dict() (omnixai.explanations.image.pixel_importance.pixelimportance class method)": [[26, "omnixai.explanations.image.pixel_importance.PixelImportance.from_dict"]], "get_explanations() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[26, "omnixai.explanations.image.contrast.ContrastiveExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[26, "omnixai.explanations.image.counterfactual.CFExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.image.mask.maskexplanation method)": [[26, "omnixai.explanations.image.mask.MaskExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[26, "omnixai.explanations.image.pixel_importance.PixelImportance.get_explanations"]], "ipython_plot() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[26, "omnixai.explanations.image.contrast.ContrastiveExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[26, "omnixai.explanations.image.counterfactual.CFExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.image.mask.maskexplanation method)": [[26, "omnixai.explanations.image.mask.MaskExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[26, "omnixai.explanations.image.pixel_importance.PixelImportance.ipython_plot"]], "omnixai.explanations.image": [[26, "module-omnixai.explanations.image"]], "omnixai.explanations.image.contrast": [[26, "module-omnixai.explanations.image.contrast"]], "omnixai.explanations.image.counterfactual": [[26, "module-omnixai.explanations.image.counterfactual"]], "omnixai.explanations.image.mask": [[26, "module-omnixai.explanations.image.mask"]], "omnixai.explanations.image.pixel_importance": [[26, "module-omnixai.explanations.image.pixel_importance"]], "plot() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[26, "omnixai.explanations.image.contrast.ContrastiveExplanation.plot"]], "plot() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[26, "omnixai.explanations.image.counterfactual.CFExplanation.plot"]], "plot() (omnixai.explanations.image.mask.maskexplanation method)": [[26, "omnixai.explanations.image.mask.MaskExplanation.plot"]], "plot() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[26, "omnixai.explanations.image.pixel_importance.PixelImportance.plot"]], "plotly_plot() (omnixai.explanations.image.contrast.contrastiveexplanation method)": [[26, "omnixai.explanations.image.contrast.ContrastiveExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.image.counterfactual.cfexplanation method)": [[26, "omnixai.explanations.image.counterfactual.CFExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.image.mask.maskexplanation method)": [[26, "omnixai.explanations.image.mask.MaskExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.image.pixel_importance.pixelimportance method)": [[26, "omnixai.explanations.image.pixel_importance.PixelImportance.plotly_plot"]], "cfexplanation (class in omnixai.explanations.tabular.counterfactual)": [[27, "omnixai.explanations.tabular.counterfactual.CFExplanation"]], "correlationexplanation (class in omnixai.explanations.tabular.correlation)": [[27, "omnixai.explanations.tabular.correlation.CorrelationExplanation"]], "featureimportance (class in omnixai.explanations.tabular.feature_importance)": [[27, "omnixai.explanations.tabular.feature_importance.FeatureImportance"]], "globalfeatureimportance (class in omnixai.explanations.tabular.feature_importance)": [[27, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance"]], "imbalanceexplanation (class in omnixai.explanations.tabular.imbalance)": [[27, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation"]], "linearexplanation (class in omnixai.explanations.tabular.linear)": [[27, "omnixai.explanations.tabular.linear.LinearExplanation"]], "pdpexplanation (class in omnixai.explanations.tabular.pdp)": [[27, "omnixai.explanations.tabular.pdp.PDPExplanation"]], "sensitivityexplanation (class in omnixai.explanations.tabular.sensitivity)": [[27, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation"]], "treeexplanation (class in omnixai.explanations.tabular.tree)": [[27, "omnixai.explanations.tabular.tree.TreeExplanation"]], "validityrankingexplanation (class in omnixai.explanations.tabular.validity)": [[27, "omnixai.explanations.tabular.validity.ValidityRankingExplanation"]], "add() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[27, "omnixai.explanations.tabular.correlation.CorrelationExplanation.add"]], "add() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[27, "omnixai.explanations.tabular.counterfactual.CFExplanation.add"]], "add() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[27, "omnixai.explanations.tabular.feature_importance.FeatureImportance.add"]], "add() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[27, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.add"]], "add() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[27, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.add"]], "add() (omnixai.explanations.tabular.linear.linearexplanation method)": [[27, "omnixai.explanations.tabular.linear.LinearExplanation.add"]], "add() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[27, "omnixai.explanations.tabular.pdp.PDPExplanation.add"]], "add() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[27, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.add"]], "add() (omnixai.explanations.tabular.validity.validityrankingexplanation method)": [[27, "omnixai.explanations.tabular.validity.ValidityRankingExplanation.add"]], "add_global() (omnixai.explanations.tabular.tree.treeexplanation method)": [[27, "omnixai.explanations.tabular.tree.TreeExplanation.add_global"]], "add_local() (omnixai.explanations.tabular.tree.treeexplanation method)": [[27, "omnixai.explanations.tabular.tree.TreeExplanation.add_local"]], "from_dict() (omnixai.explanations.tabular.correlation.correlationexplanation class method)": [[27, "omnixai.explanations.tabular.correlation.CorrelationExplanation.from_dict"]], "from_dict() (omnixai.explanations.tabular.counterfactual.cfexplanation class method)": [[27, "omnixai.explanations.tabular.counterfactual.CFExplanation.from_dict"]], "from_dict() (omnixai.explanations.tabular.feature_importance.featureimportance class method)": [[27, "omnixai.explanations.tabular.feature_importance.FeatureImportance.from_dict"]], "from_dict() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance class method)": [[27, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.from_dict"]], "from_dict() (omnixai.explanations.tabular.imbalance.imbalanceexplanation class method)": [[27, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.from_dict"]], "from_dict() (omnixai.explanations.tabular.linear.linearexplanation class method)": [[27, "omnixai.explanations.tabular.linear.LinearExplanation.from_dict"]], "from_dict() (omnixai.explanations.tabular.pdp.pdpexplanation class method)": [[27, "omnixai.explanations.tabular.pdp.PDPExplanation.from_dict"]], "from_dict() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation class method)": [[27, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.from_dict"]], "from_dict() (omnixai.explanations.tabular.tree.treeexplanation class method)": [[27, "omnixai.explanations.tabular.tree.TreeExplanation.from_dict"]], "from_dict() (omnixai.explanations.tabular.validity.validityrankingexplanation class method)": [[27, "omnixai.explanations.tabular.validity.ValidityRankingExplanation.from_dict"]], "get_explanations() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[27, "omnixai.explanations.tabular.correlation.CorrelationExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[27, "omnixai.explanations.tabular.counterfactual.CFExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[27, "omnixai.explanations.tabular.feature_importance.FeatureImportance.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[27, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[27, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.linear.linearexplanation method)": [[27, "omnixai.explanations.tabular.linear.LinearExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[27, "omnixai.explanations.tabular.pdp.PDPExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[27, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.tree.treeexplanation method)": [[27, "omnixai.explanations.tabular.tree.TreeExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.tabular.validity.validityrankingexplanation method)": [[27, "omnixai.explanations.tabular.validity.ValidityRankingExplanation.get_explanations"]], "ipython_plot() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[27, "omnixai.explanations.tabular.correlation.CorrelationExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[27, "omnixai.explanations.tabular.counterfactual.CFExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[27, "omnixai.explanations.tabular.feature_importance.FeatureImportance.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[27, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[27, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.linear.linearexplanation method)": [[27, "omnixai.explanations.tabular.linear.LinearExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[27, "omnixai.explanations.tabular.pdp.PDPExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[27, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.tree.treeexplanation method)": [[27, "omnixai.explanations.tabular.tree.TreeExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.tabular.validity.validityrankingexplanation method)": [[27, "omnixai.explanations.tabular.validity.ValidityRankingExplanation.ipython_plot"]], "omnixai.explanations.tabular": [[27, "module-omnixai.explanations.tabular"]], "omnixai.explanations.tabular.correlation": [[27, "module-omnixai.explanations.tabular.correlation"]], "omnixai.explanations.tabular.counterfactual": [[27, "module-omnixai.explanations.tabular.counterfactual"]], "omnixai.explanations.tabular.feature_importance": [[27, "module-omnixai.explanations.tabular.feature_importance"]], "omnixai.explanations.tabular.imbalance": [[27, "module-omnixai.explanations.tabular.imbalance"]], "omnixai.explanations.tabular.linear": [[27, "module-omnixai.explanations.tabular.linear"]], "omnixai.explanations.tabular.pdp": [[27, "module-omnixai.explanations.tabular.pdp"]], "omnixai.explanations.tabular.sensitivity": [[27, "module-omnixai.explanations.tabular.sensitivity"]], "omnixai.explanations.tabular.tree": [[27, "module-omnixai.explanations.tabular.tree"]], "omnixai.explanations.tabular.validity": [[27, "module-omnixai.explanations.tabular.validity"]], "plot() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[27, "omnixai.explanations.tabular.correlation.CorrelationExplanation.plot"]], "plot() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[27, "omnixai.explanations.tabular.counterfactual.CFExplanation.plot"]], "plot() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[27, "omnixai.explanations.tabular.feature_importance.FeatureImportance.plot"]], "plot() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[27, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.plot"]], "plot() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[27, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.plot"]], "plot() (omnixai.explanations.tabular.linear.linearexplanation method)": [[27, "omnixai.explanations.tabular.linear.LinearExplanation.plot"]], "plot() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[27, "omnixai.explanations.tabular.pdp.PDPExplanation.plot"]], "plot() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[27, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.plot"]], "plot() (omnixai.explanations.tabular.tree.treeexplanation method)": [[27, "omnixai.explanations.tabular.tree.TreeExplanation.plot"]], "plot() (omnixai.explanations.tabular.validity.validityrankingexplanation method)": [[27, "omnixai.explanations.tabular.validity.ValidityRankingExplanation.plot"]], "plotly_plot() (omnixai.explanations.tabular.correlation.correlationexplanation method)": [[27, "omnixai.explanations.tabular.correlation.CorrelationExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.counterfactual.cfexplanation method)": [[27, "omnixai.explanations.tabular.counterfactual.CFExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.feature_importance.featureimportance method)": [[27, "omnixai.explanations.tabular.feature_importance.FeatureImportance.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.feature_importance.globalfeatureimportance method)": [[27, "omnixai.explanations.tabular.feature_importance.GlobalFeatureImportance.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.imbalance.imbalanceexplanation method)": [[27, "omnixai.explanations.tabular.imbalance.ImbalanceExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.linear.linearexplanation method)": [[27, "omnixai.explanations.tabular.linear.LinearExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.pdp.pdpexplanation method)": [[27, "omnixai.explanations.tabular.pdp.PDPExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.sensitivity.sensitivityexplanation method)": [[27, "omnixai.explanations.tabular.sensitivity.SensitivityExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.tree.treeexplanation method)": [[27, "omnixai.explanations.tabular.tree.TreeExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.tabular.validity.validityrankingexplanation method)": [[27, "omnixai.explanations.tabular.validity.ValidityRankingExplanation.plotly_plot"]], "rearrange_columns() (omnixai.explanations.tabular.validity.validityrankingexplanation static method)": [[27, "omnixai.explanations.tabular.validity.ValidityRankingExplanation.rearrange_columns"]], "to_json() (omnixai.explanations.tabular.tree.treeexplanation method)": [[27, "omnixai.explanations.tabular.tree.TreeExplanation.to_json"]], "wordimportance (class in omnixai.explanations.text.word_importance)": [[28, "omnixai.explanations.text.word_importance.WordImportance"]], "add() (omnixai.explanations.text.word_importance.wordimportance method)": [[28, "omnixai.explanations.text.word_importance.WordImportance.add"]], "from_dict() (omnixai.explanations.text.word_importance.wordimportance class method)": [[28, "omnixai.explanations.text.word_importance.WordImportance.from_dict"]], "get_explanations() (omnixai.explanations.text.word_importance.wordimportance method)": [[28, "omnixai.explanations.text.word_importance.WordImportance.get_explanations"]], "ipython_plot() (omnixai.explanations.text.word_importance.wordimportance method)": [[28, "omnixai.explanations.text.word_importance.WordImportance.ipython_plot"]], "omnixai.explanations.text": [[28, "module-omnixai.explanations.text"]], "omnixai.explanations.text.word_importance": [[28, "module-omnixai.explanations.text.word_importance"]], "plot() (omnixai.explanations.text.word_importance.wordimportance method)": [[28, "omnixai.explanations.text.word_importance.WordImportance.plot"]], "plotly_plot() (omnixai.explanations.text.word_importance.wordimportance method)": [[28, "omnixai.explanations.text.word_importance.WordImportance.plotly_plot"]], "cfexplanation (class in omnixai.explanations.timeseries.counterfactual)": [[29, "omnixai.explanations.timeseries.counterfactual.CFExplanation"]], "featureimportance (class in omnixai.explanations.timeseries.feature_importance)": [[29, "omnixai.explanations.timeseries.feature_importance.FeatureImportance"]], "add() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[29, "omnixai.explanations.timeseries.counterfactual.CFExplanation.add"]], "add() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[29, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.add"]], "from_dict() (omnixai.explanations.timeseries.counterfactual.cfexplanation class method)": [[29, "omnixai.explanations.timeseries.counterfactual.CFExplanation.from_dict"]], "from_dict() (omnixai.explanations.timeseries.feature_importance.featureimportance class method)": [[29, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.from_dict"]], "get_explanations() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[29, "omnixai.explanations.timeseries.counterfactual.CFExplanation.get_explanations"]], "get_explanations() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[29, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.get_explanations"]], "ipython_plot() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[29, "omnixai.explanations.timeseries.counterfactual.CFExplanation.ipython_plot"]], "ipython_plot() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[29, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.ipython_plot"]], "omnixai.explanations.timeseries": [[29, "module-omnixai.explanations.timeseries"]], "omnixai.explanations.timeseries.counterfactual": [[29, "module-omnixai.explanations.timeseries.counterfactual"]], "omnixai.explanations.timeseries.feature_importance": [[29, "module-omnixai.explanations.timeseries.feature_importance"]], "plot() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[29, "omnixai.explanations.timeseries.counterfactual.CFExplanation.plot"]], "plot() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[29, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.plot"]], "plotly_plot() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[29, "omnixai.explanations.timeseries.counterfactual.CFExplanation.plotly_plot"]], "plotly_plot() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[29, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.plotly_plot"]], "to_json() (omnixai.explanations.timeseries.counterfactual.cfexplanation method)": [[29, "omnixai.explanations.timeseries.counterfactual.CFExplanation.to_json"]], "to_json() (omnixai.explanations.timeseries.feature_importance.featureimportance method)": [[29, "omnixai.explanations.timeseries.feature_importance.FeatureImportance.to_json"]], "fillnan (class in omnixai.preprocessing.fill)": [[30, "omnixai.preprocessing.fill.FillNaN"]], "fillnantabular (class in omnixai.preprocessing.fill)": [[30, "omnixai.preprocessing.fill.FillNaNTabular"]], "identity (class in omnixai.preprocessing.base)": [[30, "omnixai.preprocessing.base.Identity"]], "kbins (class in omnixai.preprocessing.encode)": [[30, "omnixai.preprocessing.encode.KBins"]], "labelencoder (class in omnixai.preprocessing.encode)": [[30, "omnixai.preprocessing.encode.LabelEncoder"]], "minmax (class in omnixai.preprocessing.normalize)": [[30, "omnixai.preprocessing.normalize.MinMax"]], "normalize (class in omnixai.preprocessing.image)": [[30, "omnixai.preprocessing.image.Normalize"]], "onehot (class in omnixai.preprocessing.encode)": [[30, "omnixai.preprocessing.encode.OneHot"]], "ordinal (class in omnixai.preprocessing.encode)": [[30, "omnixai.preprocessing.encode.Ordinal"]], "pad (omnixai.preprocessing.text.word2id attribute)": [[30, "omnixai.preprocessing.text.Word2Id.PAD"]], "pipeline (class in omnixai.preprocessing.pipeline)": [[30, "omnixai.preprocessing.pipeline.Pipeline"]], "resize (class in omnixai.preprocessing.image)": [[30, "omnixai.preprocessing.image.Resize"]], "round2int (class in omnixai.preprocessing.image)": [[30, "omnixai.preprocessing.image.Round2Int"]], "start (omnixai.preprocessing.text.word2id attribute)": [[30, "omnixai.preprocessing.text.Word2Id.START"]], "sampler (class in omnixai.sampler.tabular)": [[30, "omnixai.sampler.tabular.Sampler"]], "scale (class in omnixai.preprocessing.image)": [[30, "omnixai.preprocessing.image.Scale"]], "scale (class in omnixai.preprocessing.normalize)": [[30, "omnixai.preprocessing.normalize.Scale"]], "standard (class in omnixai.preprocessing.normalize)": [[30, "omnixai.preprocessing.normalize.Standard"]], "tabulartransform (class in omnixai.preprocessing.tabular)": [[30, "omnixai.preprocessing.tabular.TabularTransform"]], "tfidf (class in omnixai.preprocessing.text)": [[30, "omnixai.preprocessing.text.Tfidf"]], "transformbase (class in omnixai.preprocessing.base)": [[30, "omnixai.preprocessing.base.TransformBase"]], "unk (omnixai.preprocessing.text.word2id attribute)": [[30, "omnixai.preprocessing.text.Word2Id.UNK"]], "word2id (class in omnixai.preprocessing.text)": [[30, "omnixai.preprocessing.text.Word2Id"]], "categories (omnixai.preprocessing.encode.labelencoder property)": [[30, "omnixai.preprocessing.encode.LabelEncoder.categories"]], "categories (omnixai.preprocessing.encode.onehot property)": [[30, "omnixai.preprocessing.encode.OneHot.categories"]], "categories (omnixai.preprocessing.encode.ordinal property)": [[30, "omnixai.preprocessing.encode.Ordinal.categories"]], "categories (omnixai.preprocessing.tabular.tabulartransform property)": [[30, "omnixai.preprocessing.tabular.TabularTransform.categories"]], "class_names (omnixai.preprocessing.tabular.tabulartransform property)": [[30, "omnixai.preprocessing.tabular.TabularTransform.class_names"]], "decompose() (omnixai.preprocessing.tabular.tabulartransform method)": [[30, "omnixai.preprocessing.tabular.TabularTransform.decompose"]], "dump() (omnixai.preprocessing.pipeline.pipeline method)": [[30, "omnixai.preprocessing.pipeline.Pipeline.dump"]], "fit() (omnixai.preprocessing.base.identity method)": [[30, "omnixai.preprocessing.base.Identity.fit"]], "fit() (omnixai.preprocessing.base.transformbase method)": [[30, "omnixai.preprocessing.base.TransformBase.fit"]], "fit() (omnixai.preprocessing.encode.kbins method)": [[30, "omnixai.preprocessing.encode.KBins.fit"]], "fit() (omnixai.preprocessing.encode.labelencoder method)": [[30, "omnixai.preprocessing.encode.LabelEncoder.fit"]], "fit() (omnixai.preprocessing.encode.onehot method)": [[30, "omnixai.preprocessing.encode.OneHot.fit"]], "fit() (omnixai.preprocessing.encode.ordinal method)": [[30, "omnixai.preprocessing.encode.Ordinal.fit"]], "fit() (omnixai.preprocessing.fill.fillnan method)": [[30, "omnixai.preprocessing.fill.FillNaN.fit"]], "fit() (omnixai.preprocessing.fill.fillnantabular method)": [[30, "omnixai.preprocessing.fill.FillNaNTabular.fit"]], "fit() (omnixai.preprocessing.image.normalize method)": [[30, "omnixai.preprocessing.image.Normalize.fit"]], "fit() (omnixai.preprocessing.image.resize method)": [[30, "omnixai.preprocessing.image.Resize.fit"]], "fit() (omnixai.preprocessing.image.round2int method)": [[30, "omnixai.preprocessing.image.Round2Int.fit"]], "fit() (omnixai.preprocessing.image.scale method)": [[30, "omnixai.preprocessing.image.Scale.fit"]], "fit() (omnixai.preprocessing.normalize.minmax method)": [[30, "omnixai.preprocessing.normalize.MinMax.fit"]], "fit() (omnixai.preprocessing.normalize.scale method)": [[30, "omnixai.preprocessing.normalize.Scale.fit"]], "fit() (omnixai.preprocessing.normalize.standard method)": [[30, "omnixai.preprocessing.normalize.Standard.fit"]], "fit() (omnixai.preprocessing.pipeline.pipeline method)": [[30, "omnixai.preprocessing.pipeline.Pipeline.fit"]], "fit() (omnixai.preprocessing.tabular.tabulartransform method)": [[30, "omnixai.preprocessing.tabular.TabularTransform.fit"]], "fit() (omnixai.preprocessing.text.tfidf method)": [[30, "omnixai.preprocessing.text.Tfidf.fit"]], "fit() (omnixai.preprocessing.text.word2id method)": [[30, "omnixai.preprocessing.text.Word2Id.fit"]], "get_feature_names() (omnixai.preprocessing.encode.onehot method)": [[30, "omnixai.preprocessing.encode.OneHot.get_feature_names"]], "get_feature_names() (omnixai.preprocessing.tabular.tabulartransform method)": [[30, "omnixai.preprocessing.tabular.TabularTransform.get_feature_names"]], "get_feature_names() (omnixai.preprocessing.text.tfidf method)": [[30, "omnixai.preprocessing.text.Tfidf.get_feature_names"]], "invert() (omnixai.preprocessing.base.identity method)": [[30, "omnixai.preprocessing.base.Identity.invert"]], "invert() (omnixai.preprocessing.base.transformbase method)": [[30, "omnixai.preprocessing.base.TransformBase.invert"]], "invert() (omnixai.preprocessing.encode.kbins method)": [[30, "omnixai.preprocessing.encode.KBins.invert"]], "invert() (omnixai.preprocessing.encode.labelencoder method)": [[30, "omnixai.preprocessing.encode.LabelEncoder.invert"]], "invert() (omnixai.preprocessing.encode.onehot method)": [[30, "omnixai.preprocessing.encode.OneHot.invert"]], "invert() (omnixai.preprocessing.encode.ordinal method)": [[30, "omnixai.preprocessing.encode.Ordinal.invert"]], "invert() (omnixai.preprocessing.fill.fillnan method)": [[30, "omnixai.preprocessing.fill.FillNaN.invert"]], "invert() (omnixai.preprocessing.fill.fillnantabular method)": [[30, "omnixai.preprocessing.fill.FillNaNTabular.invert"]], "invert() (omnixai.preprocessing.image.normalize method)": [[30, "omnixai.preprocessing.image.Normalize.invert"]], "invert() (omnixai.preprocessing.image.resize method)": [[30, "omnixai.preprocessing.image.Resize.invert"]], "invert() (omnixai.preprocessing.image.round2int method)": [[30, "omnixai.preprocessing.image.Round2Int.invert"]], "invert() (omnixai.preprocessing.image.scale method)": [[30, "omnixai.preprocessing.image.Scale.invert"]], "invert() (omnixai.preprocessing.normalize.minmax method)": [[30, "omnixai.preprocessing.normalize.MinMax.invert"]], "invert() (omnixai.preprocessing.normalize.scale method)": [[30, "omnixai.preprocessing.normalize.Scale.invert"]], "invert() (omnixai.preprocessing.normalize.standard method)": [[30, "omnixai.preprocessing.normalize.Standard.invert"]], "invert() (omnixai.preprocessing.pipeline.pipeline method)": [[30, "omnixai.preprocessing.pipeline.Pipeline.invert"]], "invert() (omnixai.preprocessing.tabular.tabulartransform method)": [[30, "omnixai.preprocessing.tabular.TabularTransform.invert"]], "invert() (omnixai.preprocessing.text.tfidf method)": [[30, "omnixai.preprocessing.text.Tfidf.invert"]], "invert() (omnixai.preprocessing.text.word2id method)": [[30, "omnixai.preprocessing.text.Word2Id.invert"]], "load() (omnixai.preprocessing.pipeline.pipeline method)": [[30, "omnixai.preprocessing.pipeline.Pipeline.load"]], "name (omnixai.preprocessing.pipeline.pipeline attribute)": [[30, "omnixai.preprocessing.pipeline.Pipeline.name"]], "omnixai.preprocessing": [[30, "module-omnixai.preprocessing"]], "omnixai.preprocessing.base": [[30, "module-omnixai.preprocessing.base"]], "omnixai.preprocessing.encode": [[30, "module-omnixai.preprocessing.encode"]], "omnixai.preprocessing.fill": [[30, "module-omnixai.preprocessing.fill"]], "omnixai.preprocessing.image": [[30, "module-omnixai.preprocessing.image"]], "omnixai.preprocessing.normalize": [[30, "module-omnixai.preprocessing.normalize"]], "omnixai.preprocessing.pipeline": [[30, "module-omnixai.preprocessing.pipeline"]], "omnixai.preprocessing.tabular": [[30, "module-omnixai.preprocessing.tabular"]], "omnixai.preprocessing.text": [[30, "module-omnixai.preprocessing.text"]], "omnixai.sampler.tabular": [[30, "module-omnixai.sampler.tabular"]], "oversample() (omnixai.sampler.tabular.sampler static method)": [[30, "omnixai.sampler.tabular.Sampler.oversample"]], "step() (omnixai.preprocessing.pipeline.pipeline method)": [[30, "omnixai.preprocessing.pipeline.Pipeline.step"]], "subsample() (omnixai.sampler.tabular.sampler static method)": [[30, "omnixai.sampler.tabular.Sampler.subsample"]], "transform() (omnixai.preprocessing.base.identity method)": [[30, "omnixai.preprocessing.base.Identity.transform"]], "transform() (omnixai.preprocessing.base.transformbase method)": [[30, "omnixai.preprocessing.base.TransformBase.transform"]], "transform() (omnixai.preprocessing.encode.kbins method)": [[30, "omnixai.preprocessing.encode.KBins.transform"]], "transform() (omnixai.preprocessing.encode.labelencoder method)": [[30, "omnixai.preprocessing.encode.LabelEncoder.transform"]], "transform() (omnixai.preprocessing.encode.onehot method)": [[30, "omnixai.preprocessing.encode.OneHot.transform"]], "transform() (omnixai.preprocessing.encode.ordinal method)": [[30, "omnixai.preprocessing.encode.Ordinal.transform"]], "transform() (omnixai.preprocessing.fill.fillnan method)": [[30, "omnixai.preprocessing.fill.FillNaN.transform"]], "transform() (omnixai.preprocessing.fill.fillnantabular method)": [[30, "omnixai.preprocessing.fill.FillNaNTabular.transform"]], "transform() (omnixai.preprocessing.image.normalize method)": [[30, "omnixai.preprocessing.image.Normalize.transform"]], "transform() (omnixai.preprocessing.image.resize method)": [[30, "omnixai.preprocessing.image.Resize.transform"]], "transform() (omnixai.preprocessing.image.round2int method)": [[30, "omnixai.preprocessing.image.Round2Int.transform"]], "transform() (omnixai.preprocessing.image.scale method)": [[30, "omnixai.preprocessing.image.Scale.transform"]], "transform() (omnixai.preprocessing.normalize.minmax method)": [[30, "omnixai.preprocessing.normalize.MinMax.transform"]], "transform() (omnixai.preprocessing.normalize.scale method)": [[30, "omnixai.preprocessing.normalize.Scale.transform"]], "transform() (omnixai.preprocessing.normalize.standard method)": [[30, "omnixai.preprocessing.normalize.Standard.transform"]], "transform() (omnixai.preprocessing.pipeline.pipeline method)": [[30, "omnixai.preprocessing.pipeline.Pipeline.transform"]], "transform() (omnixai.preprocessing.tabular.tabulartransform method)": [[30, "omnixai.preprocessing.tabular.TabularTransform.transform"]], "transform() (omnixai.preprocessing.text.tfidf method)": [[30, "omnixai.preprocessing.text.Tfidf.transform"]], "transform() (omnixai.preprocessing.text.word2id method)": [[30, "omnixai.preprocessing.text.Word2Id.transform"]], "undersample() (omnixai.sampler.tabular.sampler static method)": [[30, "omnixai.sampler.tabular.Sampler.undersample"]], "vocab_size (omnixai.preprocessing.text.word2id property)": [[30, "omnixai.preprocessing.text.Word2Id.vocab_size"]], "dashboard (class in omnixai.visualization.dashboard)": [[31, "omnixai.visualization.dashboard.Dashboard"]], "omnixai.visualization": [[31, "module-omnixai.visualization"]], "omnixai.visualization.dashboard": [[31, "module-omnixai.visualization.dashboard"]], "show() (omnixai.visualization.dashboard.dashboard method)": [[31, "omnixai.visualization.dashboard.Dashboard.show"]]}})